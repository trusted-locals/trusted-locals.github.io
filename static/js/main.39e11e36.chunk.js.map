{"version":3,"sources":["app/AppRoute.tsx","components/DelayedFallback.tsx","features/feed/Feed.tsx","features/feed/FeedHeader.tsx","utils/dom-utils.ts","features/feed/FeedPage.tsx","components/TabBarButton.tsx","components/TabBar.tsx","app/WelcomeDrawer.tsx","app/App.tsx","app/store.ts","serviceWorker.ts","index.tsx","features/feed/feedSlice.ts","utils/fetch.ts","features/user/userSlice.ts","app/styles.tsx","app/router.ts","features/feed/mocks.ts","components/Author.tsx","components/TimeAgo.tsx","features/feed/PostInfo.tsx","features/submit/submitSlice.ts","features/feed/Post.tsx","components/Rating.tsx","features/feed/Comment.tsx","features/feed/DetailView.tsx"],"names":["UserState","DelayedFallback","useState","show","setShow","useEffect","timeout","setTimeout","clearTimeout","Spinner","label","AppRoute","children","lazyload","path","redirect","isLoggedIn","useSelector","selectIsLoggedIn","when","LoggedIn","LoggedOut","to","pathname","Component","fallback","Feed","category","dispatch","useDispatch","state","selectPostsByCategory","async","posts","searchValue","selectSearchValue","error","loadRequested","loading","Object","keys","length","Box","display","gridTemplateColumns","gridGap","marginTop","sort","postA","postB","date","sortedPosts","filter","post","title","toLowerCase","includes","filteredPosts","filteredAndSortedPosts","values","map","Post","key","postID","Location","profile","selectOwnProfile","Text","as","fontWeight","textDecoration","cityName","FeedHeader","_props","React","modalIsOpen","setModalIsOpen","responsiveBoxProps","color","fontSize","firstName","cursor","onClick","InputGroup","Icon","name","Input","aria-label","id","maxWidth","onChange","target","value","changedSearchValue","placeholder","type","Modal","isOpen","onClose","Button","variantColor","size","getBodyFontSize","getComputedStyle","document","querySelector","tabs","FeedPage","useLocation","previousPathname","usePrevious","tabsSize","widthPX","parseFloat","convertWidthToEM","useWindowWidth","leading","wait","Tabs","width","aria-controls","aria-selected","Link","tabIndex","outline","exact","render","props","DetailView","from","TabBarButton","ariaLabel","icon","isActive","alignItems","flexDirection","paddingY","IconButton","variant","Submit","lazy","then","default","Profile","Account","Login","ResetPassword","Registration","Page404","buttons","home","submit","account","loggedInButtons","loggedOutButtons","TabBar","loggedIn","location","backgroundColor","borderTop","borderColor","bottom","position","zIndex","buttonProps","flex","startsWith","WelcomeDrawer","showDemoButtonRef","useRef","isVisible","setIsVisible","shouldHide","search","localStorage","setItem","getItem","Drawer","initialFocusRef","isFullHeight","placement","scrollBehavior","margin","Image","alt","src","Heading","ref","App","ThemeProvider","theme","CSSReset","basename","ROUTER_BASENAME","history","marginBottom","rootReducer","combineReducers","feed","feedReducer","submitReducer","user","userReducer","store","configureStore","reducer","Boolean","window","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message","createAsyncThunk","Promise","resolve","MOCKED_CATEGORIES","postRequested","MOCKED_POSTS","requestedPostsByIDs","postIDs","reduce","acc","slice","createSlice","initialState","categories","advice","grocery","medical_supply","news","reducers","action","payload","extraReducers","submitted","fulfilled","body","meta","arg","comments","Date","imageURL","image","rating","text","userImageURL","username","forEach","c","push","pending","categoryArg","normalizedPosts","assign","rejected","_state","_action","selectPostByID","createSelector","selectPostsByIDs","categoryState","actions","DEFAULT_OPTIONS","credentials","headers","fetch","options","response","json","ok","Error","errorMessage","OPENED_OWN_PROFILE_PENDING","OPENED_OWN_PROFILE_FULFILLED","OPENED_OWN_PROFILE_REJECTED","MOCKED_OWN_PROFILE","email","lastName","postsCount","PROFILE_IMAGE_OLIVER_MICKE","MOCKED_OTHER_PROFILES","emily_rose28","PROFILE_IMAGE_EMILY_ROSE28","JSON","stringify","method","data","registered","openedOtherProfile","otherProfile","loggedOut","thunks","requestedPostsOfUser","isOwnProfile","userNameParam","_getState","selectAsync","selectOtherProfile","selectOwnUsername","marginX","chakraTheme","icons","ioMdEye","viewBox","ioMdEyeOff","mdAdd","mdHome","mdPerson","createHashHistory","1","2","comment","commentID","3","4","5","6","ChakraLink","Author","style","profilePath","RouterLink","Avatar","marginRight","TimeAgo","intervalType","seconds","Math","floor","interval","timeSince","PostInfo","height","Divider","orientation","_body","paddingProps","padding","FALLBACK_IMAGE_URL","detailViewRedirectToProfile","linkToDetailView","boxShadow","borderRadius","background","borderTopRightRadius","_hover","borderTopLeftRadius","objectFit","shouldShowDescription","marginLeft","NOT_CONFIDENT","Rating","boxProps","labelProps","colorForRating","circularRating","trackColor","descriptionForRating","Comment","shadow","CATEGORY_NAMES","CATEGORY_LINKS","isIOS","test","platform","maxTouchPoints","MSStream","useHistory","toast","useToast","ownProfile","params","parseInt","nextPath","footerContent","onVote","description","status","duration","isClosable","event","stopPropagation","Tag","role","maxHeight","commentA","commentB","rounded","justifyContent"],"mappings":"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","file":"static/js/main.39e11e36.chunk.js","sourcesContent":["import React, { FC, ReactElement, Suspense } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Redirect, Route } from 'react-router-dom';\n\nimport { DelayedFallback } from '../components/DelayedFallback';\n\nimport { selectIsLoggedIn } from '../features/user/userSlice';\n\nimport { AppRoutes } from './router';\n\nexport enum UserState {\n  LoggedIn,\n  LoggedOut,\n}\n\ntype Props = {\n  children: ReactElement;\n  lazyload: boolean;\n  path: AppRoutes | null;\n  redirect?: {\n    path: AppRoutes;\n    when: UserState;\n  };\n};\n\nexport const AppRoute: FC<Props> = ({ children, lazyload, path, redirect }: Props) => {\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const shouldRedirect =\n    (redirect?.when === UserState.LoggedIn && isLoggedIn) || (redirect?.when === UserState.LoggedOut && !isLoggedIn);\n  if (shouldRedirect) {\n    return <Redirect to={{ pathname: redirect?.path }} />;\n  }\n\n  const Component = <Route path={path || ''}>{children}</Route>;\n  return lazyload ? <Suspense fallback={<DelayedFallback />}>{Component}</Suspense> : Component;\n};\n","import React, { FC, useEffect, useState } from 'react';\nimport { Spinner } from '@chakra-ui/core';\n\nexport const DelayedFallback: FC = () => {\n  const [show, setShow] = useState(false);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => setShow(true), 500);\n    return (): void => {\n      clearTimeout(timeout);\n    };\n  }, []);\n\n  return <>{show && <Spinner label='Loading...' />}</>;\n};\n","import React, { FC, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Box } from '@chakra-ui/core';\n\nimport { Post } from './Post';\nimport { Category, loadRequested, Post as PostType, selectPostsByCategory, selectSearchValue } from './feedSlice';\n\nimport { RootState } from '../../app/store';\n\ntype Props = {\n  category: Category;\n};\n\nconst filteredPosts = (posts: PostType[], searchValue: string): PostType[] =>\n  posts.filter((post) => post.title.toLowerCase().includes(searchValue));\n\nconst sortedPosts = (posts: PostType[]): PostType[] => posts.sort((postA, postB) => (postA.date > postB.date ? -1 : 1));\n\nconst filteredAndSortedPosts = (posts: PostType[], searchValue: string): PostType[] =>\n  sortedPosts(filteredPosts(posts, searchValue));\n\nexport const Feed: FC<Props> = ({ category }: Props) => {\n  const dispatch = useDispatch();\n  const { async, posts } = useSelector((state: RootState) => selectPostsByCategory(state, category));\n  const searchValue = useSelector(selectSearchValue);\n\n  useEffect(() => {\n    if (async.error === null && posts === null) {\n      dispatch(loadRequested(category));\n    }\n  }, [async, category, dispatch, posts]);\n\n  if (async.error) {\n    // TODO:\n    return <h1>An error occured</h1>;\n  }\n\n  if (async.loading === 'pending') {\n    // TODO:\n    return <h1>Loading...</h1>;\n  }\n\n  if (posts === null) {\n    return <>TODO: Loading state</>;\n  }\n\n  if (Object.keys(posts).length === 0) {\n    return <>TODO: Empty state</>;\n  }\n\n  return (\n    <Box\n      display='grid'\n      gridTemplateColumns={['100%', 'repeat(2, 1fr)', 'repeat(3, 1fr)', 'repeat(4, 1fr)']}\n      gridGap={8}\n      marginTop={8}\n    >\n      {filteredAndSortedPosts(Object.values(posts), searchValue).map((post: PostType) => (\n        <Post key={post.postID} {...post} />\n      ))}\n    </Box>\n  );\n};\n","import React, { FC } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link as RouterLink } from 'react-router-dom';\nimport {\n  Box,\n  Button,\n  Icon,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Text,\n} from '@chakra-ui/core';\n\nimport { changedSearchValue } from './feedSlice';\nimport { selectOwnProfile } from '../user/userSlice';\n\nimport { responsiveBoxProps } from '../../app/styles';\n\nimport { AppRoutes } from '../../app/router';\n\ntype Props = {};\n\nconst INPUT_PLACEHOLDER = 'Use keywords to search for information';\n\nconst Location: FC<{}> = () => {\n  const profile = useSelector(selectOwnProfile).profile ?? null;\n\n  if (profile === null) {\n    return null;\n  }\n\n  return (\n    <Text as='a' fontWeight='semibold' textDecoration='underline'>\n      {profile.cityName}\n    </Text>\n  );\n};\n\nexport const FeedHeader: FC<Props> = (_props: Props) => {\n  const dispatch = useDispatch();\n  const profile = useSelector(selectOwnProfile).profile ?? null;\n\n  const [modalIsOpen, setModalIsOpen] = React.useState(false);\n  const onModalClose = (): void => {\n    setModalIsOpen(false);\n  };\n\n  if (!profile) {\n    return (\n      <Box {...responsiveBoxProps}>\n        <p>Sign in to vote and contribute.</p>\n        <RouterLink to={'/account/login' as AppRoutes}>\n          <Button marginTop={4} size='sm' variantColor='green'>\n            Sign in\n          </Button>\n        </RouterLink>\n      </Box>\n    );\n  }\n\n  return (\n    <Box {...responsiveBoxProps}>\n      <Text color='gray.600' fontSize='lg'>\n        Good morning, {profile.firstName || profile.cityName}\n      </Text>\n      <Text\n        color='gray.600'\n        cursor='pointer'\n        fontSize='lg'\n        marginTop={1}\n        onClick={(): void => {\n          setModalIsOpen(true);\n        }}\n      >\n        Here are the latest for <Location />\n      </Text>\n      <InputGroup marginTop={4}>\n        <InputLeftElement>\n          <Icon color='gray.400' name='search' />\n        </InputLeftElement>\n        <Input\n          aria-label='feed search'\n          id='feed-search'\n          fontSize={['xs', 'sm', 'md']}\n          maxWidth={400}\n          // @ts-ignore\n          onChange={({ target }): void => {\n            const searchValue = target.value.toLowerCase();\n            dispatch(changedSearchValue({ searchValue }));\n          }}\n          placeholder={INPUT_PLACEHOLDER}\n          type='text'\n        />\n      </InputGroup>\n\n      <Modal isOpen={modalIsOpen} onClose={onModalClose}>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Changing the feed&apos;s location</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            <Text fontWeight='semibold'>Not yet implemented</Text>\n            <Text marginTop={4}>\n              Here you will be able to change the feed&apos;s location and see posts from all over the world. However,\n              creating posts and validating other posts is restricted to your location.\n            </Text>\n          </ModalBody>\n\n          <ModalFooter>\n            <Button\n              onClick={(): void => {\n                setModalIsOpen(false);\n              }}\n              variantColor='green'\n            >\n              OK\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </Box>\n  );\n};\n","export const convertWidthToEM = (widthPX: number): number => widthPX / parseFloat(getBodyFontSize());\n\n// @ts-ignore\nconst getBodyFontSize = (): string => getComputedStyle(document.querySelector('body'))['font-size'];\n","import React, { FC } from 'react';\nimport { Link, Redirect, Route, Switch, useLocation } from 'react-router-dom';\nimport { Box, Tab, TabList, TabPanels, Tabs, usePrevious } from '@chakra-ui/core';\nimport { useWindowWidth } from '@react-hook/window-size';\n\nimport { DetailView } from './DetailView';\nimport { Feed } from './Feed';\nimport { FeedHeader } from './FeedHeader';\n\nimport { Category } from './feedSlice';\n\nimport { responsiveBoxProps } from '../../app/styles';\n\nimport { convertWidthToEM } from '../../utils/dom-utils';\n\nconst ARIA_TABS = 'tabs';\nconst ARIA_NEWS_TAB = 'tabs-news-tab';\nconst ARIA_MEDICAL_SUPPLY_TAB = 'tabs-medical-supply-tab';\nconst ARIA_GROCERY_TAB = 'tabs-grocery-tab';\nconst ARIA_ADVICE_TAB = 'tabs-advice-tab';\n\nconst NEWS_PATH = '/feed/news';\nconst MEDICAL_SUPPLY_PATH = '/feed/medical-supply';\nconst GROCERY_PATH = '/feed/grocery';\nconst ADVICE_PATH = '/feed/advice';\n\nconst tabs: {\n  category: Category;\n  id: string;\n  name: string;\n  to: string;\n}[] = [\n  { category: 'news', id: ARIA_NEWS_TAB, name: 'News', to: NEWS_PATH },\n  { category: 'medical_supply', id: ARIA_MEDICAL_SUPPLY_TAB, name: 'Medical Supply', to: MEDICAL_SUPPLY_PATH },\n  { category: 'grocery', id: ARIA_GROCERY_TAB, name: 'Grocery', to: GROCERY_PATH },\n  { category: 'advice', id: ARIA_ADVICE_TAB, name: 'Advice', to: ADVICE_PATH },\n];\n\n// Taken from theme.breakpoints\nconst TABS_SIZE_BREAKPOINT_EM = 30;\n\nexport const FeedPage: FC = () => {\n  const { pathname } = useLocation();\n  const previousPathname = usePrevious(pathname);\n\n  // Workaround for showing smaller text on mobile.\n  const widthPX = useWindowWidth(0, { leading: true, wait: 250 });\n  const widthEM = convertWidthToEM(widthPX);\n  const tabsSize = widthEM <= TABS_SIZE_BREAKPOINT_EM ? 'sm' : 'md';\n\n  return (\n    <Box marginTop={2}>\n      <FeedHeader />\n      <Tabs marginTop={[6, 6, 8]} size={tabsSize} variantColor='green'>\n        <TabList id={ARIA_TABS} {...responsiveBoxProps} width={['100%', '100%', '90%', '80%', '70%']}>\n          {tabs.map(({ id, name, to }) => (\n            <Tab\n              aria-controls={ARIA_TABS}\n              aria-selected={pathname === to}\n              as={Link}\n              id={id}\n              key={name}\n              tabIndex={0}\n              to={to}\n            >\n              {name}\n            </Tab>\n          ))}\n        </TabList>\n\n        <TabPanels marginTop={8} outline='none' {...responsiveBoxProps}>\n          <Switch>\n            {tabs.map(({ category, to }) => (\n              <Route exact key={category} path={to}>\n                <Feed category={category} />\n              </Route>\n            ))}\n            <Route\n              path='/feed/detail/:postID'\n              render={(props): JSX.Element => <DetailView {...props} previousPathname={previousPathname} />}\n            ></Route>\n            <Redirect from='/' to={NEWS_PATH} />\n          </Switch>\n        </TabPanels>\n      </Tabs>\n    </Box>\n  );\n};\n","import React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Box, IconButton, IconButtonProps, Text } from '@chakra-ui/core';\n\nimport { ThemeType } from '../app/styles';\n\ntype Props = {\n  ariaLabel: IconButtonProps['aria-label'];\n  icon: keyof ThemeType['icons'];\n  isActive: boolean;\n  name: string;\n  to: string;\n};\n\nexport const TabBarButton: FC<Props> = ({ ariaLabel, icon, isActive, name, to }: Props) => (\n  <Link to={to}>\n    <Box alignItems='center' display='flex' flexDirection='column' paddingY={2}>\n      <IconButton\n        aria-label={ariaLabel}\n        as='span'\n        // @ts-ignore\n        icon={icon}\n        isActive={isActive}\n        size='md'\n        variant='link'\n        variantColor='gray'\n      />\n      <Text as='span' color={isActive ? 'black' : 'gray.600'} fontSize='sm'>\n        {name}\n      </Text>\n    </Box>\n  </Link>\n);\n","import React, { FC, lazy } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Redirect, Switch, useLocation } from 'react-router-dom';\nimport { Box } from '@chakra-ui/core';\n\nimport { AppRoute, UserState } from '../app/AppRoute';\nimport { FeedPage } from '../features/feed/FeedPage';\nimport { TabBarButton } from './TabBarButton';\n\nimport { selectIsLoggedIn } from '../features/user/userSlice';\n\nimport { AppRoutes } from '../app/router';\nimport { ThemeType } from '../app/styles';\n\nconst Submit = lazy(() =>\n  import('../features/submit/Submit').then(({ Submit }) => ({\n    default: Submit,\n  })),\n);\n\nconst Profile = lazy(() =>\n  import('../features/user/Profile').then(({ Profile }) => ({\n    default: Profile,\n  })),\n);\n\nconst Account = lazy(() =>\n  import('../features/user/Account').then(({ Account }) => ({\n    default: Account,\n  })),\n);\n\nconst Login = lazy(() =>\n  import('../features/user/Login').then(({ Login }) => ({\n    default: Login,\n  })),\n);\n\nconst ResetPassword = lazy(() =>\n  import('../features/user/ResetPassword').then(({ ResetPassword }) => ({\n    default: ResetPassword,\n  })),\n);\n\nconst Registration = lazy(() =>\n  import('../features/user/Registration').then(({ Registration }) => ({\n    default: Registration,\n  })),\n);\n\nconst Page404 = lazy(() =>\n  import('./Page404').then(({ Page404 }) => ({\n    default: Page404,\n  })),\n);\n\nconst buttons: {\n  [key: string]: {\n    ariaLabel: string;\n    icon: keyof ThemeType['icons'];\n    name: string;\n    to: AppRoutes;\n  };\n} = {\n  home: { ariaLabel: 'home button', icon: 'mdHome', name: 'Home', to: '/feed' },\n  submit: { ariaLabel: 'submit button', icon: 'mdAdd', name: 'Submit', to: '/submit' },\n  profile: { ariaLabel: 'profile button', icon: 'mdPerson', name: 'Profile', to: '/profile/me' },\n  account: { ariaLabel: 'account button', icon: 'mdPerson', name: 'Account', to: '/account' },\n};\n\nconst loggedInButtons = {\n  home: buttons.home,\n  submit: buttons.submit,\n  profile: buttons.profile,\n};\n\nconst loggedOutButtons = {\n  home: buttons.home,\n  submit: buttons.submit,\n  account: buttons.account,\n};\n\nconst getButtons = (loggedIn: boolean): typeof buttons[number][] =>\n  Object.values(loggedIn ? loggedInButtons : loggedOutButtons);\n\nexport const TabBar: FC<{}> = () => {\n  const location = useLocation();\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n\n  const buttons = getButtons(isLoggedIn);\n\n  return (\n    <>\n      <Switch>\n        <AppRoute lazyload={false} path='/feed'>\n          <FeedPage />\n        </AppRoute>\n        <AppRoute lazyload path='/submit'>\n          <Submit />\n        </AppRoute>\n        <AppRoute\n          lazyload\n          path='/profile/me'\n          redirect={{\n            path: '/account',\n            when: UserState.LoggedOut,\n          }}\n        >\n          <Profile />\n        </AppRoute>\n        <AppRoute\n          lazyload\n          path='/account/reset-password'\n          redirect={{\n            path: '/profile/me',\n            when: UserState.LoggedIn,\n          }}\n        >\n          <ResetPassword />\n        </AppRoute>\n        <AppRoute\n          lazyload\n          path='/account/login'\n          redirect={{\n            path: '/profile/me',\n            when: UserState.LoggedIn,\n          }}\n        >\n          <Login />\n        </AppRoute>\n        <AppRoute\n          lazyload\n          path='/account/register'\n          redirect={{\n            path: '/profile/me',\n            when: UserState.LoggedIn,\n          }}\n        >\n          <Registration />\n        </AppRoute>\n        <AppRoute\n          lazyload\n          path='/account'\n          redirect={{\n            path: '/profile/me',\n            when: UserState.LoggedIn,\n          }}\n        >\n          <Account />\n        </AppRoute>\n        <Redirect exact from='/profile' to={'/profile/me' as AppRoutes} />\n        <AppRoute lazyload path='/profile'>\n          <Profile />\n        </AppRoute>\n        <Redirect exact from='/' to={'/feed' as AppRoutes} />\n        <AppRoute lazyload path={null}>\n          <Page404 />\n        </AppRoute>\n      </Switch>\n\n      <nav>\n        <Box\n          backgroundColor='white'\n          borderTop='1px solid'\n          borderColor='gray.300'\n          bottom='0'\n          display='flex'\n          position='fixed'\n          width='100%'\n          zIndex={1}\n        >\n          {buttons.map((buttonProps) => (\n            <Box flex='1 1 0' key={buttonProps.name}>\n              <TabBarButton {...buttonProps} isActive={location.pathname.startsWith(buttonProps.to)} />\n            </Box>\n          ))}\n        </Box>\n      </nav>\n    </>\n  );\n};\n","import React, { FC, useEffect, useRef, useState } from 'react';\nimport { useLocation } from 'react-router';\nimport {\n  Button,\n  Drawer,\n  DrawerBody,\n  DrawerHeader,\n  DrawerOverlay,\n  DrawerContent,\n  DrawerCloseButton,\n  Heading,\n  Image,\n  Text,\n} from '@chakra-ui/core';\n\nconst DID_SEE_WELCOME_DRAWER_KEY = 'did-see-welcome-drawer-02';\nconst LOGO_PATH = process.env.PUBLIC_URL + '/logos/logo-transparent.png';\n\nexport const WelcomeDrawer: FC<{}> = () => {\n  const showDemoButtonRef = useRef();\n  const [isVisible, setIsVisible] = useState(false);\n\n  const { search } = useLocation();\n  const shouldHide = search === '?hide-welcome-drawer=true';\n\n  const onClose = (): void => {\n    localStorage.setItem(DID_SEE_WELCOME_DRAWER_KEY, 'true');\n    setIsVisible(false);\n  };\n\n  useEffect((): void => {\n    if (!shouldHide) {\n      const value = localStorage.getItem(DID_SEE_WELCOME_DRAWER_KEY);\n      setIsVisible(value !== 'true');\n    }\n  }, [shouldHide]);\n\n  return (\n    <Drawer\n      isOpen={isVisible}\n      // @ts-ignore\n      initialFocusRef={showDemoButtonRef}\n      isFullHeight\n      onClose={onClose}\n      placement='top'\n      scrollBehavior='inside'\n    >\n      <DrawerOverlay />\n      <DrawerContent>\n        <DrawerCloseButton />\n        <DrawerHeader margin={['inherit', 'inherit', '0 auto']} maxWidth={500}>\n          <Image alt='logo of trusted locals' src={LOGO_PATH} />\n        </DrawerHeader>\n\n        <DrawerBody margin='0 auto' maxWidth={500}>\n          <Heading as='h3' marginTop={4} size='sm'>\n            About\n          </Heading>\n          <Text>\n            We believe people are best served through their local communities. By crowdsourcing information related to\n            your community in an organized and audited way that are visible to everyone, it can build up trust and\n            empower people to take actions with confidence.\n          </Text>\n          <Heading as='h3' marginTop={8} size='sm'>\n            Disclaimer\n          </Heading>\n          <Text>\n            In this demo, you will be logged in with the profile of one of our developers. None of your votes or created\n            posts will be saved. The posts you see are made up, and should not be taken seriously.\n          </Text>\n          <Button marginTop={8} ref={showDemoButtonRef} onClick={onClose} variantColor='green'>\n            Show the demo\n          </Button>\n        </DrawerBody>\n      </DrawerContent>\n    </Drawer>\n  );\n};\n","import React, { FC } from 'react';\nimport { HashRouter, Router } from 'react-router-dom';\nimport { Box, CSSReset, ThemeProvider } from '@chakra-ui/core';\n\nimport { TabBar } from '../components/TabBar';\nimport { WelcomeDrawer } from './WelcomeDrawer';\n\nimport { history, ROUTER_BASENAME } from './router';\nimport { theme } from './styles';\n\nexport const App: FC = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <CSSReset />\n      <HashRouter basename={ROUTER_BASENAME}>\n        <Router history={history}>\n          <WelcomeDrawer />\n          <Box marginBottom={24}>\n            <TabBar />\n          </Box>\n        </Router>\n      </HashRouter>\n    </ThemeProvider>\n  );\n};\n","import { combineReducers, configureStore } from '@reduxjs/toolkit';\n\nimport { feedReducer } from '../features/feed/feedSlice';\nimport { submitReducer } from '../features/submit/submitSlice';\nimport { userReducer } from '../features/user/userSlice';\n\nexport type AppDispatch = typeof store.dispatch;\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nconst rootReducer = combineReducers({\n  feed: feedReducer,\n  submit: submitReducer,\n  user: userReducer,\n});\n\nexport const store = configureStore({\n  reducer: rootReducer,\n});\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './app/App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport { unregister } from './serviceWorker';\n\nReactDOM.render(\n  <StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </StrictMode>,\n  document.getElementById('root'),\n);\n\n// Preliminary\nunregister();\n","import { createAsyncThunk, createSelector, createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { RootState } from '../../app/store';\n\nimport { MOCKED_CATEGORIES, MOCKED_POSTS } from './mocks';\n\nimport { submitted, SubmitBody } from '../submit/submitSlice';\n\nconst SLICE_NAME = 'feed';\n\ntype AsyncState = {\n  error: string | null;\n  loading: 'idle' | 'pending';\n};\n\nexport type Category = 'news' | 'medical_supply' | 'grocery' | 'advice';\nexport type Comment = {\n  comment: string;\n  commentID: number;\n  date: number;\n  userImageURL: string | null;\n  username: string;\n};\n\nexport type Post = {\n  postID: number;\n  categories: Category[];\n  date: number;\n  imageURL: string | null;\n  rating: number | null;\n  text: string;\n  title: string;\n  userImageURL: string | null;\n  username: string;\n  comments: Comment[];\n};\n\nexport type Posts = { [key in Post['postID']]: Post };\n\nexport type Categories = { [key in Category]: { async: AsyncState; postIDs: number[] | null } };\n\ntype State = {\n  categories: Categories;\n  posts: {\n    [key in Post['postID']]: {\n      async: AsyncState;\n      post: Post | null;\n    };\n  };\n  searchValue: string;\n};\n\nexport const loadRequested = createAsyncThunk(`${SLICE_NAME}/loadRequested`, (category: Category) =>\n  Promise.resolve({ posts: MOCKED_CATEGORIES[category] }),\n);\n\nexport const postRequested = createAsyncThunk(`${SLICE_NAME}/postRequested`, (postID: Post['postID']) =>\n  Promise.resolve({ post: MOCKED_POSTS[postID] }),\n);\n\nexport const requestedPostsByIDs = createAsyncThunk(`${SLICE_NAME}/requestedPostsByIDs`, (postIDs: Post['postID'][]) =>\n  Promise.resolve({\n    posts: postIDs.reduce(\n      (acc, postID) => ({\n        ...acc,\n        [postID]: MOCKED_POSTS[postID],\n      }),\n      {},\n    ),\n  }),\n);\n\nconst initialState: State = {\n  categories: {\n    advice: {\n      async: { error: null, loading: 'idle' },\n      postIDs: null,\n    },\n    grocery: {\n      async: { error: null, loading: 'idle' },\n      postIDs: null,\n    },\n    medical_supply: {\n      async: { error: null, loading: 'idle' },\n      postIDs: null,\n    },\n    news: {\n      async: { error: null, loading: 'idle' },\n      postIDs: null,\n    },\n  },\n  posts: {},\n  searchValue: '',\n};\n\nexport const slice = createSlice({\n  name: SLICE_NAME,\n  initialState,\n  reducers: {\n    changedSearchValue: (state, action: PayloadAction<{ searchValue: State['searchValue'] }>): void => {\n      state.searchValue = action.payload.searchValue;\n    },\n  },\n  extraReducers: {\n    [submitted.fulfilled.type]: (state, action: any): void => {\n      const body: SubmitBody = action.meta.arg;\n      const post: Post = {\n        categories: body.categories,\n        comments: body.comments,\n        date: +new Date(),\n        imageURL: body.image,\n        postID: Object.values(state.posts)?.length + 1 ?? 1,\n        rating: null,\n        text: body.text,\n        title: body.title,\n        userImageURL: body.userImageURL,\n        username: body.username || '',\n      };\n\n      state.posts[post.postID] = {\n        async: { error: null, loading: 'idle' },\n        post,\n      };\n      post.categories.forEach((category) => {\n        const c = state.categories[category];\n        if (c.postIDs) {\n          c.postIDs.push(post.postID);\n        } else {\n          c.postIDs = [post.postID];\n        }\n      });\n    },\n    [loadRequested.pending.type]: (state, action): void => {\n      // @ts-ignore\n      const category: Category = action.meta.arg;\n\n      const async = state.categories[category].async;\n      async.loading = 'pending';\n    },\n    [loadRequested.fulfilled.type]: (state, action: PayloadAction<{ posts: Posts }>): void => {\n      // @ts-ignore\n      const categoryArg: Category = action.meta.arg;\n      const category = state.categories[categoryArg];\n\n      category.async.error = null;\n      category.async.loading = 'idle';\n      category.postIDs = Object.values(action.payload.posts).map((post) => post.postID);\n\n      const normalizedPosts = Object.values(action.payload.posts).reduce(\n        (acc, post) => ({\n          ...acc,\n          [post.postID]: {\n            async: {\n              error: null,\n              loading: 'idle',\n            },\n            post,\n          },\n        }),\n        {},\n      );\n\n      Object.assign(state.posts, normalizedPosts);\n    },\n    [loadRequested.rejected.type]: (state, action: { error: Error }): void => {\n      // @ts-ignore\n      const category: Category = action.meta.arg;\n\n      const async = state.categories[category].async;\n      async.loading = 'idle';\n      async.error = action.error.message;\n    },\n    [postRequested.pending.type]: (state, action): void => {\n      // @ts-ignore\n      const postID: Post['postID'] = action.meta.arg;\n\n      const post = state.posts[postID] ?? { async: {} };\n      post.async.loading = 'pending';\n      state.posts[postID] = post;\n    },\n    [postRequested.fulfilled.type]: (state, action: PayloadAction<{ post: Post }>): void => {\n      // @ts-ignore\n      const postID: Post['postID'] = action.meta.arg;\n      const post = state.posts[postID];\n\n      post.async.error = null;\n      post.async.loading = 'idle';\n\n      post.post = action.payload.post;\n    },\n    [postRequested.rejected.type]: (state, action: { error: Error }): void => {\n      // @ts-ignore\n      const postID: Post['postID'] = action.meta.arg;\n\n      const post = state.posts[postID] ?? {};\n      post.async = {\n        error: action.error.message,\n        loading: 'idle',\n      };\n      post.post = null;\n      state.posts[postID] = post;\n    },\n    // eslint-disable-next-line\n    [requestedPostsByIDs.pending.type]: (_state, _action): void => {},\n    [requestedPostsByIDs.fulfilled.type]: (state, action: PayloadAction<{ posts: Posts }>): void => {\n      // NOTE: Copied from above. Refactor.\n\n      const normalizedPosts = Object.values(action.payload.posts).reduce(\n        (acc, post) => ({\n          ...acc,\n          [post.postID]: {\n            async: {\n              error: null,\n              loading: 'idle',\n            },\n            post,\n          },\n        }),\n        {},\n      );\n\n      Object.assign(state.posts, normalizedPosts);\n    },\n    // eslint-disable-next-line\n    [requestedPostsByIDs.rejected.type]: (_state, _action: { error: Error }): void => {},\n  },\n});\n\nexport const selectPostByID = (state: RootState, postID: number): State['posts'][Post['postID']] | null =>\n  createSelector(\n    (state: RootState) => state.feed.posts[postID] ?? null,\n    (post) => post,\n  )(state);\n\nexport const selectPostsByIDs = (state: RootState, postIDs: number[]): State['posts'] =>\n  createSelector(\n    (state: RootState) =>\n      postIDs\n        .map((postID) => state.feed.posts[postID] ?? null)\n        .filter(Boolean)\n        .reduce(\n          (acc, post) => ({\n            ...acc,\n            [post.post?.postID as number]: post,\n          }),\n          {},\n        ),\n    (post) => post,\n  )(state);\n\nexport const selectPostsByCategory = (\n  state: RootState,\n  category: Category,\n): {\n  async: AsyncState;\n  posts: Posts | null;\n} =>\n  createSelector(\n    (state: RootState) => {\n      const postIDs = state.feed.categories[category].postIDs;\n\n      const posts =\n        postIDs === null\n          ? null\n          : Object.values(state.feed.posts).reduce((posts: Posts, { post }) => {\n              if (post === null || !postIDs.includes(post.postID)) {\n                return posts;\n              }\n\n              return {\n                ...posts,\n                [post.postID]: post,\n              };\n            }, {});\n\n      return {\n        async: state.feed.categories[category].async,\n        posts,\n      };\n    },\n    (categoryState) => categoryState,\n  )(state);\n\nexport const selectSearchValue = (state: RootState): State['searchValue'] =>\n  createSelector(\n    (state: RootState) => state.feed.searchValue,\n    (searchValue) => searchValue,\n  )(state);\n\nexport const feedReducer = slice.reducer;\n\nexport const { changedSearchValue } = slice.actions;\n","const DEFAULT_OPTIONS: Parameters<typeof window.fetch>[1] = {\n  credentials: 'include',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n};\n\nconst ENDPOINT_URL =\n  process.env.NODE_ENV === 'production' ? 'https://ec2-54-89-76-249.compute-1.amazonaws.com' : 'http://localhost:8080';\n\nexport function fetch<D>(path: string, options?: object): Promise<D> {\n  return window\n    .fetch(ENDPOINT_URL + path, {\n      ...DEFAULT_OPTIONS,\n      ...options,\n    })\n    .then((response: Response) => {\n      return response.json().then((json) => {\n        if (response.ok) {\n          return json;\n        }\n\n        throw json;\n      });\n    })\n    .catch((error) => {\n      throw new Error(error.errorMessage || 'An unknown error has occured.');\n    });\n}\n","import { createAsyncThunk, createSelector, createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { fetch } from '../../utils/fetch';\n\nimport { AppRoutes, history } from '../../app/router';\nimport { AppDispatch, RootState } from '../../app/store';\n\nimport { PROFILE_IMAGE_EMILY_ROSE28, PROFILE_IMAGE_OLIVER_MICKE } from '../feed/mocks';\n\nimport { Post, requestedPostsByIDs } from '../feed/feedSlice';\n\nconst SLICE_NAME = 'user';\n\ntype AsyncState = {\n  error: string | null;\n  loading: 'idle' | 'pending';\n};\n\nexport type Profile = {\n  cityName: string;\n  email: string;\n  firstName?: string;\n  lastName?: string;\n  postsCount: number;\n  postIDs: Post['postID'][];\n  rating: number;\n  username: string;\n  imageURL?: string;\n};\n\nexport type OtherProfile = {\n  cityName: string;\n  firstName?: string;\n  lastName?: string;\n  postsCount: number;\n  postIDs: Post['postID'][];\n  rating: number;\n  username: string;\n  imageURL?: string;\n};\n\ntype State = {\n  async: AsyncState;\n  isLoggedIn: boolean;\n  profile: {\n    async: AsyncState;\n    profile: Profile | null;\n  };\n  otherProfile: {\n    async: AsyncState;\n    profile: OtherProfile | null;\n  };\n};\n\ntype LoginBody = {\n  name: string;\n  password: string;\n};\n\ntype LoginSuccess = {\n  success: boolean;\n  token: string;\n};\n\ntype RegistrationBody = {\n  country: string;\n  email: string;\n  name: string;\n  password: string;\n};\n\ntype RegistrationSuccess = {\n  success: boolean;\n  token: string;\n};\n\ntype OpenedOtherProfileBody = {\n  username: string;\n};\n\ntype OpenedOtherProfileSuccess = OtherProfile;\n\nconst OPENED_OWN_PROFILE_PENDING = `${SLICE_NAME}/ownProfile/pending`;\nconst OPENED_OWN_PROFILE_FULFILLED = `${SLICE_NAME}/ownProfile/fulfilled`;\nconst OPENED_OWN_PROFILE_REJECTED = `${SLICE_NAME}/ownProfile/rejected`;\n\nconst MOCKED_OWN_PROFILE: Profile = {\n  cityName: 'Richmond',\n  email: 'foo@bar.com',\n  firstName: 'Oliver',\n  lastName: 'Micke',\n  postsCount: 4,\n  postIDs: [1, 3, 4, 5],\n  rating: 49,\n  username: 'olivermicke',\n  imageURL: PROFILE_IMAGE_OLIVER_MICKE,\n};\n\nconst MOCKED_OTHER_PROFILES: { [key: string]: OtherProfile } = {\n  emily_rose28: {\n    cityName: 'Richmond',\n    rating: 78,\n    postsCount: 2,\n    postIDs: [2, 6],\n    username: 'emily_rose28',\n    imageURL: PROFILE_IMAGE_EMILY_ROSE28,\n  },\n};\n\nexport const loggedIn = createAsyncThunk(`${SLICE_NAME}/loggedIn`, (body: LoginBody) =>\n  fetch<LoginSuccess>('/user/login', {\n    body: JSON.stringify(body),\n    method: 'POST',\n  }).then((data) => {\n    history.push('/feed' as AppRoutes);\n    return data;\n  }),\n);\n\nexport const registered = createAsyncThunk(`${SLICE_NAME}/registered`, (body: RegistrationBody) =>\n  fetch<RegistrationSuccess>('/user', {\n    body: JSON.stringify(body),\n    method: 'POST',\n  }).then((data) => {\n    history.push('/feed' as AppRoutes);\n    return data;\n  }),\n);\n\nexport const openedOtherProfile = createAsyncThunk(\n  `${SLICE_NAME}/openedOtherProfile`,\n  ({ username }: OpenedOtherProfileBody) => Promise.resolve(MOCKED_OTHER_PROFILES[username]),\n);\n\nexport const slice = createSlice({\n  name: SLICE_NAME,\n  initialState: {\n    async: {\n      error: null,\n      loading: 'idle',\n    },\n    // Preliminary\n    isLoggedIn: true,\n    profile: {\n      async: {\n        error: null,\n        loading: 'idle',\n      },\n      profile: MOCKED_OWN_PROFILE,\n    },\n    otherProfile: {\n      async: {\n        error: null,\n        loading: 'idle',\n      },\n      profile: null,\n    },\n  } as State,\n  reducers: {\n    loggedOut: (state): void => {\n      state.profile.profile = null;\n      state.isLoggedIn = false;\n    },\n  },\n  extraReducers: {\n    [loggedIn.pending.type]: (state): void => {\n      if (state.async.loading === 'idle') {\n        state.async.loading = 'pending';\n      }\n    },\n    [loggedIn.fulfilled.type]: (state, _action: PayloadAction<LoginSuccess>): void => {\n      if (state.async.loading === 'pending') {\n        state.async.loading = 'idle';\n        state.isLoggedIn = true;\n        // TODO: Receive profile data from BE\n        state.profile = {\n          async: {\n            error: null,\n            loading: 'idle',\n          },\n          profile: MOCKED_OWN_PROFILE,\n        };\n      }\n    },\n    [loggedIn.rejected.type]: (state, action: { error: Error }): void => {\n      if (state.async.loading === 'pending') {\n        state.async.loading = 'idle';\n        state.async.error = action.error.message;\n      }\n    },\n    [registered.pending.type]: (state): void => {\n      if (state.async.loading === 'idle') {\n        state.async.loading = 'pending';\n      }\n    },\n    [registered.fulfilled.type]: (state, _action: PayloadAction<RegistrationSuccess>): void => {\n      if (state.async.loading === 'pending') {\n        state.async.loading = 'idle';\n        state.isLoggedIn = true;\n        // TODO: Receive profile data from BE\n        state.profile.profile = MOCKED_OWN_PROFILE;\n      }\n    },\n    [registered.rejected.type]: (state, action: { error: Error }): void => {\n      if (state.async.loading === 'pending') {\n        state.async.loading = 'idle';\n        state.async.error = action.error.message;\n      }\n    },\n    [openedOtherProfile.pending.type]: (state): void => {\n      state.otherProfile.async.error = null;\n      state.otherProfile.async.loading = 'pending';\n    },\n    [openedOtherProfile.fulfilled.type]: (state, action: PayloadAction<OpenedOtherProfileSuccess>): void => {\n      state.otherProfile.async.loading = 'idle';\n      state.otherProfile.profile = action.payload;\n    },\n    [openedOtherProfile.rejected.type]: (state, action: { error: Error }): void => {\n      state.otherProfile.async.loading = 'idle';\n      state.otherProfile.async.error = action.error.message;\n    },\n    [OPENED_OWN_PROFILE_PENDING]: (state): void => {\n      state.profile.async.error = null;\n      state.profile.async.loading = 'pending';\n    },\n    [OPENED_OWN_PROFILE_FULFILLED]: (state, action: PayloadAction<{ profile: Profile }>): void => {\n      state.profile.async.loading = 'idle';\n      state.profile.profile = action.payload.profile;\n    },\n    [OPENED_OWN_PROFILE_REJECTED]: (state, action: { error: Error }): void => {\n      state.profile.async.loading = 'idle';\n      state.profile.async.error = action.error.message;\n    },\n  },\n});\n\nconst thunks = {\n  requestedPostsOfUser: function ({ isOwnProfile, userNameParam }: { isOwnProfile: boolean; userNameParam: string }) {\n    return (dispatch: AppDispatch, _getState: () => RootState): void => {\n      Promise.resolve({ profile: isOwnProfile ? MOCKED_OWN_PROFILE : MOCKED_OTHER_PROFILES[userNameParam] })\n        .then(({ profile }) => {\n          dispatch(requestedPostsByIDs(profile.postIDs));\n\n          dispatch({\n            type: OPENED_OWN_PROFILE_FULFILLED,\n            payload: {\n              profile,\n            },\n          });\n        })\n        .catch((error: Error) => {\n          dispatch({ error, type: OPENED_OWN_PROFILE_REJECTED });\n        });\n    };\n  },\n};\n\nexport const { loggedOut, requestedPostsOfUser } = { ...slice.actions, ...thunks };\n\nexport const selectAsync = (state: RootState): State['async'] =>\n  createSelector(\n    (state: RootState) => state.user.async,\n    (async) => async,\n  )(state);\n\nexport const selectIsLoggedIn = (state: RootState): State['isLoggedIn'] =>\n  createSelector(\n    (state: RootState) => state.user.isLoggedIn,\n    (isLoggedIn) => isLoggedIn,\n  )(state);\n\nexport const selectOtherProfile = (state: RootState): State['otherProfile'] =>\n  createSelector(\n    (state: RootState) => state.user.otherProfile,\n    (otherProfile) => otherProfile,\n  )(state);\n\nexport const selectOwnProfile = (state: RootState): State['profile'] =>\n  createSelector(\n    (state: RootState) => state.user.profile,\n    (profile) => profile,\n  )(state);\n\nexport const selectOwnUsername = (state: RootState): string | null =>\n  createSelector(\n    (state: RootState) => {\n      if (!state.user.profile || !state.user.profile.profile) {\n        return null;\n      }\n\n      return state.user.profile.profile.username;\n    },\n    (username) => username,\n  )(state);\n\nexport const userReducer = slice.reducer;\n","import React from 'react';\nimport { MdAdd, MdHome, MdPerson } from 'react-icons/md';\nimport { IoMdEye, IoMdEyeOff } from 'react-icons/io';\nimport { BoxProps, DefaultTheme, theme as chakraTheme } from '@chakra-ui/core';\n\nexport const responsiveBoxProps: BoxProps = {\n  marginTop: [4, 4, 8],\n  marginX: 'auto',\n  width: [\n    '80%', // base\n    '90%', // 480px upwards\n    '90%', // 768px upwards\n    '80%', // 992px upwards\n    '70%',\n  ],\n};\n\nexport type ThemeType = DefaultTheme & {\n  icons: DefaultTheme['icons'];\n};\n\nconst VIEW_BOX = '0 0 16 16';\n\nexport const theme: ThemeType = {\n  ...chakraTheme,\n  icons: {\n    ...chakraTheme.icons,\n    ioMdEye: {\n      path: <IoMdEye />,\n      viewBox: VIEW_BOX,\n    },\n    ioMdEyeOff: {\n      path: <IoMdEyeOff />,\n      viewBox: VIEW_BOX,\n    },\n    mdAdd: {\n      path: <MdAdd />,\n      viewBox: VIEW_BOX,\n    },\n    mdHome: {\n      path: <MdHome />,\n      viewBox: VIEW_BOX,\n    },\n    mdPerson: {\n      path: <MdPerson />,\n      viewBox: VIEW_BOX,\n    },\n  },\n};\n","import { createHashHistory } from 'history';\n\nexport const ROUTER_BASENAME = '/';\n\nexport const history = createHashHistory({ basename: ROUTER_BASENAME });\n\nexport type AppRoutes =\n  | '/'\n  | '/account'\n  | '/account/login'\n  | '/account/register'\n  | '/account/reset-password'\n  | '/feed'\n  | '/profile'\n  | '/profile/me'\n  | '/submit';\n","import { Category, Post } from './feedSlice';\n\nexport const PROFILE_IMAGE_OLIVER_MICKE = process.env.PUBLIC_URL + '/img/oliver-micke.jpg';\nexport const PROFILE_IMAGE_EMILY_ROSE28 =\n  'https://images.unsplash.com/photo-1508214751196-bcfd4ca60f91?ixlib=rb-1.2.1&auto=format&fit=crop&w=300&q=60';\n\nexport const MOCKED_POSTS: { [postID in Post['postID']]: Post } = {\n  1: {\n    categories: ['news'] as Category[],\n    date: 1588136357988,\n    postID: 1,\n    rating: 23,\n    text: 'VCU Developed COVID-19 test',\n    title: 'VCU Developed COVID-19 test',\n    username: 'olivermicke',\n    imageURL:\n      'https://images.unsplash.com/photo-1511174511562-5f7f18b874f8?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=300&q=80',\n    userImageURL: PROFILE_IMAGE_OLIVER_MICKE,\n    comments: [],\n  },\n  2: {\n    categories: ['grocery'] as Category[],\n    date: 1588149191407,\n    postID: 2,\n    rating: 72,\n    text:\n      'We will have a limited supply of toilet paper at Target on Broad street for the next days – source: I work there.',\n    title: 'Limited supply of toilet paper at Target on Broad street',\n    username: 'emily_rose28',\n    imageURL:\n      'https://images.unsplash.com/photo-1584556812952-905ffd0c611a?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=300&q=80',\n    userImageURL: PROFILE_IMAGE_EMILY_ROSE28,\n    comments: [\n      {\n        comment: 'do you know when can the next delivery be expected?',\n        commentID: 104,\n        date: 1588226948308,\n        userImageURL: PROFILE_IMAGE_OLIVER_MICKE,\n        username: 'olivermicke',\n      },\n    ],\n  },\n  3: {\n    categories: ['news', 'medical_supply'] as Category[],\n    comments: [\n      {\n        comment: 'Only one box left when I was there at 11',\n        commentID: 101,\n        date: 1588227159951,\n        userImageURL: PROFILE_IMAGE_EMILY_ROSE28,\n        username: 'emily_rose28',\n      },\n    ],\n    date: 1588212413593,\n    postID: 3,\n    rating: 74,\n    text:\n      'Found some N95 masks available in the home depot in Henrico. I saw at least 3 boxes when I was there at around 9:30 AM',\n    title: 'N95 masks available again in Home Depot in Henrico',\n    username: 'olivermicke',\n    imageURL:\n      'https://images.unsplash.com/photo-1584462198614-03c2a523945d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=300&q=80',\n    userImageURL: PROFILE_IMAGE_OLIVER_MICKE,\n  },\n  4: {\n    categories: ['advice'] as Category[],\n    date: 1588130783737,\n    postID: 4,\n    rating: 44,\n    text: \"Especially in areas with community-spread, it's recommended to wear face masks whenever possible.\",\n    title: 'CDC recommends to wear face masks',\n    username: 'olivermicke',\n    imageURL:\n      'https://images.unsplash.com/photo-1582795003154-35736cf26353?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=300&q=80',\n    userImageURL: PROFILE_IMAGE_OLIVER_MICKE,\n    comments: [\n      {\n        comment: \"In case you don't have masks yet, home depot in henrico has got some available\",\n        commentID: 102,\n        date: 1588227470790,\n        userImageURL: PROFILE_IMAGE_EMILY_ROSE28,\n        username: 'emily_rose28',\n      },\n    ],\n  },\n  5: {\n    categories: ['news', 'grocery'] as Category[],\n    date: 1588154950247,\n    postID: 5,\n    rating: 54,\n    text:\n      'A friend of mine just told me that toilet paper production was ramped up to keep up with the incresed demand.',\n    title: 'Toilet paper production ramping up',\n    username: 'olivermicke',\n    imageURL:\n      'https://images.unsplash.com/photo-1583541988180-fdf816b632e6?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=300&q=80',\n    userImageURL: PROFILE_IMAGE_OLIVER_MICKE,\n    comments: [\n      {\n        comment: \"That's great to hear because I work at Target at broad street and we are running out of supplies\",\n        commentID: 106,\n        date: 1588227254358,\n        userImageURL: PROFILE_IMAGE_EMILY_ROSE28,\n        username: 'emily_rose28',\n      },\n    ],\n  },\n  6: {\n    categories: ['news'] as Category[],\n    comments: [],\n    date: 1588216365624,\n    postID: 6,\n    rating: 84,\n    text: 'Service disconnection has just been suspended!',\n    title: 'Service disconnection has been suspended',\n    username: 'emily_rose28',\n    imageURL:\n      'https://images.unsplash.com/uploads/141086319550951a179e1/a07e0918?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=300&q=80',\n    userImageURL: PROFILE_IMAGE_EMILY_ROSE28,\n  },\n};\n\nexport const MOCKED_CATEGORIES: { [category in Category]: { [postID in Post['postID']]: Post } } = {\n  news: {\n    1: MOCKED_POSTS[1],\n    3: MOCKED_POSTS[3],\n    5: MOCKED_POSTS[5],\n    6: MOCKED_POSTS[6],\n  },\n  medical_supply: {\n    3: MOCKED_POSTS[3],\n  },\n  grocery: {\n    2: MOCKED_POSTS[2],\n    5: MOCKED_POSTS[5],\n  },\n  advice: {\n    4: MOCKED_POSTS[4],\n  },\n};\n","import React, { FC } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Avatar, BoxProps, Link as ChakraLink, Text } from '@chakra-ui/core';\n\nimport { AppRoutes } from '../app/router';\nimport { Post } from '../features/feed/feedSlice';\n\ntype Props = {\n  style?: BoxProps;\n  userImageURL: Post['userImageURL'];\n  username: Post['username'];\n};\n\n// TS workaround\nconst Link: any = ChakraLink;\n\nexport const Author: FC<Props> = ({ style, userImageURL, username }: Props) => {\n  const profilePath = ('/profile' as AppRoutes) + `/${username}`;\n\n  return (\n    <Link as={RouterLink} to={profilePath} style={{ ...style, textDecoration: 'none' }}>\n      {userImageURL && <Avatar marginRight={2} name={username} size='xs' src={userImageURL ?? ''} />}\n      <Text as='span' color='gray.500' fontSize='sm'>\n        {username}\n      </Text>\n    </Link>\n  );\n};\n","import React, { FC } from 'react';\n\ntype Props = {\n  date: Date;\n};\n\n// https://stackoverflow.com/questions/3177836/how-to-format-time-since-xxx-e-g-4-minutes-ago-similar-to-stack-exchange-site/23259289#23259289\nconst timeSince = (date: Date): string => {\n  if (typeof date !== 'object') {\n    date = new Date(date);\n  }\n\n  // @ts-ignore\n  const seconds = Math.floor((new Date() - date) / 1000);\n  let intervalType;\n\n  let interval = Math.floor(seconds / 31536000);\n  if (interval >= 1) {\n    intervalType = 'year';\n  } else {\n    interval = Math.floor(seconds / 2592000);\n    if (interval >= 1) {\n      intervalType = 'month';\n    } else {\n      interval = Math.floor(seconds / 86400);\n      if (interval >= 1) {\n        intervalType = 'day';\n      } else {\n        interval = Math.floor(seconds / 3600);\n        if (interval >= 1) {\n          intervalType = 'hour';\n        } else {\n          interval = Math.floor(seconds / 60);\n          if (interval >= 1) {\n            intervalType = 'minute';\n          } else {\n            interval = seconds;\n            intervalType = 'second';\n          }\n        }\n      }\n    }\n  }\n\n  if (interval > 1 || interval === 0) {\n    intervalType += 's';\n  }\n\n  return interval + ' ' + intervalType;\n};\n\nexport const TimeAgo: FC<Props> = ({ date }: Props) => <>{timeSince(date)} ago</>;\n","import React, { FC } from 'react';\nimport { Box, BoxProps, Divider, Text } from '@chakra-ui/core';\n\nimport { Author } from '../../components/Author';\nimport { TimeAgo } from '../../components/TimeAgo';\n\nimport { Post as PostType } from './feedSlice';\n\ntype Props = {\n  date: PostType['date'];\n  userImageURL: PostType['userImageURL'];\n  username: PostType['username'];\n  style?: BoxProps;\n};\n\nexport const PostInfo: FC<Props> = ({ date, userImageURL, username, style }: Props) => (\n  <Box alignItems='center' display='flex' marginTop={2} {...style}>\n    <Text alignItems='center' as='span' color='gray.500' display='flex' fontSize='sm' fontWeight='normal' height='100%'>\n      <TimeAgo date={new Date(date)} />\n    </Text>\n    <Divider borderColor='gray.300' height='24px' orientation='vertical' />\n    <Author\n      style={{\n        alignItems: 'center',\n        display: 'flex',\n        height: '100%',\n      }}\n      userImageURL={userImageURL}\n      username={username}\n    />\n  </Box>\n);\n","import { createAsyncThunk, createSelector, createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { AppRoutes, history } from '../../app/router';\nimport { RootState } from '../../app/store';\nimport { Category, Comment } from '../feed/feedSlice';\n\nconst SLICE_NAME = 'submit';\n\ntype AsyncState = {\n  error: string | null;\n  loading: 'idle' | 'pending';\n};\n\ntype State = {\n  async: AsyncState;\n};\n\nexport type SubmitBody = {\n  categories: Category[];\n  comments: Comment[];\n  image: string | null;\n  text: string;\n  title: string;\n  username: string | null;\n  userImageURL: string | null;\n};\n\ntype SubmitSuccess = {\n  success: boolean;\n};\n\nexport const submitted = createAsyncThunk(`${SLICE_NAME}/submitted`, (_body: SubmitBody) => {\n  history.push('/' as AppRoutes);\n});\n\nexport const slice = createSlice({\n  name: SLICE_NAME,\n  initialState: {\n    async: {\n      error: null,\n      loading: 'idle',\n    },\n  } as State,\n  reducers: {},\n  extraReducers: {\n    [submitted.pending.type]: (state): void => {\n      if (state.async.loading === 'idle') {\n        state.async.loading = 'pending';\n      }\n    },\n    [submitted.fulfilled.type]: (state, _action: PayloadAction<SubmitSuccess>): void => {\n      if (state.async.loading === 'pending') {\n        state.async.loading = 'idle';\n      }\n    },\n    [submitted.rejected.type]: (state, action: { error: Error }): void => {\n      if (state.async.loading === 'pending') {\n        state.async.loading = 'idle';\n        state.async.error = action.error.message;\n      }\n    },\n  },\n});\n\nexport const selectAsync = (state: RootState): State['async'] =>\n  createSelector(\n    (state: RootState) => state.submit.async,\n    (async) => async,\n  )(state);\n\nexport const submitReducer = slice.reducer;\n","import React, { FC } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Box, Button, Image, PseudoBox, Link } from '@chakra-ui/core';\n\nimport { PostInfo } from './PostInfo';\n\nimport { Rating } from '../../components/Rating';\n\nimport { Post as PostType } from './feedSlice';\n\ntype Props = {\n  detailViewRedirectToProfile?: boolean;\n} & PostType;\n\nconst paddingProps = { padding: 2 };\n\nconst BORDER_RADIUS = 8;\n\nexport const FALLBACK_IMAGE_URL =\n  'https://images.unsplash.com/photo-1584118624012-df056829fbd0?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=300&q=60';\n\nexport const Post: FC<Props> = ({\n  date,\n  detailViewRedirectToProfile,\n  imageURL,\n  postID,\n  rating,\n  title,\n  userImageURL,\n  username,\n}: Props) => {\n  const linkToDetailView = `/feed/detail/${postID}${detailViewRedirectToProfile ? `?redirect=profile` : ''}`;\n\n  return (\n    <>\n      <Box\n        boxShadow='0px 8px 12px rgba(42, 52, 61, 0.16078431372549)'\n        borderRadius={BORDER_RADIUS}\n        maxWidth={['initial', 'initial', 350]}\n      >\n        {/*\n        // @ts-ignore */}\n        <Link as={RouterLink} to={linkToDetailView}>\n          <Box height={128} position='relative'>\n            <PseudoBox\n              {...paddingProps}\n              background='#ffffffdd'\n              // @ts-ignore\n              borderTopRightRadius={BORDER_RADIUS}\n              bottom={0}\n              _hover={{\n                textDecoration: 'underline',\n              }}\n              position='absolute'\n              width='80%'\n            >\n              {title}\n            </PseudoBox>\n\n            <Image\n              alt='post background image'\n              // @ts-ignore\n              borderTopLeftRadius={BORDER_RADIUS}\n              // @ts-ignore\n              borderTopRightRadius={BORDER_RADIUS}\n              height='100%'\n              objectFit='cover'\n              src={imageURL ?? FALLBACK_IMAGE_URL}\n              width='100%'\n            />\n          </Box>\n        </Link>\n\n        <PostInfo date={date} userImageURL={userImageURL} username={username} style={paddingProps} />\n\n        <Box {...paddingProps} alignItems='center' display='flex'>\n          <Rating rating={rating} shouldShowDescription={false} />\n          <Button\n            as={RouterLink}\n            marginLeft={6}\n            // @ts-ignore\n            to={linkToDetailView}\n            variant='outline'\n            variantColor='green'\n          >\n            Verify\n          </Button>\n        </Box>\n      </Box>\n    </>\n  );\n};\n","import React, { FC } from 'react';\nimport { Box, BoxProps, CircularProgress, CircularProgressLabel, Text } from '@chakra-ui/core';\n\nimport { Post } from '../features/feed/feedSlice';\n\nconst NOT_CONFIDENT = 'Based on information gathered, we do not have enough information to be confident of this data.';\nconst CONFIDENT = 'Based on information gathered, we are confident of this data.';\n\nconst colorForRating = (rating: Post['rating']): string => {\n  if (rating === null || rating < 40) {\n    return 'gray';\n  }\n\n  if (rating >= 40 && rating <= 70) {\n    return 'yellow';\n  }\n\n  return 'green';\n};\n\nconst descriptionForRating = (rating: Post['rating']): string => {\n  if (rating === null || rating < 40) {\n    return NOT_CONFIDENT;\n  }\n\n  if (rating >= 40 && rating <= 70) {\n    return NOT_CONFIDENT;\n  }\n\n  return CONFIDENT;\n};\n\ntype Props = { boxProps?: BoxProps; labelProps?: BoxProps; rating: Post['rating']; shouldShowDescription: boolean };\n\nexport const Rating: FC<Props> = ({ boxProps, labelProps, rating, shouldShowDescription }: Props) => {\n  const color = colorForRating(rating);\n\n  const circularRating = (\n    <CircularProgress\n      aria-label='reliability score of post'\n      color={color}\n      style={boxProps}\n      trackColor={color}\n      value={rating ?? 100}\n    >\n      <CircularProgressLabel style={labelProps}>{rating ?? '?'}</CircularProgressLabel>\n    </CircularProgress>\n  );\n\n  if (!shouldShowDescription) {\n    return circularRating;\n  }\n\n  return (\n    <Box display='flex' flex={1}>\n      <Box flex={3} marginRight={4}>\n        <Text as='h3' color='gray.700' fontWeight='semibold' marginBottom={1}>\n          Confidence score:\n        </Text>\n        <Text>{descriptionForRating(rating)}</Text>\n      </Box>\n      <Box flex={1}>{circularRating}</Box>\n    </Box>\n  );\n};\n","import React, { FC } from 'react';\nimport { Box, Text } from '@chakra-ui/core';\n\nimport { PostInfo } from './PostInfo';\n\nimport { Comment as CommentType } from './feedSlice';\n\ntype Props = {} & CommentType;\n\nexport const Comment: FC<Props> = ({ comment, date, userImageURL, username }: Props) => (\n  <Box marginBottom={6} padding={4} shadow='sm'>\n    <Text fontSize='sm'>{comment}</Text>\n    <PostInfo date={date} userImageURL={userImageURL} username={username} />\n  </Box>\n);\n","import React, { FC, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link as RouterLink, RouteComponentProps, useHistory } from 'react-router-dom';\nimport {\n  Box,\n  Button,\n  Drawer,\n  DrawerBody,\n  DrawerCloseButton,\n  DrawerContent,\n  DrawerFooter,\n  DrawerHeader,\n  DrawerOverlay,\n  Image,\n  Input,\n  Link as ChakraLink,\n  Tag,\n  Text,\n  useToast,\n} from '@chakra-ui/core';\n\nimport { Comment } from './Comment';\nimport { PostInfo } from './PostInfo';\n\nimport { Rating } from '../../components/Rating';\n\nimport { Category, postRequested, selectPostByID } from './feedSlice';\nimport { selectOwnProfile } from '../user/userSlice';\n\nimport { RootState } from '../../app/store';\n\nimport { FALLBACK_IMAGE_URL } from './Post';\n\ntype Props = {\n  previousPathname?: string;\n} & RouteComponentProps<{ postID: string }>;\n\nexport const CATEGORY_NAMES: { [key in Category]: string } = {\n  news: 'News',\n  medical_supply: 'Medical Supply',\n  grocery: 'Grocery',\n  advice: 'Advice',\n};\n\nconst CATEGORY_LINKS: { [key in Category]: string } = {\n  advice: '/feed/advice',\n  grocery: '/feed/grocery',\n  medical_supply: '/feed/medical-supply',\n  news: '/feed/news',\n};\n\nconst Link: any = ChakraLink;\n\n// https://stackoverflow.com/questions/9038625/detect-if-device-is-ios/58065241#58065241\nconst isIOS =\n  (/iPad|iPhone|iPod/.test(navigator.platform) ||\n    (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1)) &&\n  !window.MSStream;\n\nexport const DetailView: FC<Props> = ({ match, previousPathname }: Props) => {\n  const dispatch = useDispatch();\n\n  const history = useHistory();\n\n  const toast = useToast();\n  const ownProfile = useSelector(selectOwnProfile).profile ?? null;\n\n  const postID: string | null = match.params.postID ?? null;\n\n  const post = useSelector((state: RootState) => selectPostByID(state, parseInt(postID)));\n\n  useEffect(() => {\n    if (post === null) {\n      dispatch(postRequested(+postID));\n    }\n  }, [dispatch, post, postID]);\n\n  if (post?.async.error) {\n    return <>TODO: Error state</>;\n  }\n\n  if (post === null || !post.post) {\n    return <>TODO: Null state</>;\n  }\n\n  const { categories, comments, date, imageURL, rating, text, title, userImageURL, username } = post.post;\n\n  const onClose = (): void => {\n    const nextPath = previousPathname ?? '/';\n    history.push(nextPath);\n  };\n\n  const onComment = (): void => {\n    toast({\n      title: 'Comment not submitted',\n      description: 'Submitting commments is not yet supported in this demo.',\n      status: 'info',\n      duration: 7000,\n      isClosable: true,\n    });\n  };\n\n  const footerContent = (\n    <>\n      <Button\n        onClick={(): void => {\n          onVote();\n          onClose();\n        }}\n        variant='ghost'\n        variantColor='green'\n      >\n        Disconfirm\n      </Button>\n      <Button\n        marginLeft={4}\n        onClick={(): void => {\n          onVote();\n          onClose();\n        }}\n        variantColor='green'\n      >\n        Confirm\n      </Button>\n    </>\n  );\n\n  const onVote = (): void => {\n    toast({\n      title: 'Vote saved.',\n      description: `Thank you for making ${\n        ownProfile?.cityName ? `content in ${ownProfile.cityName}` : 'local content'\n      } more reliable.`,\n      status: 'success',\n      duration: 7000,\n      isClosable: true,\n    });\n  };\n\n  return (\n    <>\n      <Drawer onClose={onClose} isFullHeight scrollBehavior='inside' placement='top' isOpen>\n        <DrawerOverlay />\n        <DrawerContent>\n          <DrawerCloseButton aria-label='return to feed' />\n          <DrawerHeader margin={['inherit', 'inherit', '0 auto']} width={['initial', 'initial', 1000]}>\n            <Text as='h2'>{title}</Text>\n\n            <Box\n              marginTop={2}\n              onClick={(event): void => {\n                // Prevent Drawer#onClose from being called so history#push isn't called.\n                event.stopPropagation();\n              }}\n            >\n              {categories.map((category: Category) => (\n                <Link as={RouterLink} key={category} to={CATEGORY_LINKS[category]}>\n                  <Tag marginRight={2} size='sm'>\n                    {CATEGORY_NAMES[category]}\n                  </Tag>\n                </Link>\n              ))}\n            </Box>\n\n            <div\n              // eslint-disable-next-line\n              onClick={(event): void => {\n                // Prevent Drawer#onClose from being called so history#push isn't called.\n                event.stopPropagation();\n              }}\n              role='presentation'\n            >\n              <PostInfo date={date} style={{ marginTop: 4 }} userImageURL={userImageURL} username={username} />\n            </div>\n          </DrawerHeader>\n\n          <DrawerBody margin='0 auto' maxWidth='1000px' width={['initial', 'initial', 1000]}>\n            <Image alt='post image' maxHeight={150} src={imageURL ?? FALLBACK_IMAGE_URL} />\n            <Box marginTop={8}>\n              <Text>{text}</Text>\n            </Box>\n            <Box display='flex' marginTop={[8, 8, 10]}>\n              <Rating\n                boxProps={{\n                  height: '100%',\n                  width: '100%',\n                  maxWidth: 70,\n                  maxHeight: 70,\n                }}\n                labelProps={{\n                  fontSize: '16px',\n                }}\n                rating={rating}\n                shouldShowDescription\n              />\n            </Box>\n            <Box marginTop={[8, 8, 10]}>\n              <Text as='h3' color='gray.700' fontWeight='semibold' marginBottom={1}>\n                Comments\n              </Text>\n              <div\n                // eslint-disable-next-line\n                onClick={(event): void => {\n                  // Prevent Drawer#onClose from being called so history#push isn't called.\n                  event.stopPropagation();\n                }}\n                role='presentation'\n              >\n                <Box marginTop={4}>\n                  {comments.length > 0 ? (\n                    comments\n                      .slice()\n                      .sort((commentA, commentB) => (commentA.date > commentB.date ? -1 : 1))\n                      .map((comment) => <Comment key={comment.commentID} {...comment} />)\n                  ) : (\n                    <Text fontSize='sm'>No comments</Text>\n                  )}\n                </Box>\n                <Box display='flex' marginTop={4}>\n                  <Box marginRight={4} width={['80%', '80%', '40%']}>\n                    <Input\n                      aria-label='comment on this post'\n                      variant='flushed'\n                      rounded={4}\n                      placeholder='Share with your neighbors'\n                      size='sm'\n                    />\n                  </Box>\n                  <Button\n                    onClick={(): void => {\n                      onComment();\n                    }}\n                    size='sm'\n                    variant='ghost'\n                  >\n                    Comment\n                  </Button>\n                </Box>\n              </div>\n            </Box>\n            {isIOS && (\n              <Box display='flex' justifyContent='flex-end' marginTop={8} marginBottom={16}>\n                {footerContent}\n              </Box>\n            )}\n          </DrawerBody>\n\n          <DrawerFooter\n            maxWidth='1000px'\n            width={['initial', 'initial', 1000]}\n            margin={['initial', 'initial', '0 auto']}\n          >\n            {!isIOS && footerContent}\n          </DrawerFooter>\n        </DrawerContent>\n      </Drawer>\n    </>\n  );\n};\n"],"sourceRoot":""}