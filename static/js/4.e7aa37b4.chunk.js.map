{"version":3,"sources":["components/PasswordInput.tsx","app/styles.ts","../node_modules/@chakra-ui/core/dist/es/FormLabel/index.js","../node_modules/@chakra-ui/core/dist/es/Alert/styles.js","../node_modules/@chakra-ui/core/dist/es/Alert/index.js","features/user/Registration.tsx"],"names":["PasswordInput","containerStyles","isPasswordVisible","password","setIsPasswordVisible","setPassword","htmlFor","size","id","isRequired","maxLength","minLength","onChange","target","value","type","width","aria-label","height","onClick","variant","responsiveBoxProps","marginTop","marginX","RequiredIndicator","props","colorMode","useColorMode","jsx","Box","_extends","as","ml","color","light","dark","children","FormLabel","forwardRef","_ref","ref","_objectWithoutPropertiesLoose","formControl","useFormControl","fontSize","pr","pb","opacity","isDisabled","fontWeight","textAlign","verticalAlign","display","displayName","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","subtle","_ref2","colors","theme","darkBg","bg","colorEmphasis","statusStyleProps","solid","pt","borderTop","borderColor","topAccent","pl","borderLeft","leftAccent","baseProps","alignItems","position","overflow","useAlertStyle","_props","useTheme","statuses","info","icon","warning","success","error","AlertContext","createContext","Alert","_ref$status","status","_ref$variant","rest","alertStyleProps","context","Provider","role","AlertIcon","_useAlertContext","useContext","undefined","Error","useAlertContext","iconStyleProps","_ref3","includes","useAlertIconStyle","Icon","mr","name","Registration","dispatch","useDispatch","useSelector","selectAsync","loading","useState","setName","email","setEmail","maxWidth","onSubmit","e","preventDefault","registered","country","isLoading","variantColor"],"mappings":"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","file":"static/js/4.e7aa37b4.chunk.js","sourcesContent":["import React, { FC } from 'react';\nimport { BoxProps, Button, FormControl, FormLabel, Input, InputGroup, InputRightElement } from '@chakra-ui/core';\n\nconst MIN_LENGTH_PASSWORD = 8;\nconst MAX_LENGTH_PASSWORD = 64;\n\ntype Props = {\n  containerStyles: BoxProps;\n  isPasswordVisible: boolean;\n  password: string;\n  setIsPasswordVisible: (isPasswordVisible: Props['isPasswordVisible']) => void;\n  setPassword: (password: Props['password']) => void;\n};\n\nexport const PasswordInput: FC<Props> = ({\n  containerStyles,\n  isPasswordVisible,\n  password,\n  setIsPasswordVisible,\n  setPassword,\n}: Props) => (\n  <FormControl {...containerStyles}>\n    <FormLabel htmlFor='password'>Password</FormLabel>\n    <InputGroup size='md'>\n      <Input\n        id='password'\n        isRequired\n        maxLength={MAX_LENGTH_PASSWORD}\n        minLength={MIN_LENGTH_PASSWORD}\n        // @ts-ignore\n        onChange={({ target }): void => {\n          setPassword(target.value);\n        }}\n        value={password}\n        type={isPasswordVisible ? 'text' : 'password'}\n      />\n      <InputRightElement width='4.5rem'>\n        <Button\n          aria-label='toggle password visibility'\n          height='65%'\n          onClick={(): void => {\n            setIsPasswordVisible(!isPasswordVisible);\n          }}\n          variant='outline'\n          size='sm'\n        >\n          {isPasswordVisible ? 'Hide' : 'Show'}\n        </Button>\n      </InputRightElement>\n    </InputGroup>\n  </FormControl>\n);\n","import { BoxProps } from '@chakra-ui/core';\n\nexport const responsiveBoxProps: BoxProps = {\n  marginTop: 4,\n  marginX: 'auto',\n  width: [\n    '80%', // base\n    '90%', // 480px upwards\n    '90%', // 768px upwards\n    '80%', // 992px upwards\n    '70%',\n  ],\n};\n","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/extends\";\n\n/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport { forwardRef } from \"react\";\nimport Box from \"../Box\";\nimport { useFormControl } from \"../FormControl\";\nimport { useColorMode } from \"../ColorModeProvider\";\nexport var RequiredIndicator = function RequiredIndicator(props) {\n  var _useColorMode = useColorMode(),\n      colorMode = _useColorMode.colorMode;\n\n  var color = {\n    light: \"red.500\",\n    dark: \"red.300\"\n  };\n  return jsx(Box, _extends({\n    as: \"span\",\n    ml: 1,\n    color: color[colorMode],\n    \"aria-hidden\": \"true\",\n    children: \"*\"\n  }, props));\n};\nexport var FormLabel = forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\"]);\n\n  var formControl = useFormControl(props);\n  return jsx(Box, _extends({\n    ref: ref,\n    fontSize: \"md\",\n    pr: \"12px\",\n    pb: \"4px\",\n    opacity: formControl.isDisabled ? \"0.4\" : \"1\",\n    fontWeight: \"medium\",\n    textAlign: \"left\",\n    verticalAlign: \"middle\",\n    display: \"inline-block\",\n    as: \"label\"\n  }, props), children, formControl.isRequired && jsx(RequiredIndicator, null));\n});\nFormLabel.displayName = \"FormLabel\";\nexport default FormLabel;","import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/** @jsx jsx */\nimport { colorEmphasis } from \"../theme/colors-utils\";\nimport { useTheme } from \"../ThemeProvider\";\nimport { useColorMode } from \"../ColorModeProvider\";\n\nvar leftAccent = function leftAccent(props) {\n  var color = props.color;\n  return {\n    light: _objectSpread({\n      pl: 3\n    }, subtle(props).light, {\n      borderLeft: \"4px\",\n      borderColor: color + \".500\"\n    }),\n    dark: _objectSpread({\n      pl: 3\n    }, subtle(props).dark, {\n      borderLeft: \"4px\",\n      borderColor: color + \".200\"\n    })\n  };\n};\n\nvar topAccent = function topAccent(props) {\n  var color = props.color;\n  return {\n    light: _objectSpread({\n      pt: 2\n    }, subtle(props).light, {\n      borderTop: \"4px\",\n      borderColor: color + \".500\"\n    }),\n    dark: _objectSpread({\n      pt: 2\n    }, subtle(props).dark, {\n      borderTop: \"4px\",\n      borderColor: color + \".200\"\n    })\n  };\n};\n\nvar solid = function solid(_ref) {\n  var color = _ref.color;\n  return {\n    light: {\n      bg: color + \".500\",\n      color: \"white\"\n    },\n    dark: {\n      bg: color + \".200\",\n      color: \"gray.900\"\n    }\n  };\n};\n\nvar subtle = function subtle(_ref2) {\n  var color = _ref2.color,\n      colors = _ref2.theme.colors;\n  var darkBg = colors[color] && colors[color][200];\n  return {\n    light: {\n      bg: color + \".100\"\n    },\n    dark: {\n      bg: colorEmphasis(darkBg, \"lowest\")\n    }\n  };\n};\n\nvar statusStyleProps = function statusStyleProps(props) {\n  switch (props.variant) {\n    case \"solid\":\n      return solid(props);\n\n    case \"subtle\":\n      return subtle(props);\n\n    case \"top-accent\":\n      return topAccent(props);\n\n    case \"left-accent\":\n      return leftAccent(props);\n\n    default:\n      return {};\n  }\n};\n\nvar baseProps = {\n  display: \"flex\",\n  alignItems: \"center\",\n  position: \"relative\",\n  overflow: \"hidden\",\n  pl: 4,\n  pr: 4,\n  pt: 3,\n  pb: 3\n};\n\nvar useAlertStyle = function useAlertStyle(props) {\n  var _useColorMode = useColorMode(),\n      colorMode = _useColorMode.colorMode;\n\n  var theme = useTheme();\n\n  var _props = _objectSpread({}, props, {\n    theme: theme\n  });\n\n  return _objectSpread({}, baseProps, {}, statusStyleProps(_props)[colorMode]);\n};\n\nexport var useAlertIconStyle = function useAlertIconStyle(_ref3) {\n  var variant = _ref3.variant,\n      color = _ref3.color;\n\n  var _useColorMode2 = useColorMode(),\n      colorMode = _useColorMode2.colorMode;\n\n  if ([\"left-accent\", \"top-accent\", \"subtle\"].includes(variant)) {\n    var result = {\n      light: {\n        color: color + \".500\"\n      },\n      dark: {\n        color: color + \".200\"\n      }\n    };\n    return result[colorMode];\n  }\n};\nexport default useAlertStyle;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\n\n/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport { createContext, useContext } from \"react\";\nimport Box from \"../Box\";\nimport Icon from \"../Icon\";\nimport useAlertStyle, { useAlertIconStyle } from \"./styles\";\nexport var statuses = {\n  info: {\n    icon: \"info\",\n    color: \"blue\"\n  },\n  warning: {\n    icon: \"warning-2\",\n    color: \"orange\"\n  },\n  success: {\n    icon: \"check-circle\",\n    color: \"green\"\n  },\n  error: {\n    icon: \"warning\",\n    color: \"red\"\n  }\n};\nvar AlertContext = createContext();\n\nvar useAlertContext = function useAlertContext() {\n  var context = useContext(AlertContext);\n\n  if (context === undefined) {\n    throw new Error(\"useAlertContext must be used within a AlertContextProvider\");\n  }\n\n  return context;\n};\n\nvar Alert = function Alert(_ref) {\n  var _ref$status = _ref.status,\n      status = _ref$status === void 0 ? \"info\" : _ref$status,\n      _ref$variant = _ref.variant,\n      variant = _ref$variant === void 0 ? \"subtle\" : _ref$variant,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"status\", \"variant\"]);\n\n  var alertStyleProps = useAlertStyle({\n    variant: variant,\n    color: statuses[status] && statuses[status][\"color\"]\n  });\n  var context = {\n    status: status,\n    variant: variant\n  };\n  return jsx(AlertContext.Provider, {\n    value: context\n  }, jsx(Box, _extends({\n    role: \"alert\"\n  }, alertStyleProps, rest)));\n};\n\nvar AlertTitle = function AlertTitle(props) {\n  return jsx(Box, _extends({\n    fontWeight: \"bold\",\n    lineHeight: \"normal\"\n  }, props));\n};\n\nvar AlertDescription = function AlertDescription(props) {\n  return jsx(Box, props);\n};\n\nvar AlertIcon = function AlertIcon(props) {\n  var _useAlertContext = useAlertContext(),\n      status = _useAlertContext.status,\n      variant = _useAlertContext.variant;\n\n  var iconStyleProps = useAlertIconStyle({\n    variant: variant,\n    color: statuses[status] && statuses[status][\"color\"]\n  });\n  return jsx(Icon // mt={1}\n  , _extends({\n    mr: 3,\n    size: 5,\n    name: statuses[status] && statuses[status][\"icon\"]\n  }, iconStyleProps, props));\n};\n\nexport { Alert, AlertTitle, AlertDescription, AlertIcon };","import React, { FC, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Alert, AlertIcon, Box, Button, FormControl, FormLabel, Input } from '@chakra-ui/core';\n\nimport { registered, selectAsync } from './userSlice';\n\nimport { PasswordInput } from '../../components/PasswordInput';\n\nimport { responsiveBoxProps } from '../../app/styles';\n\nconst MIN_LENGTH_USERNAME = 3;\nconst MAX_LENGTH_USERNAME = 16;\n\nconst containerStyles = {\n  marginTop: 4,\n};\n\nexport const Registration: FC = () => {\n  const dispatch = useDispatch();\n  const { error, loading } = useSelector(selectAsync);\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\n\n  return (\n    <Box {...responsiveBoxProps} maxWidth='500px'>\n      <form\n        onSubmit={(e): void => {\n          e.preventDefault();\n\n          dispatch(\n            registered({\n              // TODO: Country/City in registration flow\n              country: 'test-country',\n              email,\n              name,\n              password,\n            }),\n          );\n        }}\n      >\n        <FormControl {...containerStyles}>\n          <FormLabel htmlFor='username'>Username</FormLabel>\n          <Input\n            id='username'\n            isRequired\n            maxLength={MAX_LENGTH_USERNAME}\n            minLength={MIN_LENGTH_USERNAME}\n            // @ts-ignore\n            onChange={({ target }): void => {\n              setName(target.value);\n            }}\n            type='text'\n            value={name}\n          />\n        </FormControl>\n        <FormControl {...containerStyles}>\n          <FormLabel htmlFor='email'>Email address</FormLabel>\n          <Input\n            isRequired\n            id='email'\n            // @ts-ignore\n            onChange={({ target }): void => {\n              setEmail(target.value);\n            }}\n            type='email'\n            value={email}\n          />\n        </FormControl>\n        <PasswordInput\n          containerStyles={containerStyles}\n          isPasswordVisible={isPasswordVisible}\n          password={password}\n          setIsPasswordVisible={setIsPasswordVisible}\n          setPassword={setPassword}\n        />\n        <Button isLoading={loading === 'pending'} marginTop={6} type='submit' variantColor='blue'>\n          Register\n        </Button>\n      </form>\n      {error && (\n        <Alert marginTop={6} status='error' variant='left-accent'>\n          <AlertIcon />\n          {error}\n        </Alert>\n      )}\n    </Box>\n  );\n};\n"],"sourceRoot":""}