{"version":3,"sources":["app/AppRoute.tsx","components/DelayedFallback.tsx","components/Author.tsx","components/Rating.tsx","utils/dom-utils.ts","features/feed/PostDrawer.tsx","features/feed/Post.tsx","features/feed/feedSlice.ts","features/feed/Feed.tsx","features/feed/FeedHeader.tsx","features/feed/FeedPage.tsx","components/TabBarButton.tsx","components/TabBar.tsx","app/App.tsx","app/store.ts","serviceWorker.ts","index.tsx","features/user/userSlice.ts","app/router.ts","utils/fetch.ts","app/styles.tsx","features/submit/submitSlice.ts"],"names":["UserState","DelayedFallback","useState","show","setShow","useEffect","timeout","setTimeout","clearTimeout","Spinner","label","AppRoute","children","lazyload","path","redirect","isLoggedIn","useSelector","selectIsLoggedIn","when","LoggedIn","LoggedOut","to","pathname","Component","fallback","Link","ChakraLink","Author","style","userImageURL","username","profilePath","as","RouterLink","Text","color","fontSize","Avatar","marginLeft","name","size","src","Rating","boxProps","labelProps","rating","colorForRating","CircularProgress","aria-label","role","trackColor","value","convertWidthToEM","widthPX","parseFloat","getBodyFontSize","getComputedStyle","document","querySelector","PostDrawer","isOpen","onClose","post","categories","date","imageURL","text","title","postContainerRef","useWindowWidth","leading","wait","deviceSpecificProps","marginTop","Drawer","scrollBehavior","isFullHeight","placement","finalFocusRef","margin","width","Box","map","category","Tag","key","alignItems","display","height","fontWeight","Date","toDateString","Divider","borderColor","orientation","maxWidth","Image","alt","maxHeight","flex","marginRight","marginBottom","Button","onClick","variant","variantColor","paddingProps","padding","Post","props","useDisclosure","drawerIsOpen","onDrawerOpen","onOpen","onDrawerClose","moreButtonRef","React","useRef","boxShadow","borderRadius","ref","position","background","borderTopRightRadius","bottom","borderTopLeftRadius","objectFit","MOCKED_CATEGORIES","news","1","setHours","getHours","postID","medical_supply","advice","grocery","loadRequested","createAsyncThunk","Promise","resolve","slice","createSlice","initialState","reduce","acc","async","error","loading","posts","reducers","extraReducers","pending","type","state","action","meta","arg","fulfilled","feed","payload","rejected","message","feedReducer","reducer","Feed","dispatch","useDispatch","createSelector","selectByCategory","Object","keys","length","paddingX","values","Location","profile","selectOwnProfile","textDecoration","cityName","FeedHeader","_props","firstName","InputGroup","Icon","Input","placeholder","responsiveBoxProps","tabs","id","FeedPage","useLocation","tabsSize","Tabs","aria-controls","aria-selected","tabIndex","outline","exact","from","TabBarButton","ariaLabel","icon","isActive","flexDirection","paddingY","IconButton","Submit","lazy","then","default","Profile","Account","Login","ResetPassword","Registration","Page404","buttons","home","submit","account","loggedInButtons","loggedOutButtons","TabBar","loggedIn","location","backgroundColor","borderTop","zIndex","buttonProps","startsWith","App","authTokenChecked","authTokenExists","ThemeProvider","theme","CSSReset","basename","ROUTER_BASENAME","history","persistConfig","storage","blacklist","rootReducer","combineReducers","submitReducer","user","userReducer","persistedReducer","persistReducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","isLocalhost","persistStore","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","LOCAL_STORAGE_AUTH_TOKEN_KEY","MOCKED_OWN_PROFILE","email","lastName","postsCount","MOCKED_OTHER_PROFILES","emily_rose28","body","JSON","stringify","method","data","push","localStorage","setItem","token","registered","openedOtherProfile","otherProfile","loggedOut","_action","actions","selectAsync","selectOtherProfile","selectOwnUsername","createHashHistory","DEFAULT_OPTIONS","credentials","options","json","ok","Error","errorMessage","marginX","chakraTheme","icons","ioMdEye","viewBox","ioMdEyeOff","mdAdd","mdHome","mdPerson","submitted"],"mappings":"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","file":"static/js/main.e313f05e.chunk.js","sourcesContent":["import React, { FC, ReactElement, Suspense } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Redirect, Route } from 'react-router-dom';\n\nimport { DelayedFallback } from '../components/DelayedFallback';\n\nimport { selectIsLoggedIn } from '../features/user/userSlice';\n\nimport { AppRoutes } from './router';\n\nexport enum UserState {\n  LoggedIn,\n  LoggedOut,\n}\n\ntype Props = {\n  children: ReactElement;\n  lazyload: boolean;\n  path: AppRoutes | null;\n  redirect?: {\n    path: AppRoutes;\n    when: UserState;\n  };\n};\n\nexport const AppRoute: FC<Props> = ({ children, lazyload, path, redirect }: Props) => {\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const shouldRedirect =\n    (redirect?.when === UserState.LoggedIn && isLoggedIn) || (redirect?.when === UserState.LoggedOut && !isLoggedIn);\n  if (shouldRedirect) {\n    return <Redirect to={{ pathname: redirect?.path }} />;\n  }\n\n  const Component = <Route path={path || ''}>{children}</Route>;\n  return lazyload ? <Suspense fallback={<DelayedFallback />}>{Component}</Suspense> : Component;\n};\n","import React, { FC, useEffect, useState } from 'react';\nimport { Spinner } from '@chakra-ui/core';\n\nexport const DelayedFallback: FC = () => {\n  const [show, setShow] = useState(false);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => setShow(true), 500);\n    return (): void => {\n      clearTimeout(timeout);\n    };\n  }, []);\n\n  return <>{show && <Spinner label='Loading...' />}</>;\n};\n","import React, { FC } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Avatar, BoxProps, Link as ChakraLink, Text } from '@chakra-ui/core';\n\nimport { AppRoutes } from '../app/router';\nimport { Post } from '../features/feed/feedSlice';\n\ntype Props = {\n  style?: BoxProps;\n  userImageURL: Post['userImageURL'];\n  username: Post['username'];\n};\n\n// TS workaround\nconst Link: any = ChakraLink;\n\nexport const Author: FC<Props> = ({ style, userImageURL, username }: Props) => {\n  const profilePath = ('/profile' as AppRoutes) + `/${username}`;\n\n  return (\n    <Link as={RouterLink} to={profilePath} style={style}>\n      <Text as='span' color='blue.500' fontSize='sm'>\n        {username}\n      </Text>\n      {userImageURL && <Avatar marginLeft={4} name={username} size='xs' src={userImageURL ?? ''} />}\n    </Link>\n  );\n};\n","import React, { FC } from 'react';\nimport { BoxProps, CircularProgress, CircularProgressLabel } from '@chakra-ui/core';\n\nimport { Post } from '../features/feed/feedSlice';\n\nconst colorForRating = (rating: Post['rating']): string => {\n  if (rating === null || rating < 30) {\n    return 'gray';\n  }\n\n  if (rating >= 30 && rating <= 70) {\n    return 'yellow';\n  }\n\n  return 'green';\n};\n\ntype Props = { boxProps?: BoxProps; labelProps?: BoxProps; rating: Post['rating'] };\n\nexport const Rating: FC<Props> = ({ boxProps, labelProps, rating }: Props) => {\n  const color = colorForRating(rating);\n\n  return (\n    <CircularProgress\n      aria-label='reliability score of post'\n      color={color}\n      role='presentation'\n      style={boxProps}\n      trackColor={color}\n      value={rating ?? 100}\n    >\n      <CircularProgressLabel style={labelProps}>{rating ?? '?'}</CircularProgressLabel>\n    </CircularProgress>\n  );\n};\n","export const convertWidthToEM = (widthPX: number): number => widthPX / parseFloat(getBodyFontSize());\n\n// @ts-ignore\nconst getBodyFontSize = (): string => getComputedStyle(document.querySelector('body'))['font-size'];\n","import React, { FC, RefObject } from 'react';\nimport {\n  Box,\n  Button,\n  Divider,\n  Drawer,\n  DrawerBody,\n  DrawerCloseButton,\n  DrawerContent,\n  DrawerFooter,\n  DrawerHeader,\n  DrawerOverlay,\n  Image,\n  Tag,\n  Text,\n} from '@chakra-ui/core';\nimport { useWindowWidth } from '@react-hook/window-size';\n\nimport { Author } from '../../components/Author';\nimport { Rating } from '../../components/Rating';\n\nimport { Post as PostType } from './feedSlice';\n\nimport { convertWidthToEM } from '../../utils/dom-utils';\n\ntype Props = {\n  isOpen: boolean;\n  onClose: () => void;\n  post: PostType;\n  postContainerRef: RefObject<any>;\n};\n\nconst MOBILE_BREAKPOINT_EM = 48;\n\nexport const PostDrawer: FC<Props> = ({\n  isOpen,\n  onClose,\n  post: { categories, date, imageURL, rating, text, title, userImageURL, username },\n  postContainerRef,\n}: Props) => {\n  // Workaround for hidden header on mobile devices\n  const widthPX = useWindowWidth(0, { leading: true, wait: 250 });\n  const widthEM = convertWidthToEM(widthPX);\n  const deviceSpecificProps = widthEM <= MOBILE_BREAKPOINT_EM ? { marginTop: 24 } : {};\n\n  return (\n    <Drawer\n      scrollBehavior='inside'\n      isFullHeight\n      isOpen={isOpen}\n      placement='bottom'\n      onClose={onClose}\n      finalFocusRef={postContainerRef}\n    >\n      <DrawerOverlay />\n      <DrawerContent>\n        <DrawerCloseButton {...deviceSpecificProps} aria-label='return to feed' />\n        <DrawerHeader\n          margin={['inherit', 'inherit', '0 auto']}\n          width={['initial', 'initial', 1000]}\n          {...deviceSpecificProps}\n        >\n          <Text as='h2'>{title}</Text>\n\n          <Box marginTop={2}>\n            {categories.map((category) => (\n              <Tag key={category} size='sm'>\n                {category}\n              </Tag>\n            ))}\n          </Box>\n\n          <Box alignItems='center' display='flex' height='30px' marginTop={4}>\n            <Text\n              alignItems='center'\n              as='span'\n              color='gray.500'\n              display='flex'\n              fontSize='sm'\n              fontWeight='normal'\n              height='100%'\n            >\n              {new Date(date).toDateString()}\n            </Text>\n            <Divider borderColor='gray.300' height='80%' orientation='vertical' />\n            <Author\n              style={{\n                alignItems: 'center',\n                display: 'flex',\n                height: '100%',\n              }}\n              userImageURL={userImageURL}\n              username={username}\n            />\n          </Box>\n        </DrawerHeader>\n\n        <DrawerBody margin='0 auto' maxWidth='1000px' width={['initial', 'initial', 1000]}>\n          {imageURL && <Image alt='post image' maxHeight={150} src={imageURL} />}\n\n          <Box marginTop={6}>\n            <Text>{text}</Text>\n          </Box>\n\n          <Box display='flex' marginTop={6}>\n            <Box flex={3} marginRight={4}>\n              <Text as='h3' color='gray.600' fontWeight='semibold' marginBottom={1}>\n                Confidence score:\n              </Text>\n              <Text>\n                Based on information gathered, we do not have enough information to be confident of this data.\n              </Text>\n            </Box>\n            <Box flex={1}>\n              <Rating\n                boxProps={{ height: '100%', width: '100%', maxWidth: 70, maxHeight: 70 }}\n                labelProps={{ fontSize: '16px' }}\n                rating={rating}\n              />\n            </Box>\n          </Box>\n        </DrawerBody>\n\n        <DrawerFooter maxWidth='1000px' width={['initial', 'initial', 1000]} margin={['initial', 'initial', '0 auto']}>\n          <Button\n            onClick={(): void => {\n              onClose();\n            }}\n            variant='ghost'\n            variantColor='blue'\n          >\n            Unreliable\n          </Button>\n          <Button\n            marginLeft={4}\n            onClick={(): void => {\n              onClose();\n            }}\n            variantColor='blue'\n          >\n            Reliable\n          </Button>\n        </DrawerFooter>\n      </DrawerContent>\n    </Drawer>\n  );\n};\n","import React, { FC } from 'react';\nimport { Box, Button, Image, Text, useDisclosure } from '@chakra-ui/core';\n\nimport { PostDrawer } from './PostDrawer';\nimport { Author } from '../../components/Author';\nimport { Rating } from '../../components/Rating';\n\nimport { Post as PostType } from './feedSlice';\n\ntype Props = {} & PostType;\n\nconst paddingProps = { padding: 2 };\n\nconst BORDER_RADIUS = 8;\n\nexport const Post: FC<Props> = (props: Props) => {\n  const { isOpen: drawerIsOpen, onOpen: onDrawerOpen, onClose: onDrawerClose } = useDisclosure();\n  const moreButtonRef = React.useRef();\n  const postContainerRef = React.useRef();\n\n  const { date, imageURL, rating, title, userImageURL, username } = props;\n\n  return (\n    <>\n      <Box\n        boxShadow='0px 8px 12px rgba(42, 52, 61, 0.16078431372549)'\n        borderRadius={BORDER_RADIUS}\n        maxWidth={300}\n        ref={postContainerRef}\n      >\n        <Box height={128} position='relative'>\n          <Text\n            {...paddingProps}\n            background='#ffffffaa'\n            // @ts-ignore\n            borderTopRightRadius={BORDER_RADIUS}\n            bottom={0}\n            position='absolute'\n            width='80%'\n          >\n            {title}\n          </Text>\n\n          {imageURL && (\n            <Image\n              alt='post background image'\n              // @ts-ignore\n              borderTopLeftRadius={BORDER_RADIUS}\n              // @ts-ignore\n              borderTopRightRadius={BORDER_RADIUS}\n              height='100%'\n              objectFit='cover'\n              src={imageURL}\n              width='100%'\n            />\n          )}\n        </Box>\n\n        <Box {...paddingProps}>\n          <Box>\n            <Text color='gray.500' fontSize='sm'>\n              {new Date(date).toDateString()}\n            </Text>\n          </Box>\n          <Box marginTop={2}>\n            <Author userImageURL={userImageURL} username={username} />\n          </Box>\n        </Box>\n\n        <Box {...paddingProps} alignItems='center' display='flex'>\n          <Rating rating={rating} />\n          <Button onClick={onDrawerOpen} ref={moreButtonRef} marginLeft={6} variant='outline' variantColor='blue'>\n            More\n          </Button>\n        </Box>\n      </Box>\n\n      <PostDrawer isOpen={drawerIsOpen} onClose={onDrawerClose} post={props} postContainerRef={postContainerRef} />\n    </>\n  );\n};\n","import { createAsyncThunk, createSelector, createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { RootState } from '../../app/store';\n\nconst SLICE_NAME = 'feed';\n\ntype AsyncState = {\n  error: string | null;\n  loading: 'idle' | 'pending';\n};\n\nexport type Category = 'news' | 'medical_supply' | 'grocery' | 'advice';\n\nconst CATEGORIES: Category[] = ['advice', 'grocery', 'medical_supply', 'news'];\n\nexport type Post = {\n  postID: number;\n  categories: Category[];\n  date: number;\n  imageURL: string | null;\n  rating: number | null;\n  text: string;\n  title: string;\n  userImageURL: string | null;\n  username: string;\n};\n\ntype Categories = { [key in Category]: { async: AsyncState; posts: { [postID: number]: Post } | null } };\n\ntype State = {\n  categories: Categories;\n};\n\nconst generateRandomDate = (): number => new Date().setHours(new Date().getHours() - 2);\n\nconst MOCKED_CATEGORIES: { [category in Category]: { [postID: number]: Post } } = {\n  news: {\n    1: {\n      categories: ['news'],\n      date: generateRandomDate(),\n      postID: 1,\n      rating: 74,\n      text:\n        'Service disconnection has been suspended. Lorem ipsum dolor sit amet. Amet sit dolor ipsum lorem? Lorem ipsum dolor sit amet!',\n      title: 'Service disconnection has been suspended',\n      username: 'emily_rose28',\n      imageURL: 'https://via.placeholder.com/350x150',\n      userImageURL: 'https://via.placeholder.com/350x150',\n    },\n  },\n  medical_supply: {},\n  advice: {},\n  grocery: {},\n};\n\nexport const loadRequested = createAsyncThunk(`${SLICE_NAME}/loadRequested`, (category: Category) =>\n  Promise.resolve(MOCKED_CATEGORIES[category]),\n);\n\nexport const slice = createSlice({\n  name: SLICE_NAME,\n  initialState: {\n    categories: CATEGORIES.reduce(\n      (acc, category: Category) => ({\n        ...acc,\n        [category]: {\n          async: {\n            error: null,\n            loading: 'idle',\n          },\n          posts: null,\n        },\n      }),\n      {} as Categories,\n    ),\n  } as State,\n  reducers: {},\n  extraReducers: {\n    [loadRequested.pending.type]: (state, action): void => {\n      // @ts-ignore\n      const category: Category = action.meta.arg;\n\n      const async = state.categories[category].async;\n\n      if (async.loading === 'idle') {\n        async.loading = 'pending';\n      }\n    },\n    [loadRequested.fulfilled.type]: (state, action: PayloadAction<{ [postID: number]: Post }>): void => {\n      // @ts-ignore\n      const category: Category = action.meta.arg;\n\n      const feed = state.categories[category];\n      const async = feed.async;\n\n      if (async.loading === 'pending') {\n        async.loading = 'idle';\n        feed.posts = action.payload;\n      }\n    },\n    [loadRequested.rejected.type]: (state, action: { error: Error }): void => {\n      // @ts-ignore\n      const category: Category = action.meta.arg;\n\n      const async = state.categories[category].async;\n\n      if (async.loading === 'pending') {\n        async.loading = 'idle';\n        async.error = action.error.message;\n      }\n    },\n  },\n});\n\nexport const selectByCategory = (state: RootState, category: Category): State['categories'][Category] =>\n  createSelector(\n    (state: RootState) => state.feed.categories,\n    (categories) => categories[category],\n  )(state);\n\nexport const feedReducer = slice.reducer;\n","import React, { FC, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Box } from '@chakra-ui/core';\n\nimport { Post } from './Post';\nimport { Category, loadRequested, Post as PostType, selectByCategory } from './feedSlice';\n\nimport { RootState } from '../../app/store';\n\ntype Props = {\n  category: Category;\n};\n\nexport const Feed: FC<Props> = ({ category }: Props) => {\n  const dispatch = useDispatch();\n  const { async, posts } = useSelector((state: RootState) => selectByCategory(state, category));\n\n  useEffect(() => {\n    if (async.error === null && posts === null) {\n      dispatch(loadRequested(category));\n    }\n  }, [async, category, dispatch, posts]);\n\n  if (async.error) {\n    // TODO:\n    return <h1>An error occured</h1>;\n  }\n\n  if (async.loading === 'pending') {\n    // TODO:\n    return <h1>Loading...</h1>;\n  }\n\n  if (posts === null) {\n    return <>TODO: Loading state</>;\n  }\n\n  if (Object.keys(posts).length === 0) {\n    return <>TODO: Empty state</>;\n  }\n\n  return (\n    <Box paddingX={4}>\n      {Object.values(posts).map((post: PostType) => (\n        <Post key={post.postID} {...post} />\n      ))}\n    </Box>\n  );\n};\n","import React, { FC } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Box, Button, Icon, Input, InputGroup, InputLeftElement, Text } from '@chakra-ui/core';\n\nimport { selectOwnProfile } from '../user/userSlice';\n\nimport { AppRoutes } from '../../app/router';\nimport { responsiveBoxProps } from '../../app/styles';\n\ntype Props = {};\n\nconst INPUT_PLACEHOLDER = 'Use keywords to search for information';\n\nconst Location: FC<{}> = () => {\n  const profile = useSelector(selectOwnProfile);\n\n  if (profile === null) {\n    return null;\n  }\n\n  return (\n    <Text as='a' fontWeight='semibold' textDecoration='underline'>\n      {profile.cityName}\n    </Text>\n  );\n};\n\nexport const FeedHeader: FC<Props> = (_props: Props) => {\n  const profile = useSelector(selectOwnProfile);\n\n  if (!profile) {\n    return (\n      <Box {...responsiveBoxProps}>\n        <p>Sign in to vote and contribute.</p>\n        <RouterLink to={'/account/login' as AppRoutes}>\n          <Button marginTop={4} size='sm' variantColor='blue'>\n            Sign in\n          </Button>\n        </RouterLink>\n      </Box>\n    );\n  }\n\n  return (\n    <Box paddingX={4}>\n      <Text color='gray.600' fontSize='lg'>\n        Good morning, {profile.firstName || profile.cityName}\n      </Text>\n      <Text color='gray.600' fontSize='lg' marginTop={1}>\n        Here are the latest for <Location />\n      </Text>\n      <InputGroup marginTop={4}>\n        <InputLeftElement>\n          <Icon color='gray.400' name='search' />\n        </InputLeftElement>\n        <Input placeholder={INPUT_PLACEHOLDER} type='text' />\n      </InputGroup>\n    </Box>\n  );\n};\n","import React, { FC } from 'react';\nimport { Link, Redirect, Route, Switch, useLocation } from 'react-router-dom';\nimport { Box, Tab, TabList, TabPanels, Tabs } from '@chakra-ui/core';\nimport { useWindowWidth } from '@react-hook/window-size';\n\nimport { Feed } from './Feed';\nimport { FeedHeader } from './FeedHeader';\n\nimport { Category } from './feedSlice';\n\nimport { convertWidthToEM } from '../../utils/dom-utils';\n\nconst ARIA_TABS = 'tabs';\nconst ARIA_NEWS_TAB = 'tabs-news-tab';\nconst ARIA_MEDICAL_SUPPLY_TAB = 'tabs-medical-supply-tab';\nconst ARIA_GROCERY_TAB = 'tabs-grocery-tab';\nconst ARIA_ADVICE_TAB = 'tabs-advice-tab';\n\nconst NEWS_PATH = '/feed/news';\nconst MEDICAL_SUPPLY_PATH = '/feed/medical-supply';\nconst GROCERY_PATH = '/feed/grocery';\nconst ADVICE_PATH = '/feed/advice';\n\nconst tabs: {\n  category: Category;\n  id: string;\n  name: string;\n  to: string;\n}[] = [\n  { category: 'news', id: ARIA_NEWS_TAB, name: 'News', to: NEWS_PATH },\n  { category: 'medical_supply', id: ARIA_MEDICAL_SUPPLY_TAB, name: 'Medical Supply', to: MEDICAL_SUPPLY_PATH },\n  { category: 'grocery', id: ARIA_GROCERY_TAB, name: 'Grocery', to: GROCERY_PATH },\n  { category: 'advice', id: ARIA_ADVICE_TAB, name: 'Advice', to: ADVICE_PATH },\n];\n\n// Taken from theme.breakpoints\nconst TABS_SIZE_BREAKPOINT_EM = 30;\n\nexport const FeedPage: FC = () => {\n  const { pathname } = useLocation();\n\n  // Workaround for showing smaller text on mobile.\n  const widthPX = useWindowWidth(0, { leading: true, wait: 250 });\n  const widthEM = convertWidthToEM(widthPX);\n  const tabsSize = widthEM <= TABS_SIZE_BREAKPOINT_EM ? 'sm' : 'md';\n\n  return (\n    <Box marginTop={2}>\n      <FeedHeader />\n      <Tabs marginTop={6} size={tabsSize}>\n        <TabList id={ARIA_TABS}>\n          {tabs.map(({ id, name, to }) => (\n            <Tab\n              aria-controls={ARIA_TABS}\n              aria-selected={pathname === to}\n              as={Link}\n              id={id}\n              key={name}\n              tabIndex={0}\n              to={to}\n            >\n              {name}\n            </Tab>\n          ))}\n        </TabList>\n\n        <TabPanels marginTop={8} outline='none'>\n          <Switch>\n            {tabs.map(({ category, to }) => (\n              <Route exact key={category} path={to}>\n                <Feed category={category} />\n              </Route>\n            ))}\n            <Redirect from='/' to={NEWS_PATH} />\n          </Switch>\n        </TabPanels>\n      </Tabs>\n    </Box>\n  );\n};\n","import React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Box, IconButton, IconButtonProps, Text } from '@chakra-ui/core';\n\nimport { ThemeType } from '../app/styles';\n\ntype Props = {\n  ariaLabel: IconButtonProps['aria-label'];\n  icon: keyof ThemeType['icons'];\n  isActive: boolean;\n  name: string;\n  to: string;\n};\n\nexport const TabBarButton: FC<Props> = ({ ariaLabel, icon, isActive, name, to }: Props) => (\n  <Link to={to}>\n    <Box alignItems='center' display='flex' flexDirection='column' paddingY={2}>\n      <IconButton\n        aria-label={ariaLabel}\n        as='span'\n        // @ts-ignore\n        icon={icon}\n        isActive={isActive}\n        size='md'\n        variant='link'\n        variantColor='gray'\n      />\n      <Text as='span' color={isActive ? 'black' : 'gray.600'} fontSize='sm'>\n        {name}\n      </Text>\n    </Box>\n  </Link>\n);\n","import React, { FC, lazy } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Redirect, Switch, useLocation } from 'react-router-dom';\nimport { Box } from '@chakra-ui/core';\n\nimport { AppRoute, UserState } from '../app/AppRoute';\nimport { FeedPage } from '../features/feed/FeedPage';\nimport { TabBarButton } from './TabBarButton';\n\nimport { selectIsLoggedIn } from '../features/user/userSlice';\n\nimport { AppRoutes } from '../app/router';\nimport { ThemeType } from '../app/styles';\n\nconst Submit = lazy(() =>\n  import('../features/submit/Submit').then(({ Submit }) => ({\n    default: Submit,\n  })),\n);\n\nconst Profile = lazy(() =>\n  import('../features/user/Profile').then(({ Profile }) => ({\n    default: Profile,\n  })),\n);\n\nconst Account = lazy(() =>\n  import('../features/user/Account').then(({ Account }) => ({\n    default: Account,\n  })),\n);\n\nconst Login = lazy(() =>\n  import('../features/user/Login').then(({ Login }) => ({\n    default: Login,\n  })),\n);\n\nconst ResetPassword = lazy(() =>\n  import('../features/user/ResetPassword').then(({ ResetPassword }) => ({\n    default: ResetPassword,\n  })),\n);\n\nconst Registration = lazy(() =>\n  import('../features/user/Registration').then(({ Registration }) => ({\n    default: Registration,\n  })),\n);\n\nconst Page404 = lazy(() =>\n  import('./Page404').then(({ Page404 }) => ({\n    default: Page404,\n  })),\n);\n\nconst buttons: {\n  [key: string]: {\n    ariaLabel: string;\n    icon: keyof ThemeType['icons'];\n    name: string;\n    to: AppRoutes;\n  };\n} = {\n  home: { ariaLabel: 'home button', icon: 'mdHome', name: 'Home', to: '/feed' },\n  submit: { ariaLabel: 'submit button', icon: 'mdAdd', name: 'Submit', to: '/submit' },\n  profile: { ariaLabel: 'profile button', icon: 'mdPerson', name: 'Profile', to: '/profile/me' },\n  account: { ariaLabel: 'account button', icon: 'mdPerson', name: 'Account', to: '/account' },\n};\n\nconst loggedInButtons = {\n  home: buttons.home,\n  submit: buttons.submit,\n  profile: buttons.profile,\n};\n\nconst loggedOutButtons = {\n  home: buttons.home,\n  submit: buttons.submit,\n  account: buttons.account,\n};\n\nconst getButtons = (loggedIn: boolean): typeof buttons[number][] =>\n  Object.values(loggedIn ? loggedInButtons : loggedOutButtons);\n\nexport const TabBar: FC<{}> = () => {\n  const location = useLocation();\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n\n  const buttons = getButtons(isLoggedIn);\n\n  return (\n    <>\n      <Switch>\n        <AppRoute lazyload={false} path='/feed'>\n          <FeedPage />\n        </AppRoute>\n        <AppRoute lazyload path='/submit'>\n          <Submit />\n        </AppRoute>\n        <AppRoute\n          lazyload\n          path='/profile/me'\n          redirect={{\n            path: '/account',\n            when: UserState.LoggedOut,\n          }}\n        >\n          <Profile />\n        </AppRoute>\n        <AppRoute\n          lazyload\n          path='/account/reset-password'\n          redirect={{\n            path: '/profile/me',\n            when: UserState.LoggedIn,\n          }}\n        >\n          <ResetPassword />\n        </AppRoute>\n        <AppRoute\n          lazyload\n          path='/account/login'\n          redirect={{\n            path: '/profile/me',\n            when: UserState.LoggedIn,\n          }}\n        >\n          <Login />\n        </AppRoute>\n        <AppRoute\n          lazyload\n          path='/account/register'\n          redirect={{\n            path: '/profile/me',\n            when: UserState.LoggedIn,\n          }}\n        >\n          <Registration />\n        </AppRoute>\n        <AppRoute\n          lazyload\n          path='/account'\n          redirect={{\n            path: '/profile/me',\n            when: UserState.LoggedIn,\n          }}\n        >\n          <Account />\n        </AppRoute>\n        <Redirect exact from='/profile' to={'/profile/me' as AppRoutes} />\n        <AppRoute lazyload path='/profile'>\n          <Profile />\n        </AppRoute>\n        <Redirect exact from='/' to={'/feed' as AppRoutes} />\n        <AppRoute lazyload path={null}>\n          <Page404 />\n        </AppRoute>\n      </Switch>\n\n      <nav>\n        <Box\n          backgroundColor='white'\n          borderTop='1px solid'\n          borderColor='gray.300'\n          bottom='0'\n          display='flex'\n          position='fixed'\n          width='100%'\n          zIndex={1}\n        >\n          {buttons.map((buttonProps) => (\n            <Box flex='1 1 0' key={buttonProps.name}>\n              <TabBarButton {...buttonProps} isActive={location.pathname.startsWith(buttonProps.to)} />\n            </Box>\n          ))}\n        </Box>\n      </nav>\n    </>\n  );\n};\n","import React, { FC, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { HashRouter, Router } from 'react-router-dom';\nimport { Box, CSSReset, ThemeProvider } from '@chakra-ui/core';\n\nimport { TabBar } from '../components/TabBar';\n\nimport { history, ROUTER_BASENAME } from './router';\nimport { theme } from './styles';\nimport { authTokenChecked } from '../features/user/userSlice';\n\nexport const App: FC = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    // const authTokenExists = !!localStorage.getItem(LOCAL_STORAGE_AUTH_TOKEN_KEY);\n    // TODO: Preliminary.\n    dispatch(authTokenChecked({ authTokenExists: true }));\n  }, [dispatch]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CSSReset />\n      <HashRouter basename={ROUTER_BASENAME}>\n        <Router history={history}>\n          <Box marginBottom={24}>\n            <TabBar />\n          </Box>\n        </Router>\n      </HashRouter>\n    </ThemeProvider>\n  );\n};\n","import { combineReducers, configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { persistReducer, persistStore, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport { feedReducer } from '../features/feed/feedSlice';\nimport { submitReducer } from '../features/submit/submitSlice';\nimport { userReducer } from '../features/user/userSlice';\n\nexport type AppDispatch = typeof store.dispatch;\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  // TODO: Preliminary\n  blacklist: ['feed', 'profile', 'submit', 'user'],\n};\n\nconst rootReducer = combineReducers({\n  feed: feedReducer,\n  submit: submitReducer,\n  user: userReducer,\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n});\n\nexport const persistor = persistStore(store);\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './app/App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport { register } from './serviceWorker';\n\nReactDOM.render(\n  <StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </StrictMode>,\n  document.getElementById('root'),\n);\n\nregister();\n","import { createAsyncThunk, createSelector, createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { fetch } from '../../utils/fetch';\n\nimport { AppRoutes, history } from '../../app/router';\nimport { RootState } from '../../app/store';\n\nconst SLICE_NAME = 'user';\nexport const LOCAL_STORAGE_AUTH_TOKEN_KEY = 'token';\n\ntype AsyncState = {\n  error: string | null;\n  loading: 'idle' | 'pending';\n};\n\nexport type Profile = {\n  cityName: string;\n  email: string;\n  firstName?: string;\n  lastName?: string;\n  postsCount: number;\n  rating: number;\n  username: string;\n  imageURL?: string;\n};\n\nexport type OtherProfile = {\n  cityName: string;\n  firstName?: string;\n  lastName?: string;\n  postsCount: number;\n  rating: number;\n  username: string;\n  imageURL?: string;\n};\n\ntype State = {\n  async: AsyncState;\n  isLoggedIn: boolean;\n  profile: Profile | null;\n  otherProfile: {\n    async: AsyncState;\n    profile: OtherProfile | null;\n  };\n};\n\ntype LoginBody = {\n  name: string;\n  password: string;\n};\n\ntype LoginSuccess = {\n  success: boolean;\n  token: string;\n};\n\ntype RegistrationBody = {\n  country: string;\n  email: string;\n  name: string;\n  password: string;\n};\n\ntype RegistrationSuccess = {\n  success: boolean;\n  token: string;\n};\n\ntype OpenedOtherProfileBody = {\n  username: string;\n};\n\ntype OpenedOtherProfileSuccess = OtherProfile;\n\nconst MOCKED_OWN_PROFILE: Profile = {\n  cityName: 'Richmond',\n  email: 'foo@bar.com',\n  firstName: 'Oliver',\n  lastName: 'Micke',\n  postsCount: 7,\n  rating: 79,\n  username: 'olivermicke',\n  imageURL: process.env.PUBLIC_URL + '/img/oliver-micke.jpg',\n};\n\nconst MOCKED_OTHER_PROFILES: { [key: string]: OtherProfile } = {\n  emily_rose28: {\n    cityName: 'Richmond',\n    rating: 84,\n    postsCount: 7,\n    username: 'emily_rose28',\n  },\n};\n\nexport const loggedIn = createAsyncThunk(`${SLICE_NAME}/loggedIn`, (body: LoginBody) =>\n  fetch<LoginSuccess>('/user/login', {\n    body: JSON.stringify(body),\n    method: 'POST',\n  }).then((data) => {\n    history.push('/feed' as AppRoutes);\n    localStorage.setItem(LOCAL_STORAGE_AUTH_TOKEN_KEY, data.token);\n    return data;\n  }),\n);\n\nexport const registered = createAsyncThunk(`${SLICE_NAME}/registered`, (body: RegistrationBody) =>\n  fetch<RegistrationSuccess>('/user', {\n    body: JSON.stringify(body),\n    method: 'POST',\n  }).then((data) => {\n    history.push('/feed' as AppRoutes);\n    localStorage.setItem(LOCAL_STORAGE_AUTH_TOKEN_KEY, data.token);\n    return data;\n  }),\n);\n\nexport const openedOtherProfile = createAsyncThunk(\n  `${SLICE_NAME}/openedOtherProfile`,\n  ({ username }: OpenedOtherProfileBody) => Promise.resolve(MOCKED_OTHER_PROFILES[username]),\n);\n\nexport const slice = createSlice({\n  name: SLICE_NAME,\n  initialState: {\n    async: {\n      error: null,\n      loading: 'idle',\n    },\n    isLoggedIn: true,\n    profile: MOCKED_OWN_PROFILE,\n    otherProfile: {\n      async: {\n        error: null,\n        loading: 'idle',\n      },\n      profile: null,\n    },\n  } as State,\n  reducers: {\n    authTokenChecked: (state, action: PayloadAction<{ authTokenExists: boolean }>): void => {\n      state.isLoggedIn = action.payload.authTokenExists;\n    },\n    loggedOut: (state): void => {\n      state.profile = null;\n      state.isLoggedIn = false;\n    },\n  },\n  extraReducers: {\n    [loggedIn.pending.type]: (state): void => {\n      if (state.async.loading === 'idle') {\n        state.async.loading = 'pending';\n      }\n    },\n    [loggedIn.fulfilled.type]: (state, _action: PayloadAction<LoginSuccess>): void => {\n      if (state.async.loading === 'pending') {\n        state.async.loading = 'idle';\n        state.isLoggedIn = true;\n        // TODO: Receive profile data from BE\n        state.profile = MOCKED_OWN_PROFILE;\n      }\n    },\n    [loggedIn.rejected.type]: (state, action: { error: Error }): void => {\n      if (state.async.loading === 'pending') {\n        state.async.loading = 'idle';\n        state.async.error = action.error.message;\n      }\n    },\n    [registered.pending.type]: (state): void => {\n      if (state.async.loading === 'idle') {\n        state.async.loading = 'pending';\n      }\n    },\n    [registered.fulfilled.type]: (state, _action: PayloadAction<RegistrationSuccess>): void => {\n      if (state.async.loading === 'pending') {\n        state.async.loading = 'idle';\n        state.isLoggedIn = true;\n        // TODO: Receive profile data from BE\n        state.profile = MOCKED_OWN_PROFILE;\n      }\n    },\n    [registered.rejected.type]: (state, action: { error: Error }): void => {\n      if (state.async.loading === 'pending') {\n        state.async.loading = 'idle';\n        state.async.error = action.error.message;\n      }\n    },\n    [openedOtherProfile.pending.type]: (state): void => {\n      state.otherProfile.async.error = null;\n      state.otherProfile.async.loading = 'pending';\n    },\n    [openedOtherProfile.fulfilled.type]: (state, action: PayloadAction<OpenedOtherProfileSuccess>): void => {\n      state.otherProfile.async.loading = 'idle';\n      state.otherProfile.profile = action.payload;\n    },\n    [openedOtherProfile.rejected.type]: (state, action: { error: Error }): void => {\n      state.otherProfile.async.loading = 'idle';\n      state.otherProfile.async.error = action.error.message;\n    },\n  },\n});\n\nexport const { authTokenChecked, loggedOut } = slice.actions;\n\nexport const selectAsync = (state: RootState): State['async'] =>\n  createSelector(\n    (state: RootState) => state.user.async,\n    (async) => async,\n  )(state);\n\nexport const selectIsLoggedIn = (state: RootState): State['isLoggedIn'] =>\n  createSelector(\n    (state: RootState) => state.user.isLoggedIn,\n    (isLoggedIn) => isLoggedIn,\n  )(state);\n\nexport const selectOtherProfile = (state: RootState): OtherProfile | null =>\n  createSelector(\n    (state: RootState) => state.user.otherProfile.profile,\n    (otherProfile) => otherProfile,\n  )(state);\n\nexport const selectOwnProfile = (state: RootState): Profile | null =>\n  createSelector(\n    (state: RootState) => state.user.profile,\n    (profile) => profile,\n  )(state);\n\nexport const selectOwnUsername = (state: RootState): string | null =>\n  createSelector(\n    (state: RootState) => state.user.profile?.username ?? null,\n    (username) => username,\n  )(state);\n\nexport const userReducer = slice.reducer;\n","import { createHashHistory } from 'history';\n\nexport const ROUTER_BASENAME = '/';\n\nexport const history = createHashHistory({ basename: ROUTER_BASENAME });\n\nexport type AppRoutes =\n  | '/'\n  | '/account'\n  | '/account/login'\n  | '/account/register'\n  | '/account/reset-password'\n  | '/feed'\n  | '/profile'\n  | '/profile/me'\n  | '/submit';\n","const DEFAULT_OPTIONS: Parameters<typeof window.fetch>[1] = {\n  credentials: 'include',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n};\n\nconst ENDPOINT_URL =\n  process.env.NODE_ENV === 'production' ? 'https://ec2-54-89-76-249.compute-1.amazonaws.com' : 'http://localhost:8080';\n\nexport function fetch<D>(path: string, options?: object): Promise<D> {\n  return window\n    .fetch(ENDPOINT_URL + path, {\n      ...DEFAULT_OPTIONS,\n      ...options,\n    })\n    .then((response: Response) => {\n      return response.json().then((json) => {\n        if (response.ok) {\n          return json;\n        }\n\n        throw json;\n      });\n    })\n    .catch((error) => {\n      throw new Error(error.errorMessage || 'An unknown error has occured.');\n    });\n}\n","import React from 'react';\nimport { MdAdd, MdHome, MdPerson } from 'react-icons/md';\nimport { IoMdEye, IoMdEyeOff } from 'react-icons/io';\nimport { BoxProps, DefaultTheme, theme as chakraTheme } from '@chakra-ui/core';\n\nexport const responsiveBoxProps: BoxProps = {\n  marginTop: 4,\n  marginX: 'auto',\n  width: [\n    '80%', // base\n    '90%', // 480px upwards\n    '90%', // 768px upwards\n    '80%', // 992px upwards\n    '70%',\n  ],\n};\n\nexport type ThemeType = DefaultTheme & {\n  icons: DefaultTheme['icons'];\n};\n\nconst VIEW_BOX = '0 0 16 16';\n\nexport const theme: ThemeType = {\n  ...chakraTheme,\n  icons: {\n    ...chakraTheme.icons,\n    ioMdEye: {\n      path: <IoMdEye />,\n      viewBox: VIEW_BOX,\n    },\n    ioMdEyeOff: {\n      path: <IoMdEyeOff />,\n      viewBox: VIEW_BOX,\n    },\n    mdAdd: {\n      path: <MdAdd />,\n      viewBox: VIEW_BOX,\n    },\n    mdHome: {\n      path: <MdHome />,\n      viewBox: VIEW_BOX,\n    },\n    mdPerson: {\n      path: <MdPerson />,\n      viewBox: VIEW_BOX,\n    },\n  },\n};\n","import { createAsyncThunk, createSelector, createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { fetch } from '../../utils/fetch';\n\nimport { AppRoutes, history } from '../../app/router';\nimport { RootState } from '../../app/store';\n\nconst SLICE_NAME = 'submit';\n\ntype AsyncState = {\n  error: string | null;\n  loading: 'idle' | 'pending';\n};\n\ntype State = {\n  async: AsyncState;\n};\n\ntype SubmitBody = {\n  image: string | null;\n  text: string;\n  title: string;\n};\n\ntype SubmitSuccess = {\n  success: boolean;\n};\n\nexport const submitted = createAsyncThunk(`${SLICE_NAME}/submitted`, (body: SubmitBody) =>\n  fetch<SubmitSuccess>('/TODO:Route', {\n    body: JSON.stringify(body),\n    method: 'POST',\n  }).then((data) => {\n    history.push('/feed' as AppRoutes);\n    return data;\n  }),\n);\n\nexport const slice = createSlice({\n  name: SLICE_NAME,\n  initialState: {\n    async: {\n      error: null,\n      loading: 'idle',\n    },\n  } as State,\n  reducers: {},\n  extraReducers: {\n    [submitted.pending.type]: (state): void => {\n      if (state.async.loading === 'idle') {\n        state.async.loading = 'pending';\n      }\n    },\n    [submitted.fulfilled.type]: (state, _action: PayloadAction<SubmitSuccess>): void => {\n      if (state.async.loading === 'pending') {\n        state.async.loading = 'idle';\n      }\n    },\n    [submitted.rejected.type]: (state, action: { error: Error }): void => {\n      if (state.async.loading === 'pending') {\n        state.async.loading = 'idle';\n        state.async.error = action.error.message;\n      }\n    },\n  },\n});\n\nexport const selectAsync = (state: RootState): State['async'] =>\n  createSelector(\n    (state: RootState) => state.submit.async,\n    (async) => async,\n  )(state);\n\nexport const submitReducer = slice.reducer;\n"],"sourceRoot":""}