{"version":3,"sources":["utils/fetch.ts","features/user/userSlice.ts","app/router.ts","components/DelayedFallback.tsx","features/feed/Feed.tsx","features/feed/FeedHeader.tsx","features/feed/FeedPage.tsx","components/TabBarButton.tsx","components/TabBar.tsx","app/App.tsx","app/store.ts","serviceWorker.ts","index.tsx"],"names":["DEFAULT_OPTIONS","credentials","headers","fetch","path","options","window","then","response","json","ok","catch","error","Error","errorMessage","LOCAL_STORAGE_AUTH_TOKEN_KEY","loggedIn","createAsyncThunk","body","JSON","stringify","method","data","history","push","localStorage","setItem","token","registered","slice","createSlice","name","initialState","async","loading","isLoggedIn","reducers","authTokenChecked","state","action","payload","authTokenExists","extraReducers","pending","type","fulfilled","_action","rejected","message","actions","selectAsync","createSelector","user","selectIsLoggedIn","userReducer","reducer","ROUTER_BASENAME","createHashHistory","basename","DelayedFallback","useState","show","setShow","useEffect","timeout","setTimeout","clearTimeout","Spinner","label","Feed","Box","paddingX","Location","Text","as","fontWeight","textDecoration","FeedHeader","_props","color","fontSize","marginTop","InputGroup","Icon","Input","placeholder","tabs","id","to","FeedPage","pathname","useLocation","Tabs","map","aria-controls","aria-selected","Link","key","tabIndex","exact","from","TabBarButton","ariaLabel","icon","isActive","alignItems","display","flexDirection","paddingY","IconButton","aria-label","size","variant","variantColor","Submit","lazy","default","Profile","Login","ResetPassword","Registration","RESET_PASSWORD_PATH","buttons","home","submit","profile","login","register","loggedInButtons","loggedOutButtons","TabBar","location","useSelector","Object","values","fallback","border","borderColor","bottom","position","width","buttonProps","flex","startsWith","App","dispatch","useDispatch","getItem","ThemeProvider","theme","CSSReset","rootReducer","combineReducers","store","configureStore","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.64e41e40.chunk.js","sourcesContent":["const DEFAULT_OPTIONS: Parameters<typeof window.fetch>[1] = {\n  credentials: 'include',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n};\n\nconst ENDPOINT_URL =\n  process.env.NODE_ENV === 'production' ? 'https://ec2-54-89-76-249.compute-1.amazonaws.com' : 'http://localhost:8080';\n\nexport function fetch<D>(path: string, options?: object): Promise<D> {\n  return window\n    .fetch(ENDPOINT_URL + path, {\n      ...DEFAULT_OPTIONS,\n      ...options,\n    })\n    .then((response: Response) => {\n      return response.json().then((json) => {\n        if (response.ok) {\n          return json;\n        }\n\n        throw json;\n      });\n    })\n    .catch((error) => {\n      throw new Error(error.errorMessage || 'An unknown error has occured.');\n    });\n}\n","import { createAsyncThunk, createSelector, createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { history } from '../../app/router';\n\nimport { fetch } from '../../utils/fetch';\n\nimport { RootState } from '../../app/store';\n\nconst SLICE_NAME = 'user';\nexport const LOCAL_STORAGE_AUTH_TOKEN_KEY = 'token';\n\ntype AsyncState = {\n  error: string | null;\n  loading: 'idle' | 'pending';\n};\n\ntype State = {\n  async: AsyncState;\n  isLoggedIn: boolean;\n};\n\ntype LoginBody = {\n  name: string;\n  password: string;\n};\n\ntype LoginSuccess = {\n  success: boolean;\n  token: string;\n};\n\ntype RegistrationBody = {\n  country: string;\n  email: string;\n  name: string;\n  password: string;\n};\n\ntype RegistrationSuccess = {\n  success: boolean;\n};\n\nexport const loggedIn = createAsyncThunk(`${SLICE_NAME}/loggedIn`, (body: LoginBody) =>\n  fetch<LoginSuccess>('/user/login', {\n    body: JSON.stringify(body),\n    method: 'POST',\n  }).then((data) => {\n    history.push('/');\n    localStorage.setItem(LOCAL_STORAGE_AUTH_TOKEN_KEY, data.token);\n    return data;\n  }),\n);\n\nexport const registered = createAsyncThunk(`${SLICE_NAME}/registered`, (body: RegistrationBody) =>\n  fetch<RegistrationSuccess>('/user', {\n    body: JSON.stringify(body),\n    method: 'POST',\n  }).then((data) => {\n    history.push('/');\n    return data;\n  }),\n);\n\nexport const slice = createSlice({\n  name: SLICE_NAME,\n  initialState: {\n    async: {\n      error: null,\n      loading: 'idle',\n    },\n    isLoggedIn: false,\n  } as State,\n  reducers: {\n    authTokenChecked: (state, action: PayloadAction<{ authTokenExists: boolean }>): void => {\n      state.isLoggedIn = action.payload.authTokenExists;\n    },\n  },\n  extraReducers: {\n    [loggedIn.pending.type]: (state): void => {\n      if (state.async.loading === 'idle') {\n        state.async.loading = 'pending';\n      }\n    },\n    [loggedIn.fulfilled.type]: (state, _action: PayloadAction<LoginSuccess>): void => {\n      if (state.async.loading === 'pending') {\n        state.async.loading = 'idle';\n        state.isLoggedIn = true;\n      }\n    },\n    [loggedIn.rejected.type]: (state, action: { error: Error }): void => {\n      if (state.async.loading === 'pending') {\n        state.async.loading = 'idle';\n        state.async.error = action.error.message;\n      }\n    },\n    [registered.pending.type]: (state): void => {\n      if (state.async.loading === 'idle') {\n        state.async.loading = 'pending';\n      }\n    },\n    [registered.fulfilled.type]: (state, _action: PayloadAction<RegistrationSuccess>): void => {\n      if (state.async.loading === 'pending') {\n        state.async.loading = 'idle';\n        state.isLoggedIn = true;\n      }\n    },\n    [registered.rejected.type]: (state, action: { error: Error }): void => {\n      if (state.async.loading === 'pending') {\n        state.async.loading = 'idle';\n        state.async.error = action.error.message;\n      }\n    },\n    // TODO: Logout\n  },\n});\n\nexport const { authTokenChecked } = slice.actions;\n\nexport const selectAsync = (state: RootState): State['async'] =>\n  createSelector(\n    (state: RootState) => state.user.async,\n    (async) => async,\n  )(state);\n\nexport const selectIsLoggedIn = (state: RootState): State['isLoggedIn'] =>\n  createSelector(\n    (state: RootState) => state.user.isLoggedIn,\n    (isLoggedIn) => isLoggedIn,\n  )(state);\n\nexport const userReducer = slice.reducer;\n","import { createHashHistory } from 'history';\n\nexport const ROUTER_BASENAME = '/';\n\nexport const history = createHashHistory({ basename: ROUTER_BASENAME });\n","import React, { FC, useEffect, useState } from 'react';\nimport { Spinner } from '@chakra-ui/core';\n\nexport const DelayedFallback: FC = () => {\n  const [show, setShow] = useState(false);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => setShow(true), 500);\n    return (): void => {\n      clearTimeout(timeout);\n    };\n  }, []);\n\n  return <>{show && <Spinner label='Loading...' />}</>;\n};\n","import React, { FC } from 'react';\nimport { Box } from '@chakra-ui/core';\n\ntype Props = {\n  type: string;\n};\n\nexport const Feed: FC<Props> = ({ type }: Props) => <Box paddingX={4}>{type} feed</Box>;\n","import React, { FC } from 'react';\nimport { Box, Icon, Input, InputGroup, InputLeftElement, Text } from '@chakra-ui/core';\n\ntype Props = {};\n\nconst INPUT_PLACEHOLDER = 'Use keywords to search for information';\n\nconst NAME_PLACEHOLDER = 'Timothy';\nconst LOCATION_PLACEHOLDER = 'Richmond';\n\nconst Location: FC<{}> = () => (\n  <Text as='a' fontWeight='semibold' textDecoration='underline'>\n    {LOCATION_PLACEHOLDER}\n  </Text>\n);\n\nexport const FeedHeader: FC<Props> = (_props: Props) => (\n  <Box paddingX={4}>\n    <Text color='gray.600' fontSize='lg'>\n      Good morning, {NAME_PLACEHOLDER}\n    </Text>\n    <Text color='gray.600' fontSize='lg' marginTop={1}>\n      Here are the latest for <Location />\n    </Text>\n    <InputGroup marginTop={4}>\n      <InputLeftElement>\n        <Icon color='gray.400' name='search' />\n      </InputLeftElement>\n      <Input placeholder={INPUT_PLACEHOLDER} type='text' />\n    </InputGroup>\n  </Box>\n);\n","import React, { FC } from 'react';\nimport { Link, Redirect, Route, Switch, useLocation } from 'react-router-dom';\nimport { Tab, TabList, TabPanels, Tabs } from '@chakra-ui/core';\n\nimport { Feed } from './Feed';\nimport { FeedHeader } from './FeedHeader';\n\nconst ARIA_TABS = 'tabs';\nconst ARIA_NEWS_TAB = 'tabs-news-tab';\nconst ARIA_MEDICAL_SUPPLY_TAB = 'tabs-medical-supply-tab';\nconst ARIA_GROCERY_TAB = 'tabs-grocery-tab';\nconst ARIA_ADVICE_TAB = 'tabs-advice-tab';\n\nconst NEWS_PATH = '/feed/news';\nconst MEDICAL_SUPPLY_PATH = '/feed/medical-supply';\nconst GROCERY_PATH = '/feed/grocery';\nconst ADVICE_PATH = '/feed/advice';\n\nconst tabs: {\n  id: string;\n  name: string;\n  to: string;\n}[] = [\n  { id: ARIA_NEWS_TAB, name: 'News', to: NEWS_PATH },\n  { id: ARIA_MEDICAL_SUPPLY_TAB, name: 'Medical Supply', to: MEDICAL_SUPPLY_PATH },\n  { id: ARIA_GROCERY_TAB, name: 'Grocery', to: GROCERY_PATH },\n  { id: ARIA_ADVICE_TAB, name: 'Advice', to: ADVICE_PATH },\n];\n\nexport const FeedPage: FC = () => {\n  const { pathname } = useLocation();\n\n  return (\n    <>\n      <FeedHeader />\n      <Tabs marginTop={6}>\n        <TabList id={ARIA_TABS}>\n          {tabs.map(({ id, name, to }) => (\n            <Tab\n              aria-controls={ARIA_TABS}\n              aria-selected={pathname === to}\n              as={Link}\n              id={id}\n              key={name}\n              tabIndex={0}\n              to={to}\n            >\n              {name}\n            </Tab>\n          ))}\n        </TabList>\n\n        <TabPanels marginTop={8}>\n          <Switch>\n            {tabs.map(({ name, to }) => (\n              <Route exact key={name} path={to}>\n                <Feed type={name} />\n              </Route>\n            ))}\n            <Redirect from='/' to={NEWS_PATH} />\n          </Switch>\n        </TabPanels>\n      </Tabs>\n    </>\n  );\n};\n","import React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Box, IconButton, IconButtonProps, Text } from '@chakra-ui/core';\n\ntype Props = {\n  ariaLabel: IconButtonProps['aria-label'];\n  icon: IconButtonProps['icon'];\n  isActive: boolean;\n  name: string;\n  to: string;\n};\n\nexport const TabBarButton: FC<Props> = ({ ariaLabel, icon, isActive, name, to }: Props) => (\n  <Link to={to}>\n    <Box alignItems='center' display='flex' flexDirection='column' paddingY={2}>\n      <IconButton\n        aria-label={ariaLabel}\n        as='span'\n        icon={icon}\n        isActive={isActive}\n        size='md'\n        variant='link'\n        variantColor='gray'\n      />\n      <Text as='span' color={isActive ? 'black' : 'gray.600'} fontSize='sm'>\n        {name}\n      </Text>\n    </Box>\n  </Link>\n);\n","import React, { FC, lazy, Suspense } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Redirect, Route, Switch, useLocation } from 'react-router-dom';\nimport { Box, IconButtonProps } from '@chakra-ui/core';\n\nimport { DelayedFallback } from './DelayedFallback';\nimport { FeedPage } from '../features/feed/FeedPage';\nimport { TabBarButton } from './TabBarButton';\n\nimport { selectIsLoggedIn } from '../features/user/userSlice';\n\nconst Submit = lazy(() =>\n  import('../features/submit/Submit').then(({ Submit }) => ({\n    default: Submit,\n  })),\n);\n\nconst Profile = lazy(() =>\n  import('../features/user/Profile').then(({ Profile }) => ({\n    default: Profile,\n  })),\n);\n\nconst Login = lazy(() =>\n  import('../features/user/Login').then(({ Login }) => ({\n    default: Login,\n  })),\n);\n\nconst ResetPassword = lazy(() =>\n  import('../features/user/ResetPassword').then(({ ResetPassword }) => ({\n    default: ResetPassword,\n  })),\n);\n\nconst Registration = lazy(() =>\n  import('../features/user/Registration').then(({ Registration }) => ({\n    default: Registration,\n  })),\n);\n\nconst FEED_PATH = '/feed';\nconst SUBMIT_PATH = '/submit';\nconst PROFILE_PATH = '/profile';\nconst LOGIN_PATH = '/login';\nexport const RESET_PASSWORD_PATH = '/login/reset-password';\nconst REGISRATION_PATH = '/register';\n\nconst buttons: {\n  [key: string]: {\n    ariaLabel: string;\n    icon: IconButtonProps['icon'];\n    name: string;\n    to: string;\n  };\n} = {\n  home: { ariaLabel: 'home button', icon: 'view', name: 'Home', to: FEED_PATH },\n  submit: { ariaLabel: 'submit button', icon: 'plus-square', name: 'Submit', to: SUBMIT_PATH },\n  profile: { ariaLabel: 'profile button', icon: 'settings', name: 'Profile', to: PROFILE_PATH },\n  login: { ariaLabel: 'login button', icon: 'settings', name: 'Login', to: LOGIN_PATH },\n  register: { ariaLabel: 'registration button', icon: 'settings', name: 'Register', to: REGISRATION_PATH },\n};\n\nconst loggedInButtons = {\n  home: buttons.home,\n  submit: buttons.submit,\n  profile: buttons.profile,\n};\n\nconst loggedOutButtons = {\n  home: buttons.home,\n  submit: buttons.submit,\n  login: buttons.login,\n  register: buttons.register,\n};\n\nconst getButtons = (loggedIn: boolean): typeof buttons[number][] =>\n  Object.values(loggedIn ? loggedInButtons : loggedOutButtons);\n\nexport const TabBar: FC<{}> = () => {\n  const location = useLocation();\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n\n  const buttons = getButtons(isLoggedIn);\n\n  return (\n    <>\n      <Switch>\n        <Route path={FEED_PATH}>\n          <FeedPage />\n        </Route>\n        <Route path={SUBMIT_PATH}>\n          <Suspense fallback={<DelayedFallback />}>\n            <Submit />\n          </Suspense>\n        </Route>\n        <Route path={PROFILE_PATH}>\n          <Suspense fallback={<DelayedFallback />}>\n            <Profile />\n          </Suspense>\n        </Route>\n        <Route path={RESET_PASSWORD_PATH}>\n          <Suspense fallback={<DelayedFallback />}>\n            <ResetPassword />\n          </Suspense>\n        </Route>\n        <Route path={LOGIN_PATH}>\n          <Suspense fallback={<DelayedFallback />}>\n            <Login />\n          </Suspense>\n        </Route>\n        <Route path={REGISRATION_PATH}>\n          <Suspense fallback={<DelayedFallback />}>\n            <Registration />\n          </Suspense>\n        </Route>\n        <Redirect from='/' to={FEED_PATH} />\n      </Switch>\n\n      <nav>\n        <Box border='1px solid' borderColor='gray.300' bottom='0' display='flex' position='fixed' width='100%'>\n          {buttons.map((buttonProps) => (\n            <Box flex='1 1 0' key={buttonProps.name}>\n              <TabBarButton {...buttonProps} isActive={location.pathname.startsWith(buttonProps.to)} />\n            </Box>\n          ))}\n        </Box>\n      </nav>\n    </>\n  );\n};\n","import React, { FC, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport { Box, CSSReset, theme, ThemeProvider } from '@chakra-ui/core';\n\nimport { TabBar } from '../components/TabBar';\n\nimport { ROUTER_BASENAME } from './router';\nimport { authTokenChecked, LOCAL_STORAGE_AUTH_TOKEN_KEY } from '../features/user/userSlice';\n\nexport const App: FC = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const authTokenExists = !!localStorage.getItem(LOCAL_STORAGE_AUTH_TOKEN_KEY);\n    dispatch(authTokenChecked({ authTokenExists }));\n  }, [dispatch]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CSSReset />\n      <HashRouter basename={ROUTER_BASENAME}>\n        <Box marginTop={4}>\n          <TabBar />\n        </Box>\n      </HashRouter>\n    </ThemeProvider>\n  );\n};\n","import { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport { userReducer } from '../features/user/userSlice';\n\nexport type AppDispatch = typeof store.dispatch;\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nconst rootReducer = combineReducers({\n  user: userReducer,\n});\n\nexport const store = configureStore({\n  reducer: rootReducer,\n});\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './app/App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport { register } from './serviceWorker';\n\nReactDOM.render(\n  <StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </StrictMode>,\n  document.getElementById('root'),\n);\n\nregister();\n"],"sourceRoot":""}