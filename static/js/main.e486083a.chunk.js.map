{"version":3,"sources":["utils/fetch.ts","features/user/userSlice.ts","app/router.ts","components/DelayedFallback.tsx","app/AppRoute.tsx","features/feed/Feed.tsx","features/feed/FeedHeader.tsx","features/feed/FeedPage.tsx","components/TabBarButton.tsx","components/TabBar.tsx","app/App.tsx","app/store.ts","serviceWorker.ts","index.tsx"],"names":["DEFAULT_OPTIONS","credentials","headers","fetch","path","options","window","then","response","json","ok","catch","error","Error","errorMessage","LOCAL_STORAGE_AUTH_TOKEN_KEY","loggedIn","createAsyncThunk","body","JSON","stringify","method","data","history","push","localStorage","setItem","token","registered","slice","createSlice","name","initialState","async","loading","isLoggedIn","reducers","authTokenChecked","state","action","payload","authTokenExists","loggedOut","extraReducers","pending","type","fulfilled","_action","rejected","message","actions","selectAsync","createSelector","user","selectIsLoggedIn","userReducer","reducer","ROUTER_BASENAME","createHashHistory","basename","DelayedFallback","useState","show","setShow","useEffect","timeout","setTimeout","clearTimeout","Spinner","label","AppRoute","children","lazyload","redirect","useSelector","when","to","pathname","Component","fallback","Feed","Box","paddingX","Location","Text","as","fontWeight","textDecoration","FeedHeader","_props","color","fontSize","marginTop","InputGroup","Icon","Input","placeholder","tabs","id","tabsProps","TabsWrapper","display","Tabs","size","FeedPage","useLocation","map","aria-controls","aria-selected","Link","key","tabIndex","exact","from","TabBarButton","ariaLabel","icon","isActive","alignItems","flexDirection","paddingY","IconButton","aria-label","variant","variantColor","Submit","lazy","default","Profile","Account","Login","ResetPassword","Registration","Page404","buttons","home","submit","profile","account","loggedInButtons","loggedOutButtons","TabBar","location","Object","values","borderTop","borderColor","bottom","position","width","buttonProps","flex","startsWith","App","dispatch","useDispatch","getItem","ThemeProvider","theme","CSSReset","rootReducer","combineReducers","store","configureStore","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e486083a.chunk.js","sourcesContent":["const DEFAULT_OPTIONS: Parameters<typeof window.fetch>[1] = {\n  credentials: 'include',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n};\n\nconst ENDPOINT_URL =\n  process.env.NODE_ENV === 'production' ? 'https://ec2-54-89-76-249.compute-1.amazonaws.com' : 'http://localhost:8080';\n\nexport function fetch<D>(path: string, options?: object): Promise<D> {\n  return window\n    .fetch(ENDPOINT_URL + path, {\n      ...DEFAULT_OPTIONS,\n      ...options,\n    })\n    .then((response: Response) => {\n      return response.json().then((json) => {\n        if (response.ok) {\n          return json;\n        }\n\n        throw json;\n      });\n    })\n    .catch((error) => {\n      throw new Error(error.errorMessage || 'An unknown error has occured.');\n    });\n}\n","import { createAsyncThunk, createSelector, createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { history } from '../../app/router';\n\nimport { fetch } from '../../utils/fetch';\n\nimport { RootState } from '../../app/store';\n\nconst SLICE_NAME = 'user';\nexport const LOCAL_STORAGE_AUTH_TOKEN_KEY = 'token';\n\ntype AsyncState = {\n  error: string | null;\n  loading: 'idle' | 'pending';\n};\n\ntype State = {\n  async: AsyncState;\n  isLoggedIn: boolean;\n};\n\ntype LoginBody = {\n  name: string;\n  password: string;\n};\n\ntype LoginSuccess = {\n  success: boolean;\n  token: string;\n};\n\ntype RegistrationBody = {\n  country: string;\n  email: string;\n  name: string;\n  password: string;\n};\n\ntype RegistrationSuccess = {\n  success: boolean;\n};\n\nexport const loggedIn = createAsyncThunk(`${SLICE_NAME}/loggedIn`, (body: LoginBody) =>\n  fetch<LoginSuccess>('/user/login', {\n    body: JSON.stringify(body),\n    method: 'POST',\n  }).then((data) => {\n    history.push('/');\n    localStorage.setItem(LOCAL_STORAGE_AUTH_TOKEN_KEY, data.token);\n    return data;\n  }),\n);\n\nexport const registered = createAsyncThunk(`${SLICE_NAME}/registered`, (body: RegistrationBody) =>\n  fetch<RegistrationSuccess>('/user', {\n    body: JSON.stringify(body),\n    method: 'POST',\n  }).then((data) => {\n    history.push('/');\n    return data;\n  }),\n);\n\nexport const slice = createSlice({\n  name: SLICE_NAME,\n  initialState: {\n    async: {\n      error: null,\n      loading: 'idle',\n    },\n    isLoggedIn: false,\n  } as State,\n  reducers: {\n    authTokenChecked: (state, action: PayloadAction<{ authTokenExists: boolean }>): void => {\n      state.isLoggedIn = action.payload.authTokenExists;\n    },\n    loggedOut: (state): void => {\n      state.isLoggedIn = false;\n    },\n  },\n  extraReducers: {\n    [loggedIn.pending.type]: (state): void => {\n      if (state.async.loading === 'idle') {\n        state.async.loading = 'pending';\n      }\n    },\n    [loggedIn.fulfilled.type]: (state, _action: PayloadAction<LoginSuccess>): void => {\n      if (state.async.loading === 'pending') {\n        state.async.loading = 'idle';\n        state.isLoggedIn = true;\n      }\n    },\n    [loggedIn.rejected.type]: (state, action: { error: Error }): void => {\n      if (state.async.loading === 'pending') {\n        state.async.loading = 'idle';\n        state.async.error = action.error.message;\n      }\n    },\n    [registered.pending.type]: (state): void => {\n      if (state.async.loading === 'idle') {\n        state.async.loading = 'pending';\n      }\n    },\n    [registered.fulfilled.type]: (state, _action: PayloadAction<RegistrationSuccess>): void => {\n      if (state.async.loading === 'pending') {\n        state.async.loading = 'idle';\n        state.isLoggedIn = true;\n      }\n    },\n    [registered.rejected.type]: (state, action: { error: Error }): void => {\n      if (state.async.loading === 'pending') {\n        state.async.loading = 'idle';\n        state.async.error = action.error.message;\n      }\n    },\n  },\n});\n\nexport const { authTokenChecked, loggedOut } = slice.actions;\n\nexport const selectAsync = (state: RootState): State['async'] =>\n  createSelector(\n    (state: RootState) => state.user.async,\n    (async) => async,\n  )(state);\n\nexport const selectIsLoggedIn = (state: RootState): State['isLoggedIn'] =>\n  createSelector(\n    (state: RootState) => state.user.isLoggedIn,\n    (isLoggedIn) => isLoggedIn,\n  )(state);\n\nexport const userReducer = slice.reducer;\n","import { createHashHistory } from 'history';\n\nexport const ROUTER_BASENAME = '/';\n\nexport const history = createHashHistory({ basename: ROUTER_BASENAME });\n\nexport type AppRoutes =\n  | '/'\n  | '/account'\n  | '/account/login'\n  | '/account/register'\n  | '/account/reset-password'\n  | '/feed'\n  | '/profile'\n  | '/submit';\n","import React, { FC, useEffect, useState } from 'react';\nimport { Spinner } from '@chakra-ui/core';\n\nexport const DelayedFallback: FC = () => {\n  const [show, setShow] = useState(false);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => setShow(true), 500);\n    return (): void => {\n      clearTimeout(timeout);\n    };\n  }, []);\n\n  return <>{show && <Spinner label='Loading...' />}</>;\n};\n","import React, { FC, ReactElement, Suspense } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Redirect, Route } from 'react-router-dom';\n\nimport { DelayedFallback } from '../components/DelayedFallback';\n\nimport { selectIsLoggedIn } from '../features/user/userSlice';\n\nimport { AppRoutes } from './router';\n\ntype Props = {\n  children: ReactElement;\n  lazyload: boolean;\n  path?: AppRoutes;\n  redirect?: {\n    path: AppRoutes;\n    when: 'logged-in' | 'logged-out';\n  };\n};\n\nexport const AppRoute: FC<Props> = ({ children, lazyload, path, redirect }: Props) => {\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const shouldRedirect =\n    (redirect?.when === 'logged-in' && isLoggedIn) || (redirect?.when === 'logged-out' && !isLoggedIn);\n  if (shouldRedirect) {\n    return <Redirect to={{ pathname: redirect?.path }} />;\n  }\n\n  const Component = <Route path={path}>{children}</Route>;\n  return lazyload ? <Suspense fallback={<DelayedFallback />}>{Component}</Suspense> : Component;\n};\n","import React, { FC } from 'react';\nimport { Box } from '@chakra-ui/core';\n\ntype Props = {\n  type: string;\n};\n\nexport const Feed: FC<Props> = ({ type }: Props) => <Box paddingX={4}>{type} feed</Box>;\n","import React, { FC } from 'react';\nimport { Box, Icon, Input, InputGroup, InputLeftElement, Text } from '@chakra-ui/core';\n\ntype Props = {};\n\nconst INPUT_PLACEHOLDER = 'Use keywords to search for information';\n\nconst NAME_PLACEHOLDER = 'Timothy';\nconst LOCATION_PLACEHOLDER = 'Richmond';\n\nconst Location: FC<{}> = () => (\n  <Text as='a' fontWeight='semibold' textDecoration='underline'>\n    {LOCATION_PLACEHOLDER}\n  </Text>\n);\n\nexport const FeedHeader: FC<Props> = (_props: Props) => (\n  <Box paddingX={4}>\n    {/* TODO: Logged out */}\n    <Text color='gray.600' fontSize='lg'>\n      Good morning, {NAME_PLACEHOLDER}\n    </Text>\n    <Text color='gray.600' fontSize='lg' marginTop={1}>\n      Here are the latest for <Location />\n    </Text>\n    <InputGroup marginTop={4}>\n      <InputLeftElement>\n        <Icon color='gray.400' name='search' />\n      </InputLeftElement>\n      <Input placeholder={INPUT_PLACEHOLDER} type='text' />\n    </InputGroup>\n  </Box>\n);\n","import React, { FC } from 'react';\nimport { Link, Redirect, Route, Switch, useLocation } from 'react-router-dom';\nimport { Box, Tab, TabList, TabPanels, Tabs } from '@chakra-ui/core';\n\nimport { Feed } from './Feed';\nimport { FeedHeader } from './FeedHeader';\n\nconst ARIA_TABS = 'tabs';\nconst ARIA_NEWS_TAB = 'tabs-news-tab';\nconst ARIA_MEDICAL_SUPPLY_TAB = 'tabs-medical-supply-tab';\nconst ARIA_GROCERY_TAB = 'tabs-grocery-tab';\nconst ARIA_ADVICE_TAB = 'tabs-advice-tab';\n\nconst NEWS_PATH = '/feed/news';\nconst MEDICAL_SUPPLY_PATH = '/feed/medical-supply';\nconst GROCERY_PATH = '/feed/grocery';\nconst ADVICE_PATH = '/feed/advice';\n\nconst tabs: {\n  id: string;\n  name: string;\n  to: string;\n}[] = [\n  { id: ARIA_NEWS_TAB, name: 'News', to: NEWS_PATH },\n  { id: ARIA_MEDICAL_SUPPLY_TAB, name: 'Medical Supply', to: MEDICAL_SUPPLY_PATH },\n  { id: ARIA_GROCERY_TAB, name: 'Grocery', to: GROCERY_PATH },\n  { id: ARIA_ADVICE_TAB, name: 'Advice', to: ADVICE_PATH },\n];\n\nconst tabsProps = {\n  marginTop: 6,\n};\n\ntype TabsWrapperProps = {\n  children: React.ReactNode;\n};\n\n// Workaround for showing smaller text on mobile.\nconst TabsWrapper: FC<TabsWrapperProps> = ({ children }: TabsWrapperProps) => (\n  <>\n    <Box display={['block', 'none']}>\n      <Tabs {...tabsProps} size='sm'>\n        {children}\n      </Tabs>\n    </Box>\n    <Box display={['none', 'block']}>\n      <Tabs {...tabsProps} size='md'>\n        {children}\n      </Tabs>\n    </Box>\n  </>\n);\n\nexport const FeedPage: FC = () => {\n  const { pathname } = useLocation();\n\n  return (\n    <>\n      <FeedHeader />\n      <TabsWrapper>\n        <TabList id={ARIA_TABS}>\n          {tabs.map(({ id, name, to }) => (\n            <Tab\n              aria-controls={ARIA_TABS}\n              aria-selected={pathname === to}\n              as={Link}\n              id={id}\n              key={name}\n              tabIndex={0}\n              to={to}\n            >\n              {name}\n            </Tab>\n          ))}\n        </TabList>\n\n        <TabPanels marginTop={8}>\n          <Switch>\n            {tabs.map(({ name, to }) => (\n              <Route exact key={name} path={to}>\n                <Feed type={name} />\n              </Route>\n            ))}\n            <Redirect from='/' to={NEWS_PATH} />\n          </Switch>\n        </TabPanels>\n      </TabsWrapper>\n    </>\n  );\n};\n","import React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Box, IconButton, IconButtonProps, Text } from '@chakra-ui/core';\n\ntype Props = {\n  ariaLabel: IconButtonProps['aria-label'];\n  icon: IconButtonProps['icon'];\n  isActive: boolean;\n  name: string;\n  to: string;\n};\n\nexport const TabBarButton: FC<Props> = ({ ariaLabel, icon, isActive, name, to }: Props) => (\n  <Link to={to}>\n    <Box alignItems='center' display='flex' flexDirection='column' paddingY={2}>\n      <IconButton\n        aria-label={ariaLabel}\n        as='span'\n        icon={icon}\n        isActive={isActive}\n        size='md'\n        variant='link'\n        variantColor='gray'\n      />\n      <Text as='span' color={isActive ? 'black' : 'gray.600'} fontSize='sm'>\n        {name}\n      </Text>\n    </Box>\n  </Link>\n);\n","import React, { FC, lazy } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Redirect, Switch, useLocation } from 'react-router-dom';\nimport { Box, IconButtonProps } from '@chakra-ui/core';\n\nimport { AppRoute } from '../app/AppRoute';\nimport { FeedPage } from '../features/feed/FeedPage';\nimport { TabBarButton } from './TabBarButton';\n\nimport { selectIsLoggedIn } from '../features/user/userSlice';\n\nimport { AppRoutes } from '../app/router';\n\nconst FEED_PATH: AppRoutes = '/feed';\n\nconst Submit = lazy(() =>\n  import('../features/submit/Submit').then(({ Submit }) => ({\n    default: Submit,\n  })),\n);\n\nconst Profile = lazy(() =>\n  import('../features/user/Profile').then(({ Profile }) => ({\n    default: Profile,\n  })),\n);\n\nconst Account = lazy(() =>\n  import('../features/user/Account').then(({ Account }) => ({\n    default: Account,\n  })),\n);\n\nconst Login = lazy(() =>\n  import('../features/user/Login').then(({ Login }) => ({\n    default: Login,\n  })),\n);\n\nconst ResetPassword = lazy(() =>\n  import('../features/user/ResetPassword').then(({ ResetPassword }) => ({\n    default: ResetPassword,\n  })),\n);\n\nconst Registration = lazy(() =>\n  import('../features/user/Registration').then(({ Registration }) => ({\n    default: Registration,\n  })),\n);\n\nconst Page404 = lazy(() =>\n  import('./Page404').then(({ Page404 }) => ({\n    default: Page404,\n  })),\n);\n\nconst buttons: {\n  [key: string]: {\n    ariaLabel: string;\n    icon: IconButtonProps['icon'];\n    name: string;\n    to: AppRoutes;\n  };\n} = {\n  home: { ariaLabel: 'home button', icon: 'view', name: 'Home', to: '/feed' },\n  submit: { ariaLabel: 'submit button', icon: 'plus-square', name: 'Submit', to: '/submit' },\n  profile: { ariaLabel: 'profile button', icon: 'settings', name: 'Profile', to: '/profile' },\n  account: { ariaLabel: 'account button', icon: 'settings', name: 'Account', to: '/account' },\n};\n\nconst loggedInButtons = {\n  home: buttons.home,\n  submit: buttons.submit,\n  profile: buttons.profile,\n};\n\nconst loggedOutButtons = {\n  home: buttons.home,\n  submit: buttons.submit,\n  account: buttons.account,\n};\n\nconst getButtons = (loggedIn: boolean): typeof buttons[number][] =>\n  Object.values(loggedIn ? loggedInButtons : loggedOutButtons);\n\nexport const TabBar: FC<{}> = () => {\n  const location = useLocation();\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n\n  const buttons = getButtons(isLoggedIn);\n\n  return (\n    <>\n      <Switch>\n        <AppRoute lazyload={false} path='/feed'>\n          <FeedPage />\n        </AppRoute>\n        <AppRoute lazyload path='/submit'>\n          <Submit />\n        </AppRoute>\n        <AppRoute\n          lazyload\n          path='/profile'\n          redirect={{\n            path: '/account',\n            when: 'logged-out',\n          }}\n        >\n          <Profile />\n        </AppRoute>\n        <AppRoute\n          lazyload\n          path='/account/reset-password'\n          redirect={{\n            path: '/profile',\n            when: 'logged-in',\n          }}\n        >\n          <ResetPassword />\n        </AppRoute>\n        <AppRoute\n          lazyload\n          path='/account/login'\n          redirect={{\n            path: '/profile',\n            when: 'logged-in',\n          }}\n        >\n          <Login />\n        </AppRoute>\n        <AppRoute\n          lazyload\n          path='/account/register'\n          redirect={{\n            path: '/profile',\n            when: 'logged-in',\n          }}\n        >\n          <Registration />\n        </AppRoute>\n        <AppRoute\n          lazyload\n          path='/account'\n          redirect={{\n            path: '/profile',\n            when: 'logged-in',\n          }}\n        >\n          <Account />\n        </AppRoute>\n        <Redirect exact from='/' to={FEED_PATH} />\n        <AppRoute lazyload>\n          <Page404 />\n        </AppRoute>\n      </Switch>\n\n      <nav>\n        <Box borderTop='1px solid' borderColor='gray.300' bottom='0' display='flex' position='fixed' width='100%'>\n          {buttons.map((buttonProps) => (\n            <Box flex='1 1 0' key={buttonProps.name}>\n              <TabBarButton {...buttonProps} isActive={location.pathname.startsWith(buttonProps.to)} />\n            </Box>\n          ))}\n        </Box>\n      </nav>\n    </>\n  );\n};\n","import React, { FC, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport { Box, CSSReset, theme, ThemeProvider } from '@chakra-ui/core';\n\nimport { TabBar } from '../components/TabBar';\n\nimport { ROUTER_BASENAME } from './router';\nimport { authTokenChecked, LOCAL_STORAGE_AUTH_TOKEN_KEY } from '../features/user/userSlice';\n\nexport const App: FC = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const authTokenExists = !!localStorage.getItem(LOCAL_STORAGE_AUTH_TOKEN_KEY);\n    dispatch(authTokenChecked({ authTokenExists }));\n  }, [dispatch]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CSSReset />\n      <HashRouter basename={ROUTER_BASENAME}>\n        <Box marginTop={4}>\n          <TabBar />\n        </Box>\n      </HashRouter>\n    </ThemeProvider>\n  );\n};\n","import { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport { userReducer } from '../features/user/userSlice';\n\nexport type AppDispatch = typeof store.dispatch;\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nconst rootReducer = combineReducers({\n  user: userReducer,\n});\n\nexport const store = configureStore({\n  reducer: rootReducer,\n});\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './app/App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport { register } from './serviceWorker';\n\nReactDOM.render(\n  <StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </StrictMode>,\n  document.getElementById('root'),\n);\n\nregister();\n"],"sourceRoot":""}