{"version":3,"sources":["app/AppRoute.tsx","components/DelayedFallback.tsx","components/Author.tsx","components/Rating.tsx","components/TimeAgo.tsx","features/feed/mocks.ts","features/feed/feedSlice.ts","utils/dom-utils.ts","features/feed/DetailView.tsx","features/feed/Post.tsx","features/feed/Feed.tsx","features/feed/FeedHeader.tsx","features/feed/FeedPage.tsx","components/TabBarButton.tsx","components/TabBar.tsx","app/App.tsx","app/store.ts","serviceWorker.ts","index.tsx","features/user/userSlice.ts","app/styles.tsx","app/router.ts","utils/fetch.ts","features/submit/submitSlice.ts"],"names":["UserState","DelayedFallback","useState","show","setShow","useEffect","timeout","setTimeout","clearTimeout","Spinner","label","AppRoute","children","lazyload","path","redirect","isLoggedIn","useSelector","selectIsLoggedIn","when","LoggedIn","LoggedOut","to","pathname","Component","fallback","Link","ChakraLink","Author","style","userImageURL","username","profilePath","as","RouterLink","Text","color","fontSize","Avatar","marginLeft","name","size","src","CONFIDENT","Rating","boxProps","labelProps","rating","shouldShowDescription","colorForRating","circularRating","CircularProgress","aria-label","role","trackColor","value","Box","display","flex","marginRight","fontWeight","marginBottom","descriptionForRating","TimeAgo","date","Date","intervalType","seconds","Math","floor","interval","timeSince","PROFILE_IMAGE_EMILY_ROSE","generateRandomDate","start","now","end","getTime","random","MOCKED_POSTS","1","categories","postID","text","title","imageURL","2","3","4","5","6","MOCKED_CATEGORIES","news","medical_supply","grocery","advice","loadRequested","createAsyncThunk","category","Promise","resolve","posts","postRequested","post","slice","createSlice","initialState","async","error","loading","postIDs","reducers","extraReducers","pending","type","state","action","meta","arg","fulfilled","categoryArg","Object","values","payload","map","normalizedPosts","reduce","acc","assign","rejected","message","feedReducer","reducer","convertWidthToEM","widthPX","parseFloat","getBodyFontSize","getComputedStyle","document","querySelector","DetailView","match","previousPathname","dispatch","useDispatch","history","useHistory","toast","useToast","ownProfile","selectOwnProfile","useWindowWidth","leading","wait","widthEM","deviceSpecificProps","marginTop","isFullHeight","params","createSelector","feed","selectPostByID","parseInt","onClose","nextPath","push","onVote","description","cityName","status","duration","isClosable","Drawer","scrollBehavior","isOpen","placement","margin","width","Tag","key","alignItems","height","Divider","borderColor","orientation","onClick","event","stopPropagation","maxWidth","Image","alt","maxHeight","Button","variant","variantColor","paddingProps","padding","Post","linkToDetailView","boxShadow","borderRadius","position","background","borderTopRightRadius","bottom","borderTopLeftRadius","objectFit","Feed","includes","categoryState","selectPostsByCategory","keys","length","gridTemplateColumns","gridGap","Location","profile","textDecoration","FeedHeader","_props","React","modalIsOpen","setModalIsOpen","responsiveBoxProps","firstName","cursor","InputGroup","Icon","Input","onFocus","placeholder","Modal","tabs","id","FeedPage","useLocation","usePrevious","tabsSize","Tabs","aria-controls","aria-selected","tabIndex","outline","exact","render","props","from","TabBarButton","ariaLabel","icon","isActive","flexDirection","paddingY","IconButton","Submit","lazy","then","default","Profile","Account","Login","ResetPassword","Registration","Page404","buttons","home","submit","account","loggedInButtons","loggedOutButtons","TabBar","loggedIn","location","backgroundColor","borderTop","zIndex","buttonProps","startsWith","App","authTokenChecked","authTokenExists","ThemeProvider","theme","CSSReset","basename","ROUTER_BASENAME","persistConfig","storage","blacklist","rootReducer","combineReducers","submitReducer","user","userReducer","persistedReducer","persistReducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistStore","Boolean","window","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","LOCAL_STORAGE_AUTH_TOKEN_KEY","MOCKED_OWN_PROFILE","email","lastName","postsCount","MOCKED_OTHER_PROFILES","emily_rose28","body","fetch","JSON","stringify","method","data","localStorage","setItem","token","registered","openedOtherProfile","otherProfile","loggedOut","_action","actions","selectAsync","selectOtherProfile","selectOwnUsername","marginX","chakraTheme","icons","ioMdEye","viewBox","ioMdEyeOff","mdAdd","mdHome","mdPerson","createHashHistory","DEFAULT_OPTIONS","credentials","headers","options","response","json","ok","Error","errorMessage","submitted"],"mappings":"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","file":"static/js/main.b7507ebf.chunk.js","sourcesContent":["import React, { FC, ReactElement, Suspense } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Redirect, Route } from 'react-router-dom';\n\nimport { DelayedFallback } from '../components/DelayedFallback';\n\nimport { selectIsLoggedIn } from '../features/user/userSlice';\n\nimport { AppRoutes } from './router';\n\nexport enum UserState {\n  LoggedIn,\n  LoggedOut,\n}\n\ntype Props = {\n  children: ReactElement;\n  lazyload: boolean;\n  path: AppRoutes | null;\n  redirect?: {\n    path: AppRoutes;\n    when: UserState;\n  };\n};\n\nexport const AppRoute: FC<Props> = ({ children, lazyload, path, redirect }: Props) => {\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const shouldRedirect =\n    (redirect?.when === UserState.LoggedIn && isLoggedIn) || (redirect?.when === UserState.LoggedOut && !isLoggedIn);\n  if (shouldRedirect) {\n    return <Redirect to={{ pathname: redirect?.path }} />;\n  }\n\n  const Component = <Route path={path || ''}>{children}</Route>;\n  return lazyload ? <Suspense fallback={<DelayedFallback />}>{Component}</Suspense> : Component;\n};\n","import React, { FC, useEffect, useState } from 'react';\nimport { Spinner } from '@chakra-ui/core';\n\nexport const DelayedFallback: FC = () => {\n  const [show, setShow] = useState(false);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => setShow(true), 500);\n    return (): void => {\n      clearTimeout(timeout);\n    };\n  }, []);\n\n  return <>{show && <Spinner label='Loading...' />}</>;\n};\n","import React, { FC } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Avatar, BoxProps, Link as ChakraLink, Text } from '@chakra-ui/core';\n\nimport { AppRoutes } from '../app/router';\nimport { Post } from '../features/feed/feedSlice';\n\ntype Props = {\n  style?: BoxProps;\n  userImageURL: Post['userImageURL'];\n  username: Post['username'];\n};\n\n// TS workaround\nconst Link: any = ChakraLink;\n\nexport const Author: FC<Props> = ({ style, userImageURL, username }: Props) => {\n  const profilePath = ('/profile' as AppRoutes) + `/${username}`;\n\n  return (\n    <Link as={RouterLink} to={profilePath} style={style}>\n      <Text as='span' color='blue.500' fontSize='sm'>\n        {username}\n      </Text>\n      {userImageURL && <Avatar marginLeft={4} name={username} size='xs' src={userImageURL ?? ''} />}\n    </Link>\n  );\n};\n","import React, { FC } from 'react';\nimport { Box, BoxProps, CircularProgress, CircularProgressLabel, Text } from '@chakra-ui/core';\n\nimport { Post } from '../features/feed/feedSlice';\n\nconst NOT_CONFIDENT = 'Based on information gathered, we do not have enough information to be confident of this data.';\nconst CONFIDENT = 'Based on information gathered, we are confident of this data.';\n\nconst colorForRating = (rating: Post['rating']): string => {\n  if (rating === null || rating < 40) {\n    return 'gray';\n  }\n\n  if (rating >= 40 && rating <= 70) {\n    return 'yellow';\n  }\n\n  return 'green';\n};\n\nconst descriptionForRating = (rating: Post['rating']): string => {\n  if (rating === null || rating < 40) {\n    return CONFIDENT;\n  }\n\n  if (rating >= 40 && rating <= 70) {\n    return NOT_CONFIDENT;\n  }\n\n  return CONFIDENT;\n};\n\ntype Props = { boxProps?: BoxProps; labelProps?: BoxProps; rating: Post['rating']; shouldShowDescription: boolean };\n\nexport const Rating: FC<Props> = ({ boxProps, labelProps, rating, shouldShowDescription }: Props) => {\n  const color = colorForRating(rating);\n\n  const circularRating = (\n    <CircularProgress\n      aria-label='reliability score of post'\n      color={color}\n      role='presentation'\n      style={boxProps}\n      trackColor={color}\n      value={rating ?? 100}\n    >\n      <CircularProgressLabel style={labelProps}>{rating ?? '?'}</CircularProgressLabel>\n    </CircularProgress>\n  );\n\n  if (!shouldShowDescription) {\n    return circularRating;\n  }\n\n  return (\n    <Box display='flex' flex={1}>\n      <Box flex={3} marginRight={4}>\n        <Text as='h3' color='gray.600' fontWeight='semibold' marginBottom={1}>\n          Confidence score:\n        </Text>\n        <Text>{descriptionForRating(rating)}</Text>\n      </Box>\n      <Box flex={1}>{circularRating}</Box>\n    </Box>\n  );\n};\n","import React, { FC } from 'react';\n\ntype Props = {\n  date: Date;\n};\n\nexport const TimeAgo: FC<Props> = ({ date }: Props) => <>{timeSince(date)} ago</>;\n\n// https://stackoverflow.com/questions/3177836/how-to-format-time-since-xxx-e-g-4-minutes-ago-similar-to-stack-exchange-site/23259289#23259289\nfunction timeSince(date: Date): string {\n  if (typeof date !== 'object') {\n    date = new Date(date);\n  }\n\n  // @ts-ignore\n  var seconds = Math.floor((new Date() - date) / 1000);\n  var intervalType;\n\n  var interval = Math.floor(seconds / 31536000);\n  if (interval >= 1) {\n    intervalType = 'year';\n  } else {\n    interval = Math.floor(seconds / 2592000);\n    if (interval >= 1) {\n      intervalType = 'month';\n    } else {\n      interval = Math.floor(seconds / 86400);\n      if (interval >= 1) {\n        intervalType = 'day';\n      } else {\n        interval = Math.floor(seconds / 3600);\n        if (interval >= 1) {\n          intervalType = 'hour';\n        } else {\n          interval = Math.floor(seconds / 60);\n          if (interval >= 1) {\n            intervalType = 'minute';\n          } else {\n            interval = seconds;\n            intervalType = 'second';\n          }\n        }\n      }\n    }\n  }\n\n  if (interval > 1 || interval === 0) {\n    intervalType += 's';\n  }\n\n  return interval + ' ' + intervalType;\n}\n","import { Category, Post } from './feedSlice';\n\nconst PROFILE_IMAGE_OLIVER_MICKE = process.env.PUBLIC_URL + '/img/oliver-micke.jpg';\nconst PROFILE_IMAGE_EMILY_ROSE =\n  'https://images.unsplash.com/photo-1508214751196-bcfd4ca60f91?ixlib=rb-1.2.1&auto=format&fit=crop&w=300&q=60';\n\n// https://stackoverflow.com/questions/9035627/elegant-method-to-generate-array-of-random-dates-within-two-dates/9035732#9035732\nconst generateRandomDate = (start = new Date(Date.now() - 100000000), end = new Date()): number =>\n  +new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\n\nexport const MOCKED_POSTS: { [postID in Post['postID']]: Post } = {\n  1: {\n    categories: ['news'] as Category[],\n    date: generateRandomDate(),\n    postID: 1,\n    rating: 84,\n    text:\n      'Service disconnection has been suspended. Lorem ipsum dolor sit amet. Amet sit dolor ipsum lorem? Lorem ipsum dolor sit amet!',\n    title: 'Service disconnection has been suspended',\n    username: 'emily_rose28',\n    imageURL:\n      'https://d1icd6shlvmxi6.cloudfront.net/gsc/X9IVK7/3c/bd/d1/3cbdd1179713474eabfb78be3cf8629b/images/home_screen/rectangle_u40.svg?token=f23c8c9de4fa5bfa0831193450eb20706a9de08b17e27baacb18cabb5cc57713',\n    userImageURL: PROFILE_IMAGE_EMILY_ROSE,\n  },\n  2: {\n    categories: ['news', 'medical_supply'] as Category[],\n    date: generateRandomDate(),\n    postID: 2,\n    rating: 23,\n    text:\n      'Found some N95 masks available in the home depot in Henrico. I saw at least 3 boxes when I was there at around 9:30 AM',\n    title: 'N95 masks available again in Home Depot in Henrico',\n    username: 'olivermicke',\n    imageURL:\n      'https://d1icd6shlvmxi6.cloudfront.net/gsc/X9IVK7/3c/bd/d1/3cbdd1179713474eabfb78be3cf8629b/images/home_screen/rectangle_u179.svg?token=be03a14c6f0ed738daf690859452a87a150fdecde15c5a477fd7def9bb5fb483',\n    userImageURL: PROFILE_IMAGE_OLIVER_MICKE,\n  },\n  3: {\n    categories: ['news'] as Category[],\n    date: generateRandomDate(),\n    postID: 3,\n    rating: 55,\n    text: 'Lorem ipsum dolor sit amet.',\n    title: 'VCU Developed CODVID-19 test',\n    username: 'olivermicke',\n    imageURL:\n      'https://d1icd6shlvmxi6.cloudfront.net/gsc/X9IVK7/3c/bd/d1/3cbdd1179713474eabfb78be3cf8629b/images/home_screen/rectangle_u82.svg?token=03f8946f6d34850c79b1d05c4aea91b82cc010f882f8813cf39a69c9c3ab2b26',\n    userImageURL: PROFILE_IMAGE_OLIVER_MICKE,\n  },\n  4: {\n    categories: ['grocery'] as Category[],\n    date: generateRandomDate(),\n    postID: 4,\n    rating: 72,\n    text:\n      'We will have a limited supply of toilet paper at Target on Broad street for the next days – source: I work there.',\n    title: 'Limited supply of toilet paper at Target on Broad street',\n    username: 'emily_rose',\n    imageURL:\n      'https://images.unsplash.com/photo-1584556812952-905ffd0c611a?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=300&q=80',\n    userImageURL: PROFILE_IMAGE_EMILY_ROSE,\n  },\n  5: {\n    categories: ['advice'] as Category[],\n    date: generateRandomDate(),\n    postID: 5,\n    rating: 44,\n    text: \"Especially in areas with community-spread, it's recommended to wear face masks whenever possible.\",\n    title: 'CDC recommends to wear face masks',\n    username: 'olivermicke',\n    imageURL:\n      'https://images.unsplash.com/photo-1582795003154-35736cf26353?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=300&q=80',\n    userImageURL: PROFILE_IMAGE_OLIVER_MICKE,\n  },\n  6: {\n    categories: ['news', 'grocery'] as Category[],\n    date: generateRandomDate(),\n    postID: 6,\n    rating: 19,\n    text:\n      'A friend of mine just told me that toilet paper production was ramped up to keep up with the incresed demand.',\n    title: 'Toilet paper production ramping up',\n    username: 'olivermicke',\n    imageURL:\n      'https://d1icd6shlvmxi6.cloudfront.net/gsc/X9IVK7/3c/bd/d1/3cbdd1179713474eabfb78be3cf8629b/images/home_screen/rectangle_u66.svg?token=96914e934d88a61faaecb0930cbabccb579d79c0ed63c8b00eabe4b0e4f98b4b',\n    userImageURL: PROFILE_IMAGE_OLIVER_MICKE,\n  },\n};\n\nexport const MOCKED_CATEGORIES: { [category in Category]: { [postID in Post['postID']]: Post } } = {\n  news: {\n    1: MOCKED_POSTS[1],\n    2: MOCKED_POSTS[2],\n    3: MOCKED_POSTS[3],\n    6: MOCKED_POSTS[6],\n  },\n  medical_supply: {\n    2: MOCKED_POSTS[2],\n  },\n  grocery: {\n    4: MOCKED_POSTS[4],\n    6: MOCKED_POSTS[6],\n  },\n  advice: {\n    5: MOCKED_POSTS[5],\n  },\n};\n","import { createAsyncThunk, createSelector, createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { RootState } from '../../app/store';\n\nimport { MOCKED_CATEGORIES, MOCKED_POSTS } from './mocks';\n\nconst SLICE_NAME = 'feed';\n\ntype AsyncState = {\n  error: string | null;\n  loading: 'idle' | 'pending';\n};\n\nexport type Category = 'news' | 'medical_supply' | 'grocery' | 'advice';\n\nexport type Post = {\n  postID: number;\n  categories: Category[];\n  date: number;\n  imageURL: string | null;\n  rating: number | null;\n  text: string;\n  title: string;\n  userImageURL: string | null;\n  username: string;\n};\n\nexport type Posts = { [key in Post['postID']]: Post };\n\nexport type Categories = { [key in Category]: { async: AsyncState; postIDs: number[] | null } };\n\ntype State = {\n  categories: Categories;\n  posts: {\n    [key in Post['postID']]: {\n      async: AsyncState;\n      post: Post | null;\n    };\n  };\n};\n\nexport const loadRequested = createAsyncThunk(`${SLICE_NAME}/loadRequested`, (category: Category) =>\n  Promise.resolve({ posts: MOCKED_CATEGORIES[category] }),\n);\n\nexport const postRequested = createAsyncThunk(`${SLICE_NAME}/postRequested`, (postID: Post['postID']) =>\n  Promise.resolve({ post: MOCKED_POSTS[postID] }),\n);\n\nconst initialState: State = {\n  categories: {\n    advice: {\n      async: { error: null, loading: 'idle' },\n      postIDs: null,\n    },\n    grocery: {\n      async: { error: null, loading: 'idle' },\n      postIDs: null,\n    },\n    medical_supply: {\n      async: { error: null, loading: 'idle' },\n      postIDs: null,\n    },\n    news: {\n      async: { error: null, loading: 'idle' },\n      postIDs: null,\n    },\n  },\n  posts: {},\n};\n\nexport const slice = createSlice({\n  name: SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [loadRequested.pending.type]: (state, action): void => {\n      // @ts-ignore\n      const category: Category = action.meta.arg;\n\n      const async = state.categories[category].async;\n      async.loading = 'pending';\n    },\n    [loadRequested.fulfilled.type]: (state, action: PayloadAction<{ posts: Posts }>): void => {\n      // @ts-ignore\n      const categoryArg: Category = action.meta.arg;\n      const category = state.categories[categoryArg];\n\n      category.async.error = null;\n      category.async.loading = 'idle';\n      category.postIDs = Object.values(action.payload.posts).map((post) => post.postID);\n\n      const normalizedPosts = Object.values(action.payload.posts).reduce(\n        (acc, post) => ({\n          ...acc,\n          [post.postID]: {\n            async: {\n              error: null,\n              loading: 'idle',\n            },\n            post,\n          },\n        }),\n        {},\n      );\n\n      Object.assign(state.posts, normalizedPosts);\n    },\n    [loadRequested.rejected.type]: (state, action: { error: Error }): void => {\n      // @ts-ignore\n      const category: Category = action.meta.arg;\n\n      const async = state.categories[category].async;\n      async.loading = 'idle';\n      async.error = action.error.message;\n    },\n    [postRequested.pending.type]: (state, action): void => {\n      // @ts-ignore\n      const postID: Post['postID'] = action.meta.arg;\n\n      const post = state.posts[postID] ?? { async: {} };\n      post.async.loading = 'pending';\n      state.posts[postID] = post;\n    },\n    [postRequested.fulfilled.type]: (state, action: PayloadAction<{ post: Post }>): void => {\n      // @ts-ignore\n      const postID: Post['postID'] = action.meta.arg;\n      const post = state.posts[postID];\n\n      post.async.error = null;\n      post.async.loading = 'idle';\n\n      post.post = action.payload.post;\n    },\n    [postRequested.rejected.type]: (state, action: { error: Error }): void => {\n      // @ts-ignore\n      const postID: Post['postID'] = action.meta.arg;\n\n      const post = state.posts[postID] ?? {};\n      post.async = {\n        error: action.error.message,\n        loading: 'idle',\n      };\n      post.post = null;\n      state.posts[postID] = post;\n    },\n  },\n});\n\nexport const selectPostByID = (state: RootState, postID: number): State['posts'][Post['postID']] | null =>\n  createSelector(\n    (state: RootState) => state.feed.posts[postID] ?? null,\n    (post) => post,\n  )(state);\n\nexport const selectPostsByCategory = (\n  state: RootState,\n  category: Category,\n): {\n  async: AsyncState;\n  posts: Posts | null;\n} =>\n  createSelector(\n    (state: RootState) => {\n      const postIDs = state.feed.categories[category].postIDs;\n\n      const posts =\n        postIDs === null\n          ? null\n          : Object.values(state.feed.posts).reduce((posts: Posts, { post }) => {\n              if (post === null || !postIDs.includes(post.postID)) {\n                return posts;\n              }\n\n              return {\n                ...posts,\n                [post.postID]: post,\n              };\n            }, {});\n\n      return {\n        async: state.feed.categories[category].async,\n        posts,\n      };\n    },\n    (categoryState) => categoryState,\n  )(state);\n\nexport const feedReducer = slice.reducer;\n","export const convertWidthToEM = (widthPX: number): number => widthPX / parseFloat(getBodyFontSize());\n\n// @ts-ignore\nconst getBodyFontSize = (): string => getComputedStyle(document.querySelector('body'))['font-size'];\n","import React, { FC, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, RouteComponentProps } from 'react-router-dom';\nimport { useWindowWidth } from '@react-hook/window-size';\nimport {\n  Box,\n  Button,\n  Divider,\n  Drawer,\n  DrawerBody,\n  DrawerCloseButton,\n  DrawerContent,\n  DrawerFooter,\n  DrawerHeader,\n  DrawerOverlay,\n  Image,\n  Tag,\n  Text,\n  useToast,\n} from '@chakra-ui/core';\n\nimport { Author } from '../../components/Author';\nimport { Rating } from '../../components/Rating';\nimport { TimeAgo } from '../../components/TimeAgo';\n\nimport { postRequested, selectPostByID } from './feedSlice';\nimport { selectOwnProfile } from '../user/userSlice';\n\nimport { convertWidthToEM } from '../../utils/dom-utils';\n\nimport { RootState } from '../../app/store';\n\nconst HANDHELD_BREAKPOINT = 48;\nconst MOBILE_BREAKPOINT_EM = 30;\n\ntype Props = {\n  previousPathname?: string;\n} & RouteComponentProps<{ postID: string }>;\n\nexport const DetailView: FC<Props> = ({ match, previousPathname }: Props) => {\n  const dispatch = useDispatch();\n\n  const history = useHistory();\n\n  const toast = useToast();\n\n  const ownProfile = useSelector(selectOwnProfile);\n\n  // Workaround for hidden header on mobile devices\n  const widthPX = useWindowWidth(0, {\n    leading: true,\n    wait: 250,\n  });\n  const widthEM = convertWidthToEM(widthPX);\n  // TODO: iOS only\n  const deviceSpecificProps = widthEM <= HANDHELD_BREAKPOINT ? { marginTop: 24 } : {};\n  const isFullHeight = widthEM <= MOBILE_BREAKPOINT_EM;\n\n  const postID: string | null = match.params.postID ?? null;\n\n  const post = useSelector((state: RootState) => selectPostByID(state, parseInt(postID)));\n\n  useEffect(() => {\n    if (post === null) {\n      dispatch(postRequested(+postID));\n    }\n  }, [dispatch, post, postID]);\n\n  if (post?.async.error) {\n    return <>TODO: Error state</>;\n  }\n\n  if (post === null || !post.post) {\n    return <>TODO: Null state</>;\n  }\n\n  const { categories, date, imageURL, rating, text, title, userImageURL, username } = post.post;\n\n  const onClose = (): void => {\n    const nextPath = previousPathname ?? '/';\n    history.push(nextPath);\n  };\n\n  const onVote = (): void => {\n    toast({\n      title: 'Vote saved.',\n      description: `Thank you for making ${\n        ownProfile?.cityName ? `content in ${ownProfile.cityName}` : 'local content'\n      } more reliable.`,\n      status: 'success',\n      duration: 9000,\n      isClosable: true,\n    });\n  };\n\n  return (\n    <Drawer scrollBehavior='inside' isFullHeight={isFullHeight} isOpen onClose={onClose} placement='bottom'>\n      <DrawerOverlay />\n      <DrawerContent>\n        <DrawerCloseButton {...deviceSpecificProps} aria-label='return to feed' />\n        <DrawerHeader\n          margin={['inherit', 'inherit', '0 auto']}\n          width={['initial', 'initial', 1000]}\n          {...deviceSpecificProps}\n        >\n          <Text as='h2'>{title}</Text>\n\n          <Box marginTop={2}>\n            {categories.map((category) => (\n              <Tag key={category} marginRight={2} size='sm'>\n                {category}\n              </Tag>\n            ))}\n          </Box>\n\n          <Box alignItems='center' display='flex' height='30px' marginTop={4}>\n            <Text\n              alignItems='center'\n              as='span'\n              color='gray.500'\n              display='flex'\n              fontSize='sm'\n              fontWeight='normal'\n              height='100%'\n            >\n              <TimeAgo date={new Date(date)} />\n            </Text>\n            <Divider borderColor='gray.300' height='80%' orientation='vertical' />\n            <div\n              // eslint-disable-next-line\n              onClick={(event): void => {\n                // Prevent Drawer#onClose from being called so history#push isn't called.\n                event.stopPropagation();\n              }}\n              role='presentation'\n            >\n              <Author\n                style={{\n                  alignItems: 'center',\n                  display: 'flex',\n                  height: '100%',\n                }}\n                userImageURL={userImageURL}\n                username={username}\n              />\n            </div>\n          </Box>\n        </DrawerHeader>\n\n        <DrawerBody margin='0 auto' maxWidth='1000px' width={['initial', 'initial', 1000]}>\n          {imageURL && <Image alt='post image' maxHeight={150} src={imageURL} />}\n\n          <Box marginTop={6}>\n            <Text>{text}</Text>\n          </Box>\n\n          <Box display='flex' marginTop={16}>\n            <Rating\n              boxProps={{\n                height: '100%',\n                width: '100%',\n                maxWidth: 70,\n                maxHeight: 70,\n              }}\n              labelProps={{\n                fontSize: '16px',\n              }}\n              rating={rating}\n              shouldShowDescription\n            />\n          </Box>\n        </DrawerBody>\n\n        <DrawerFooter maxWidth='1000px' width={['initial', 'initial', 1000]} margin={['initial', 'initial', '0 auto']}>\n          <Button\n            onClick={(): void => {\n              onVote();\n              onClose();\n            }}\n            variant='ghost'\n            variantColor='blue'\n          >\n            Disconfirm\n          </Button>\n          <Button\n            marginLeft={4}\n            onClick={(): void => {\n              onVote();\n              onClose();\n            }}\n            variantColor='blue'\n          >\n            Confirm\n          </Button>\n        </DrawerFooter>\n      </DrawerContent>\n    </Drawer>\n  );\n};\n","import React, { FC } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Box, Button, Image, Text, Link } from '@chakra-ui/core';\n\nimport { Author } from '../../components/Author';\nimport { Rating } from '../../components/Rating';\nimport { TimeAgo } from '../../components/TimeAgo';\n\nimport { Post as PostType } from './feedSlice';\n\ntype Props = {} & PostType;\n\nconst paddingProps = { padding: 2 };\n\nconst BORDER_RADIUS = 8;\n\nexport const Post: FC<Props> = ({ date, imageURL, postID, rating, title, userImageURL, username }: Props) => {\n  const linkToDetailView = `/feed/detail/${postID}`;\n\n  return (\n    <>\n      <Box\n        boxShadow='0px 8px 12px rgba(42, 52, 61, 0.16078431372549)'\n        borderRadius={BORDER_RADIUS}\n        maxWidth={['initial', 'initial', 350]}\n      >\n        <Box height={128} position='relative'>\n          <Link\n            {...paddingProps}\n            // @ts-ignore\n            as={RouterLink}\n            background='#ffffffdd'\n            borderTopRightRadius={BORDER_RADIUS}\n            bottom={0}\n            position='absolute'\n            // @ts-ignore\n            to={linkToDetailView}\n            width='80%'\n          >\n            {title}\n          </Link>\n\n          {imageURL && (\n            <Image\n              alt='post background image'\n              // @ts-ignore\n              borderTopLeftRadius={BORDER_RADIUS}\n              // @ts-ignore\n              borderTopRightRadius={BORDER_RADIUS}\n              height='100%'\n              objectFit='cover'\n              src={imageURL}\n              width='100%'\n            />\n          )}\n        </Box>\n\n        <Box {...paddingProps}>\n          <Box>\n            <Text color='gray.500' fontSize='sm'>\n              <TimeAgo date={new Date(date)} />\n            </Text>\n          </Box>\n          <Box marginTop={2}>\n            <Author userImageURL={userImageURL} username={username} />\n          </Box>\n        </Box>\n\n        <Box {...paddingProps} alignItems='center' display='flex'>\n          <Rating rating={rating} shouldShowDescription={false} />\n          <Button\n            as={RouterLink}\n            marginLeft={6}\n            // @ts-ignore\n            to={linkToDetailView}\n            variant='outline'\n            variantColor='blue'\n          >\n            More\n          </Button>\n        </Box>\n      </Box>\n    </>\n  );\n};\n","import React, { FC, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Box } from '@chakra-ui/core';\n\nimport { Post } from './Post';\nimport { Category, loadRequested, Post as PostType, selectPostsByCategory } from './feedSlice';\n\nimport { RootState } from '../../app/store';\n\ntype Props = {\n  category: Category;\n};\n\nexport const Feed: FC<Props> = ({ category }: Props) => {\n  const dispatch = useDispatch();\n  const { async, posts } = useSelector((state: RootState) => selectPostsByCategory(state, category));\n\n  useEffect(() => {\n    if (async.error === null && posts === null) {\n      dispatch(loadRequested(category));\n    }\n  }, [async, category, dispatch, posts]);\n\n  if (async.error) {\n    // TODO:\n    return <h1>An error occured</h1>;\n  }\n\n  if (async.loading === 'pending') {\n    // TODO:\n    return <h1>Loading...</h1>;\n  }\n\n  if (posts === null) {\n    return <>TODO: Loading state</>;\n  }\n\n  if (Object.keys(posts).length === 0) {\n    return <>TODO: Empty state</>;\n  }\n\n  return (\n    <Box\n      display='grid'\n      gridTemplateColumns={['100%', 'repeat(2, 1fr)', 'repeat(3, 1fr)', 'repeat(4, 1fr)']}\n      gridGap={8}\n      marginTop={8}\n    >\n      {Object.values(posts).map((post: PostType) => (\n        <Post key={post.postID} {...post} />\n      ))}\n    </Box>\n  );\n};\n","import React, { FC } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link as RouterLink } from 'react-router-dom';\nimport {\n  Box,\n  Button,\n  Icon,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Text,\n  useToast,\n} from '@chakra-ui/core';\n\nimport { selectOwnProfile } from '../user/userSlice';\n\nimport { responsiveBoxProps } from '../../app/styles';\n\nimport { AppRoutes } from '../../app/router';\n\ntype Props = {};\n\nconst INPUT_PLACEHOLDER = 'Use keywords to search for information';\n\nconst Location: FC<{}> = () => {\n  const profile = useSelector(selectOwnProfile);\n\n  if (profile === null) {\n    return null;\n  }\n\n  return (\n    <Text as='a' fontWeight='semibold' textDecoration='underline'>\n      {profile.cityName}\n    </Text>\n  );\n};\n\nexport const FeedHeader: FC<Props> = (_props: Props) => {\n  const profile = useSelector(selectOwnProfile);\n\n  const [modalIsOpen, setModalIsOpen] = React.useState(false);\n  const onModalClose = (): void => {\n    setModalIsOpen(false);\n  };\n\n  const toast = useToast();\n\n  if (!profile) {\n    return (\n      <Box {...responsiveBoxProps}>\n        <p>Sign in to vote and contribute.</p>\n        <RouterLink to={'/account/login' as AppRoutes}>\n          <Button marginTop={4} size='sm' variantColor='blue'>\n            Sign in\n          </Button>\n        </RouterLink>\n      </Box>\n    );\n  }\n\n  return (\n    <Box {...responsiveBoxProps}>\n      <Text color='gray.600' fontSize='lg'>\n        Good morning, {profile.firstName || profile.cityName}\n      </Text>\n      <Text\n        color='gray.600'\n        cursor='pointer'\n        fontSize='lg'\n        marginTop={1}\n        onClick={(): void => {\n          setModalIsOpen(true);\n        }}\n      >\n        Here are the latest for <Location />\n      </Text>\n      <InputGroup marginTop={4}>\n        <InputLeftElement>\n          <Icon color='gray.400' name='search' />\n        </InputLeftElement>\n        <Input\n          maxWidth={400}\n          onFocus={(): void => {\n            toast({\n              title: 'Not yet implemented',\n              description: 'This demo does not support searching posts yet.',\n              status: 'info',\n              duration: 9000,\n              isClosable: true,\n            });\n          }}\n          placeholder={INPUT_PLACEHOLDER}\n          type='text'\n        />\n      </InputGroup>\n\n      <Modal isOpen={modalIsOpen} onClose={onModalClose}>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Changing the feed&apos;s location</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            <Text fontWeight='semibold'>Not yet implemented</Text>\n            <Text marginTop={4}>\n              Here you will be able to change the feed&apos;s location and see posts from all over the world. However,\n              creating posts and validating other posts is restricted to your location.\n            </Text>\n          </ModalBody>\n\n          <ModalFooter>\n            <Button\n              onClick={(): void => {\n                setModalIsOpen(false);\n              }}\n              variantColor='blue'\n            >\n              OK\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </Box>\n  );\n};\n","import React, { FC } from 'react';\nimport { Link, Redirect, Route, Switch, useLocation } from 'react-router-dom';\nimport { Box, Tab, TabList, TabPanels, Tabs, usePrevious } from '@chakra-ui/core';\nimport { useWindowWidth } from '@react-hook/window-size';\n\nimport { DetailView } from './DetailView';\nimport { Feed } from './Feed';\nimport { FeedHeader } from './FeedHeader';\n\nimport { Category } from './feedSlice';\n\nimport { responsiveBoxProps } from '../../app/styles';\n\nimport { convertWidthToEM } from '../../utils/dom-utils';\n\nconst ARIA_TABS = 'tabs';\nconst ARIA_NEWS_TAB = 'tabs-news-tab';\nconst ARIA_MEDICAL_SUPPLY_TAB = 'tabs-medical-supply-tab';\nconst ARIA_GROCERY_TAB = 'tabs-grocery-tab';\nconst ARIA_ADVICE_TAB = 'tabs-advice-tab';\n\nconst NEWS_PATH = '/feed/news';\nconst MEDICAL_SUPPLY_PATH = '/feed/medical-supply';\nconst GROCERY_PATH = '/feed/grocery';\nconst ADVICE_PATH = '/feed/advice';\n\nconst tabs: {\n  category: Category;\n  id: string;\n  name: string;\n  to: string;\n}[] = [\n  { category: 'news', id: ARIA_NEWS_TAB, name: 'News', to: NEWS_PATH },\n  { category: 'medical_supply', id: ARIA_MEDICAL_SUPPLY_TAB, name: 'Medical Supply', to: MEDICAL_SUPPLY_PATH },\n  { category: 'grocery', id: ARIA_GROCERY_TAB, name: 'Grocery', to: GROCERY_PATH },\n  { category: 'advice', id: ARIA_ADVICE_TAB, name: 'Advice', to: ADVICE_PATH },\n];\n\n// Taken from theme.breakpoints\nconst TABS_SIZE_BREAKPOINT_EM = 30;\n\nexport const FeedPage: FC = () => {\n  const { pathname } = useLocation();\n  const previousPathname = usePrevious(pathname);\n\n  // Workaround for showing smaller text on mobile.\n  const widthPX = useWindowWidth(0, { leading: true, wait: 250 });\n  const widthEM = convertWidthToEM(widthPX);\n  const tabsSize = widthEM <= TABS_SIZE_BREAKPOINT_EM ? 'sm' : 'md';\n\n  return (\n    <Box marginTop={2}>\n      <FeedHeader />\n      <Tabs marginTop={[6, 6, 8]} size={tabsSize}>\n        <TabList id={ARIA_TABS} {...responsiveBoxProps} width={['100%', '100%', '90%', '80%', '70%']}>\n          {tabs.map(({ id, name, to }) => (\n            <Tab\n              aria-controls={ARIA_TABS}\n              aria-selected={pathname === to}\n              as={Link}\n              id={id}\n              key={name}\n              tabIndex={0}\n              to={to}\n            >\n              {name}\n            </Tab>\n          ))}\n        </TabList>\n\n        <TabPanels marginTop={8} outline='none' {...responsiveBoxProps}>\n          <Switch>\n            {tabs.map(({ category, to }) => (\n              <Route exact key={category} path={to}>\n                <Feed category={category} />\n              </Route>\n            ))}\n            <Route\n              path='/feed/detail/:postID'\n              render={(props): JSX.Element => <DetailView {...props} previousPathname={previousPathname} />}\n            ></Route>\n            <Redirect from='/' to={NEWS_PATH} />\n          </Switch>\n        </TabPanels>\n      </Tabs>\n    </Box>\n  );\n};\n","import React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Box, IconButton, IconButtonProps, Text } from '@chakra-ui/core';\n\nimport { ThemeType } from '../app/styles';\n\ntype Props = {\n  ariaLabel: IconButtonProps['aria-label'];\n  icon: keyof ThemeType['icons'];\n  isActive: boolean;\n  name: string;\n  to: string;\n};\n\nexport const TabBarButton: FC<Props> = ({ ariaLabel, icon, isActive, name, to }: Props) => (\n  <Link to={to}>\n    <Box alignItems='center' display='flex' flexDirection='column' paddingY={2}>\n      <IconButton\n        aria-label={ariaLabel}\n        as='span'\n        // @ts-ignore\n        icon={icon}\n        isActive={isActive}\n        size='md'\n        variant='link'\n        variantColor='gray'\n      />\n      <Text as='span' color={isActive ? 'black' : 'gray.600'} fontSize='sm'>\n        {name}\n      </Text>\n    </Box>\n  </Link>\n);\n","import React, { FC, lazy } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Redirect, Switch, useLocation } from 'react-router-dom';\nimport { Box } from '@chakra-ui/core';\n\nimport { AppRoute, UserState } from '../app/AppRoute';\nimport { FeedPage } from '../features/feed/FeedPage';\nimport { TabBarButton } from './TabBarButton';\n\nimport { selectIsLoggedIn } from '../features/user/userSlice';\n\nimport { AppRoutes } from '../app/router';\nimport { ThemeType } from '../app/styles';\n\nconst Submit = lazy(() =>\n  import('../features/submit/Submit').then(({ Submit }) => ({\n    default: Submit,\n  })),\n);\n\nconst Profile = lazy(() =>\n  import('../features/user/Profile').then(({ Profile }) => ({\n    default: Profile,\n  })),\n);\n\nconst Account = lazy(() =>\n  import('../features/user/Account').then(({ Account }) => ({\n    default: Account,\n  })),\n);\n\nconst Login = lazy(() =>\n  import('../features/user/Login').then(({ Login }) => ({\n    default: Login,\n  })),\n);\n\nconst ResetPassword = lazy(() =>\n  import('../features/user/ResetPassword').then(({ ResetPassword }) => ({\n    default: ResetPassword,\n  })),\n);\n\nconst Registration = lazy(() =>\n  import('../features/user/Registration').then(({ Registration }) => ({\n    default: Registration,\n  })),\n);\n\nconst Page404 = lazy(() =>\n  import('./Page404').then(({ Page404 }) => ({\n    default: Page404,\n  })),\n);\n\nconst buttons: {\n  [key: string]: {\n    ariaLabel: string;\n    icon: keyof ThemeType['icons'];\n    name: string;\n    to: AppRoutes;\n  };\n} = {\n  home: { ariaLabel: 'home button', icon: 'mdHome', name: 'Home', to: '/feed' },\n  submit: { ariaLabel: 'submit button', icon: 'mdAdd', name: 'Submit', to: '/submit' },\n  profile: { ariaLabel: 'profile button', icon: 'mdPerson', name: 'Profile', to: '/profile/me' },\n  account: { ariaLabel: 'account button', icon: 'mdPerson', name: 'Account', to: '/account' },\n};\n\nconst loggedInButtons = {\n  home: buttons.home,\n  submit: buttons.submit,\n  profile: buttons.profile,\n};\n\nconst loggedOutButtons = {\n  home: buttons.home,\n  submit: buttons.submit,\n  account: buttons.account,\n};\n\nconst getButtons = (loggedIn: boolean): typeof buttons[number][] =>\n  Object.values(loggedIn ? loggedInButtons : loggedOutButtons);\n\nexport const TabBar: FC<{}> = () => {\n  const location = useLocation();\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n\n  const buttons = getButtons(isLoggedIn);\n\n  return (\n    <>\n      <Switch>\n        <AppRoute lazyload={false} path='/feed'>\n          <FeedPage />\n        </AppRoute>\n        <AppRoute lazyload path='/submit'>\n          <Submit />\n        </AppRoute>\n        <AppRoute\n          lazyload\n          path='/profile/me'\n          redirect={{\n            path: '/account',\n            when: UserState.LoggedOut,\n          }}\n        >\n          <Profile />\n        </AppRoute>\n        <AppRoute\n          lazyload\n          path='/account/reset-password'\n          redirect={{\n            path: '/profile/me',\n            when: UserState.LoggedIn,\n          }}\n        >\n          <ResetPassword />\n        </AppRoute>\n        <AppRoute\n          lazyload\n          path='/account/login'\n          redirect={{\n            path: '/profile/me',\n            when: UserState.LoggedIn,\n          }}\n        >\n          <Login />\n        </AppRoute>\n        <AppRoute\n          lazyload\n          path='/account/register'\n          redirect={{\n            path: '/profile/me',\n            when: UserState.LoggedIn,\n          }}\n        >\n          <Registration />\n        </AppRoute>\n        <AppRoute\n          lazyload\n          path='/account'\n          redirect={{\n            path: '/profile/me',\n            when: UserState.LoggedIn,\n          }}\n        >\n          <Account />\n        </AppRoute>\n        <Redirect exact from='/profile' to={'/profile/me' as AppRoutes} />\n        <AppRoute lazyload path='/profile'>\n          <Profile />\n        </AppRoute>\n        <Redirect exact from='/' to={'/feed' as AppRoutes} />\n        <AppRoute lazyload path={null}>\n          <Page404 />\n        </AppRoute>\n      </Switch>\n\n      <nav>\n        <Box\n          backgroundColor='white'\n          borderTop='1px solid'\n          borderColor='gray.300'\n          bottom='0'\n          display='flex'\n          position='fixed'\n          width='100%'\n          zIndex={1}\n        >\n          {buttons.map((buttonProps) => (\n            <Box flex='1 1 0' key={buttonProps.name}>\n              <TabBarButton {...buttonProps} isActive={location.pathname.startsWith(buttonProps.to)} />\n            </Box>\n          ))}\n        </Box>\n      </nav>\n    </>\n  );\n};\n","import React, { FC, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { HashRouter, Router } from 'react-router-dom';\nimport { Box, CSSReset, ThemeProvider } from '@chakra-ui/core';\n\nimport { TabBar } from '../components/TabBar';\n\nimport { history, ROUTER_BASENAME } from './router';\nimport { theme } from './styles';\nimport { authTokenChecked } from '../features/user/userSlice';\n\nexport const App: FC = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    // const authTokenExists = !!localStorage.getItem(LOCAL_STORAGE_AUTH_TOKEN_KEY);\n    // TODO: Preliminary.\n    dispatch(authTokenChecked({ authTokenExists: true }));\n  }, [dispatch]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CSSReset />\n      <HashRouter basename={ROUTER_BASENAME}>\n        <Router history={history}>\n          <Box marginBottom={24}>\n            <TabBar />\n          </Box>\n        </Router>\n      </HashRouter>\n    </ThemeProvider>\n  );\n};\n","import { combineReducers, configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { persistReducer, persistStore, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport { feedReducer } from '../features/feed/feedSlice';\nimport { submitReducer } from '../features/submit/submitSlice';\nimport { userReducer } from '../features/user/userSlice';\n\nexport type AppDispatch = typeof store.dispatch;\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  // TODO: Preliminary\n  blacklist: ['feed', 'profile', 'submit', 'user'],\n};\n\nconst rootReducer = combineReducers({\n  feed: feedReducer,\n  submit: submitReducer,\n  user: userReducer,\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n});\n\nexport const persistor = persistStore(store);\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './app/App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport { unregister } from './serviceWorker';\n\nReactDOM.render(\n  <StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </StrictMode>,\n  document.getElementById('root'),\n);\n\n// Preliminary\nunregister();\n","import { createAsyncThunk, createSelector, createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { fetch } from '../../utils/fetch';\n\nimport { AppRoutes, history } from '../../app/router';\nimport { RootState } from '../../app/store';\n\nconst SLICE_NAME = 'user';\nexport const LOCAL_STORAGE_AUTH_TOKEN_KEY = 'token';\n\ntype AsyncState = {\n  error: string | null;\n  loading: 'idle' | 'pending';\n};\n\nexport type Profile = {\n  cityName: string;\n  email: string;\n  firstName?: string;\n  lastName?: string;\n  postsCount: number;\n  rating: number;\n  username: string;\n  imageURL?: string;\n};\n\nexport type OtherProfile = {\n  cityName: string;\n  firstName?: string;\n  lastName?: string;\n  postsCount: number;\n  rating: number;\n  username: string;\n  imageURL?: string;\n};\n\ntype State = {\n  async: AsyncState;\n  isLoggedIn: boolean;\n  profile: Profile | null;\n  otherProfile: {\n    async: AsyncState;\n    profile: OtherProfile | null;\n  };\n};\n\ntype LoginBody = {\n  name: string;\n  password: string;\n};\n\ntype LoginSuccess = {\n  success: boolean;\n  token: string;\n};\n\ntype RegistrationBody = {\n  country: string;\n  email: string;\n  name: string;\n  password: string;\n};\n\ntype RegistrationSuccess = {\n  success: boolean;\n  token: string;\n};\n\ntype OpenedOtherProfileBody = {\n  username: string;\n};\n\ntype OpenedOtherProfileSuccess = OtherProfile;\n\nconst MOCKED_OWN_PROFILE: Profile = {\n  cityName: 'Richmond',\n  email: 'foo@bar.com',\n  firstName: 'Oliver',\n  lastName: 'Micke',\n  postsCount: 7,\n  rating: 79,\n  username: 'olivermicke',\n  imageURL: process.env.PUBLIC_URL + '/img/oliver-micke.jpg',\n};\n\nconst MOCKED_OTHER_PROFILES: { [key: string]: OtherProfile } = {\n  emily_rose28: {\n    cityName: 'Richmond',\n    rating: 84,\n    postsCount: 7,\n    username: 'emily_rose28',\n  },\n};\n\nexport const loggedIn = createAsyncThunk(`${SLICE_NAME}/loggedIn`, (body: LoginBody) =>\n  fetch<LoginSuccess>('/user/login', {\n    body: JSON.stringify(body),\n    method: 'POST',\n  }).then((data) => {\n    history.push('/feed' as AppRoutes);\n    localStorage.setItem(LOCAL_STORAGE_AUTH_TOKEN_KEY, data.token);\n    return data;\n  }),\n);\n\nexport const registered = createAsyncThunk(`${SLICE_NAME}/registered`, (body: RegistrationBody) =>\n  fetch<RegistrationSuccess>('/user', {\n    body: JSON.stringify(body),\n    method: 'POST',\n  }).then((data) => {\n    history.push('/feed' as AppRoutes);\n    localStorage.setItem(LOCAL_STORAGE_AUTH_TOKEN_KEY, data.token);\n    return data;\n  }),\n);\n\nexport const openedOtherProfile = createAsyncThunk(\n  `${SLICE_NAME}/openedOtherProfile`,\n  ({ username }: OpenedOtherProfileBody) => Promise.resolve(MOCKED_OTHER_PROFILES[username]),\n);\n\nexport const slice = createSlice({\n  name: SLICE_NAME,\n  initialState: {\n    async: {\n      error: null,\n      loading: 'idle',\n    },\n    isLoggedIn: true,\n    profile: MOCKED_OWN_PROFILE,\n    otherProfile: {\n      async: {\n        error: null,\n        loading: 'idle',\n      },\n      profile: null,\n    },\n  } as State,\n  reducers: {\n    authTokenChecked: (state, action: PayloadAction<{ authTokenExists: boolean }>): void => {\n      state.isLoggedIn = action.payload.authTokenExists;\n    },\n    loggedOut: (state): void => {\n      state.profile = null;\n      state.isLoggedIn = false;\n    },\n  },\n  extraReducers: {\n    [loggedIn.pending.type]: (state): void => {\n      if (state.async.loading === 'idle') {\n        state.async.loading = 'pending';\n      }\n    },\n    [loggedIn.fulfilled.type]: (state, _action: PayloadAction<LoginSuccess>): void => {\n      if (state.async.loading === 'pending') {\n        state.async.loading = 'idle';\n        state.isLoggedIn = true;\n        // TODO: Receive profile data from BE\n        state.profile = MOCKED_OWN_PROFILE;\n      }\n    },\n    [loggedIn.rejected.type]: (state, action: { error: Error }): void => {\n      if (state.async.loading === 'pending') {\n        state.async.loading = 'idle';\n        state.async.error = action.error.message;\n      }\n    },\n    [registered.pending.type]: (state): void => {\n      if (state.async.loading === 'idle') {\n        state.async.loading = 'pending';\n      }\n    },\n    [registered.fulfilled.type]: (state, _action: PayloadAction<RegistrationSuccess>): void => {\n      if (state.async.loading === 'pending') {\n        state.async.loading = 'idle';\n        state.isLoggedIn = true;\n        // TODO: Receive profile data from BE\n        state.profile = MOCKED_OWN_PROFILE;\n      }\n    },\n    [registered.rejected.type]: (state, action: { error: Error }): void => {\n      if (state.async.loading === 'pending') {\n        state.async.loading = 'idle';\n        state.async.error = action.error.message;\n      }\n    },\n    [openedOtherProfile.pending.type]: (state): void => {\n      state.otherProfile.async.error = null;\n      state.otherProfile.async.loading = 'pending';\n    },\n    [openedOtherProfile.fulfilled.type]: (state, action: PayloadAction<OpenedOtherProfileSuccess>): void => {\n      state.otherProfile.async.loading = 'idle';\n      state.otherProfile.profile = action.payload;\n    },\n    [openedOtherProfile.rejected.type]: (state, action: { error: Error }): void => {\n      state.otherProfile.async.loading = 'idle';\n      state.otherProfile.async.error = action.error.message;\n    },\n  },\n});\n\nexport const { authTokenChecked, loggedOut } = slice.actions;\n\nexport const selectAsync = (state: RootState): State['async'] =>\n  createSelector(\n    (state: RootState) => state.user.async,\n    (async) => async,\n  )(state);\n\nexport const selectIsLoggedIn = (state: RootState): State['isLoggedIn'] =>\n  createSelector(\n    (state: RootState) => state.user.isLoggedIn,\n    (isLoggedIn) => isLoggedIn,\n  )(state);\n\nexport const selectOtherProfile = (state: RootState): OtherProfile | null =>\n  createSelector(\n    (state: RootState) => state.user.otherProfile.profile,\n    (otherProfile) => otherProfile,\n  )(state);\n\nexport const selectOwnProfile = (state: RootState): Profile | null =>\n  createSelector(\n    (state: RootState) => state.user.profile,\n    (profile) => profile,\n  )(state);\n\nexport const selectOwnUsername = (state: RootState): string | null =>\n  createSelector(\n    (state: RootState) => state.user.profile?.username ?? null,\n    (username) => username,\n  )(state);\n\nexport const userReducer = slice.reducer;\n","import React from 'react';\nimport { MdAdd, MdHome, MdPerson } from 'react-icons/md';\nimport { IoMdEye, IoMdEyeOff } from 'react-icons/io';\nimport { BoxProps, DefaultTheme, theme as chakraTheme } from '@chakra-ui/core';\n\nexport const responsiveBoxProps: BoxProps = {\n  marginTop: [4, 4, 8],\n  marginX: 'auto',\n  width: [\n    '80%', // base\n    '90%', // 480px upwards\n    '90%', // 768px upwards\n    '80%', // 992px upwards\n    '70%',\n  ],\n};\n\nexport type ThemeType = DefaultTheme & {\n  icons: DefaultTheme['icons'];\n};\n\nconst VIEW_BOX = '0 0 16 16';\n\nexport const theme: ThemeType = {\n  ...chakraTheme,\n  icons: {\n    ...chakraTheme.icons,\n    ioMdEye: {\n      path: <IoMdEye />,\n      viewBox: VIEW_BOX,\n    },\n    ioMdEyeOff: {\n      path: <IoMdEyeOff />,\n      viewBox: VIEW_BOX,\n    },\n    mdAdd: {\n      path: <MdAdd />,\n      viewBox: VIEW_BOX,\n    },\n    mdHome: {\n      path: <MdHome />,\n      viewBox: VIEW_BOX,\n    },\n    mdPerson: {\n      path: <MdPerson />,\n      viewBox: VIEW_BOX,\n    },\n  },\n};\n","import { createHashHistory } from 'history';\n\nexport const ROUTER_BASENAME = '/';\n\nexport const history = createHashHistory({ basename: ROUTER_BASENAME });\n\nexport type AppRoutes =\n  | '/'\n  | '/account'\n  | '/account/login'\n  | '/account/register'\n  | '/account/reset-password'\n  | '/feed'\n  | '/profile'\n  | '/profile/me'\n  | '/submit';\n","const DEFAULT_OPTIONS: Parameters<typeof window.fetch>[1] = {\n  credentials: 'include',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n};\n\nconst ENDPOINT_URL =\n  process.env.NODE_ENV === 'production' ? 'https://ec2-54-89-76-249.compute-1.amazonaws.com' : 'http://localhost:8080';\n\nexport function fetch<D>(path: string, options?: object): Promise<D> {\n  return window\n    .fetch(ENDPOINT_URL + path, {\n      ...DEFAULT_OPTIONS,\n      ...options,\n    })\n    .then((response: Response) => {\n      return response.json().then((json) => {\n        if (response.ok) {\n          return json;\n        }\n\n        throw json;\n      });\n    })\n    .catch((error) => {\n      throw new Error(error.errorMessage || 'An unknown error has occured.');\n    });\n}\n","import { createAsyncThunk, createSelector, createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { fetch } from '../../utils/fetch';\n\nimport { AppRoutes, history } from '../../app/router';\nimport { RootState } from '../../app/store';\n\nconst SLICE_NAME = 'submit';\n\ntype AsyncState = {\n  error: string | null;\n  loading: 'idle' | 'pending';\n};\n\ntype State = {\n  async: AsyncState;\n};\n\ntype SubmitBody = {\n  image: string | null;\n  text: string;\n  title: string;\n};\n\ntype SubmitSuccess = {\n  success: boolean;\n};\n\nexport const submitted = createAsyncThunk(`${SLICE_NAME}/submitted`, (body: SubmitBody) =>\n  fetch<SubmitSuccess>('/TODO:Route', {\n    body: JSON.stringify(body),\n    method: 'POST',\n  }).then((data) => {\n    history.push('/feed' as AppRoutes);\n    return data;\n  }),\n);\n\nexport const slice = createSlice({\n  name: SLICE_NAME,\n  initialState: {\n    async: {\n      error: null,\n      loading: 'idle',\n    },\n  } as State,\n  reducers: {},\n  extraReducers: {\n    [submitted.pending.type]: (state): void => {\n      if (state.async.loading === 'idle') {\n        state.async.loading = 'pending';\n      }\n    },\n    [submitted.fulfilled.type]: (state, _action: PayloadAction<SubmitSuccess>): void => {\n      if (state.async.loading === 'pending') {\n        state.async.loading = 'idle';\n      }\n    },\n    [submitted.rejected.type]: (state, action: { error: Error }): void => {\n      if (state.async.loading === 'pending') {\n        state.async.loading = 'idle';\n        state.async.error = action.error.message;\n      }\n    },\n  },\n});\n\nexport const selectAsync = (state: RootState): State['async'] =>\n  createSelector(\n    (state: RootState) => state.submit.async,\n    (async) => async,\n  )(state);\n\nexport const submitReducer = slice.reducer;\n"],"sourceRoot":""}