{"version":3,"sources":["app/AppRoute.tsx","components/DelayedFallback.tsx","features/feed/Feed.tsx","features/feed/FeedHeader.tsx","utils/dom-utils.ts","features/feed/FeedPage.tsx","components/TabBarButton.tsx","components/TabBar.tsx","app/App.tsx","app/store.ts","serviceWorker.ts","index.tsx","utils/fetch.ts","features/user/userSlice.ts","features/feed/feedSlice.ts","app/styles.tsx","app/router.ts","features/feed/mocks.ts","components/Author.tsx","components/TimeAgo.tsx","features/feed/PostInfo.tsx","features/submit/submitSlice.ts","features/feed/Post.tsx","components/Rating.tsx","features/feed/Comment.tsx","features/feed/DetailView.tsx"],"names":["UserState","DelayedFallback","useState","show","setShow","useEffect","timeout","setTimeout","clearTimeout","Spinner","label","AppRoute","children","lazyload","path","redirect","isLoggedIn","useSelector","selectIsLoggedIn","when","LoggedIn","LoggedOut","to","pathname","Component","fallback","Feed","category","dispatch","useDispatch","state","selectPostsByCategory","async","posts","error","loadRequested","loading","Object","keys","length","postsSortedByDate","values","sort","postA","postB","date","Box","display","gridTemplateColumns","gridGap","marginTop","map","post","Post","key","postID","Location","profile","selectOwnProfile","Text","as","fontWeight","textDecoration","cityName","FeedHeader","_props","React","modalIsOpen","setModalIsOpen","toast","useToast","responsiveBoxProps","color","fontSize","firstName","cursor","onClick","InputGroup","Icon","name","Input","aria-label","id","maxWidth","onFocus","title","description","status","duration","isClosable","placeholder","type","Modal","isOpen","onClose","Button","variantColor","size","getBodyFontSize","getComputedStyle","document","querySelector","tabs","FeedPage","useLocation","previousPathname","usePrevious","tabsSize","widthPX","parseFloat","convertWidthToEM","useWindowWidth","leading","wait","Tabs","width","aria-controls","aria-selected","Link","tabIndex","outline","exact","render","props","DetailView","from","TabBarButton","ariaLabel","icon","isActive","alignItems","flexDirection","paddingY","IconButton","variant","Submit","lazy","then","default","Profile","Account","Login","ResetPassword","Registration","Page404","buttons","home","submit","account","loggedInButtons","loggedOutButtons","TabBar","loggedIn","location","backgroundColor","borderTop","borderColor","bottom","position","zIndex","buttonProps","flex","startsWith","App","ThemeProvider","theme","CSSReset","basename","ROUTER_BASENAME","history","marginBottom","persistConfig","storage","blacklist","rootReducer","combineReducers","feed","feedReducer","submitReducer","user","userReducer","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistStore","Boolean","window","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message","DEFAULT_OPTIONS","credentials","headers","fetch","options","response","json","ok","Error","errorMessage","OPENED_OWN_PROFILE_PENDING","OPENED_OWN_PROFILE_FULFILLED","OPENED_OWN_PROFILE_REJECTED","MOCKED_OWN_PROFILE","email","lastName","postsCount","postIDs","rating","username","imageURL","PROFILE_IMAGE_OLIVER_MICKE","MOCKED_OTHER_PROFILES","emily_rose28","PROFILE_IMAGE_EMILY_ROSE28","createAsyncThunk","body","JSON","stringify","method","data","push","registered","openedOtherProfile","Promise","resolve","slice","createSlice","initialState","otherProfile","reducers","loggedOut","extraReducers","pending","fulfilled","_action","rejected","action","payload","thunks","requestedPostsOfUser","isOwnProfile","userNameParam","_getState","requestedPostsByIDs","actions","selectAsync","createSelector","selectOtherProfile","selectOwnUsername","MOCKED_CATEGORIES","postRequested","MOCKED_POSTS","reduce","acc","categories","advice","grocery","medical_supply","news","submitted","meta","arg","comments","Date","image","text","userImageURL","forEach","c","categoryArg","normalizedPosts","assign","_state","selectPostByID","selectPostsByIDs","filter","includes","categoryState","marginX","chakraTheme","icons","ioMdEye","viewBox","ioMdEyeOff","mdAdd","mdHome","mdPerson","createHashHistory","generateRandomDate","start","now","end","getTime","Math","random","generateRandomCommentDate","1","2","comment","commentID","3","4","5","6","ChakraLink","Author","style","profilePath","RouterLink","Avatar","marginRight","src","TimeAgo","intervalType","seconds","floor","interval","timeSince","PostInfo","height","Divider","orientation","_body","paddingProps","padding","FALLBACK_IMAGE_URL","detailViewRedirectToProfile","linkToDetailView","boxShadow","borderRadius","background","borderTopRightRadius","_hover","alt","borderTopLeftRadius","objectFit","shouldShowDescription","marginLeft","NOT_CONFIDENT","Rating","boxProps","labelProps","colorForRating","circularRating","trackColor","value","descriptionForRating","Comment","borderWidth","shadow","CATEGORY_NAMES","CATEGORY_LINKS","isIOS","test","platform","maxTouchPoints","MSStream","useHistory","ownProfile","params","parseInt","nextPath","footerContent","onVote","Drawer","isFullHeight","scrollBehavior","placement","margin","event","stopPropagation","Tag","role","Image","maxHeight","commentA","commentB","rounded","justifyContent"],"mappings":"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","file":"static/js/main.fd027657.chunk.js","sourcesContent":["import React, { FC, ReactElement, Suspense } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Redirect, Route } from 'react-router-dom';\n\nimport { DelayedFallback } from '../components/DelayedFallback';\n\nimport { selectIsLoggedIn } from '../features/user/userSlice';\n\nimport { AppRoutes } from './router';\n\nexport enum UserState {\n  LoggedIn,\n  LoggedOut,\n}\n\ntype Props = {\n  children: ReactElement;\n  lazyload: boolean;\n  path: AppRoutes | null;\n  redirect?: {\n    path: AppRoutes;\n    when: UserState;\n  };\n};\n\nexport const AppRoute: FC<Props> = ({ children, lazyload, path, redirect }: Props) => {\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const shouldRedirect =\n    (redirect?.when === UserState.LoggedIn && isLoggedIn) || (redirect?.when === UserState.LoggedOut && !isLoggedIn);\n  if (shouldRedirect) {\n    return <Redirect to={{ pathname: redirect?.path }} />;\n  }\n\n  const Component = <Route path={path || ''}>{children}</Route>;\n  return lazyload ? <Suspense fallback={<DelayedFallback />}>{Component}</Suspense> : Component;\n};\n","import React, { FC, useEffect, useState } from 'react';\nimport { Spinner } from '@chakra-ui/core';\n\nexport const DelayedFallback: FC = () => {\n  const [show, setShow] = useState(false);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => setShow(true), 500);\n    return (): void => {\n      clearTimeout(timeout);\n    };\n  }, []);\n\n  return <>{show && <Spinner label='Loading...' />}</>;\n};\n","import React, { FC, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Box } from '@chakra-ui/core';\n\nimport { Post } from './Post';\nimport { Category, loadRequested, Post as PostType, selectPostsByCategory } from './feedSlice';\n\nimport { RootState } from '../../app/store';\n\ntype Props = {\n  category: Category;\n};\n\nexport const Feed: FC<Props> = ({ category }: Props) => {\n  const dispatch = useDispatch();\n  const { async, posts } = useSelector((state: RootState) => selectPostsByCategory(state, category));\n\n  useEffect(() => {\n    if (async.error === null && posts === null) {\n      dispatch(loadRequested(category));\n    }\n  }, [async, category, dispatch, posts]);\n\n  if (async.error) {\n    // TODO:\n    return <h1>An error occured</h1>;\n  }\n\n  if (async.loading === 'pending') {\n    // TODO:\n    return <h1>Loading...</h1>;\n  }\n\n  if (posts === null) {\n    return <>TODO: Loading state</>;\n  }\n\n  if (Object.keys(posts).length === 0) {\n    return <>TODO: Empty state</>;\n  }\n\n  const postsSortedByDate = Object.values(posts).sort((postA, postB) => (postA.date > postB.date ? -1 : 1));\n\n  return (\n    <Box\n      display='grid'\n      gridTemplateColumns={['100%', 'repeat(2, 1fr)', 'repeat(3, 1fr)', 'repeat(4, 1fr)']}\n      gridGap={8}\n      marginTop={8}\n    >\n      {postsSortedByDate.map((post: PostType) => (\n        <Post key={post.postID} {...post} />\n      ))}\n    </Box>\n  );\n};\n","import React, { FC } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link as RouterLink } from 'react-router-dom';\nimport {\n  Box,\n  Button,\n  Icon,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Text,\n  useToast,\n} from '@chakra-ui/core';\n\nimport { selectOwnProfile } from '../user/userSlice';\n\nimport { responsiveBoxProps } from '../../app/styles';\n\nimport { AppRoutes } from '../../app/router';\n\ntype Props = {};\n\nconst INPUT_PLACEHOLDER = 'Use keywords to search for information';\n\nconst Location: FC<{}> = () => {\n  const profile = useSelector(selectOwnProfile).profile ?? null;\n\n  if (profile === null) {\n    return null;\n  }\n\n  return (\n    <Text as='a' fontWeight='semibold' textDecoration='underline'>\n      {profile.cityName}\n    </Text>\n  );\n};\n\nexport const FeedHeader: FC<Props> = (_props: Props) => {\n  const profile = useSelector(selectOwnProfile).profile ?? null;\n\n  const [modalIsOpen, setModalIsOpen] = React.useState(false);\n  const onModalClose = (): void => {\n    setModalIsOpen(false);\n  };\n\n  const toast = useToast();\n\n  if (!profile) {\n    return (\n      <Box {...responsiveBoxProps}>\n        <p>Sign in to vote and contribute.</p>\n        <RouterLink to={'/account/login' as AppRoutes}>\n          <Button marginTop={4} size='sm' variantColor='blue'>\n            Sign in\n          </Button>\n        </RouterLink>\n      </Box>\n    );\n  }\n\n  return (\n    <Box {...responsiveBoxProps}>\n      <Text color='gray.600' fontSize='lg'>\n        Good morning, {profile.firstName || profile.cityName}\n      </Text>\n      <Text\n        color='gray.600'\n        cursor='pointer'\n        fontSize='lg'\n        marginTop={1}\n        onClick={(): void => {\n          setModalIsOpen(true);\n        }}\n      >\n        Here are the latest for <Location />\n      </Text>\n      <InputGroup marginTop={4}>\n        <InputLeftElement>\n          <Icon color='gray.400' name='search' />\n        </InputLeftElement>\n        <Input\n          aria-label='feed search'\n          id='feed-search'\n          fontSize={['xs', 'sm', 'md']}\n          maxWidth={400}\n          onFocus={(): void => {\n            toast({\n              title: 'Not yet implemented',\n              description: 'This demo does not support searching posts yet.',\n              status: 'info',\n              duration: 7000,\n              isClosable: true,\n            });\n          }}\n          placeholder={INPUT_PLACEHOLDER}\n          type='text'\n        />\n      </InputGroup>\n\n      <Modal isOpen={modalIsOpen} onClose={onModalClose}>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Changing the feed&apos;s location</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            <Text fontWeight='semibold'>Not yet implemented</Text>\n            <Text marginTop={4}>\n              Here you will be able to change the feed&apos;s location and see posts from all over the world. However,\n              creating posts and validating other posts is restricted to your location.\n            </Text>\n          </ModalBody>\n\n          <ModalFooter>\n            <Button\n              onClick={(): void => {\n                setModalIsOpen(false);\n              }}\n              variantColor='blue'\n            >\n              OK\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </Box>\n  );\n};\n","export const convertWidthToEM = (widthPX: number): number => widthPX / parseFloat(getBodyFontSize());\n\n// @ts-ignore\nconst getBodyFontSize = (): string => getComputedStyle(document.querySelector('body'))['font-size'];\n","import React, { FC } from 'react';\nimport { Link, Redirect, Route, Switch, useLocation } from 'react-router-dom';\nimport { Box, Tab, TabList, TabPanels, Tabs, usePrevious } from '@chakra-ui/core';\nimport { useWindowWidth } from '@react-hook/window-size';\n\nimport { DetailView } from './DetailView';\nimport { Feed } from './Feed';\nimport { FeedHeader } from './FeedHeader';\n\nimport { Category } from './feedSlice';\n\nimport { responsiveBoxProps } from '../../app/styles';\n\nimport { convertWidthToEM } from '../../utils/dom-utils';\n\nconst ARIA_TABS = 'tabs';\nconst ARIA_NEWS_TAB = 'tabs-news-tab';\nconst ARIA_MEDICAL_SUPPLY_TAB = 'tabs-medical-supply-tab';\nconst ARIA_GROCERY_TAB = 'tabs-grocery-tab';\nconst ARIA_ADVICE_TAB = 'tabs-advice-tab';\n\nconst NEWS_PATH = '/feed/news';\nconst MEDICAL_SUPPLY_PATH = '/feed/medical-supply';\nconst GROCERY_PATH = '/feed/grocery';\nconst ADVICE_PATH = '/feed/advice';\n\nconst tabs: {\n  category: Category;\n  id: string;\n  name: string;\n  to: string;\n}[] = [\n  { category: 'news', id: ARIA_NEWS_TAB, name: 'News', to: NEWS_PATH },\n  { category: 'medical_supply', id: ARIA_MEDICAL_SUPPLY_TAB, name: 'Medical Supply', to: MEDICAL_SUPPLY_PATH },\n  { category: 'grocery', id: ARIA_GROCERY_TAB, name: 'Grocery', to: GROCERY_PATH },\n  { category: 'advice', id: ARIA_ADVICE_TAB, name: 'Advice', to: ADVICE_PATH },\n];\n\n// Taken from theme.breakpoints\nconst TABS_SIZE_BREAKPOINT_EM = 30;\n\nexport const FeedPage: FC = () => {\n  const { pathname } = useLocation();\n  const previousPathname = usePrevious(pathname);\n\n  // Workaround for showing smaller text on mobile.\n  const widthPX = useWindowWidth(0, { leading: true, wait: 250 });\n  const widthEM = convertWidthToEM(widthPX);\n  const tabsSize = widthEM <= TABS_SIZE_BREAKPOINT_EM ? 'sm' : 'md';\n\n  return (\n    <Box marginTop={2}>\n      <FeedHeader />\n      <Tabs marginTop={[6, 6, 8]} size={tabsSize}>\n        <TabList id={ARIA_TABS} {...responsiveBoxProps} width={['100%', '100%', '90%', '80%', '70%']}>\n          {tabs.map(({ id, name, to }) => (\n            <Tab\n              aria-controls={ARIA_TABS}\n              aria-selected={pathname === to}\n              as={Link}\n              id={id}\n              key={name}\n              tabIndex={0}\n              to={to}\n            >\n              {name}\n            </Tab>\n          ))}\n        </TabList>\n\n        <TabPanels marginTop={8} outline='none' {...responsiveBoxProps}>\n          <Switch>\n            {tabs.map(({ category, to }) => (\n              <Route exact key={category} path={to}>\n                <Feed category={category} />\n              </Route>\n            ))}\n            <Route\n              path='/feed/detail/:postID'\n              render={(props): JSX.Element => <DetailView {...props} previousPathname={previousPathname} />}\n            ></Route>\n            <Redirect from='/' to={NEWS_PATH} />\n          </Switch>\n        </TabPanels>\n      </Tabs>\n    </Box>\n  );\n};\n","import React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Box, IconButton, IconButtonProps, Text } from '@chakra-ui/core';\n\nimport { ThemeType } from '../app/styles';\n\ntype Props = {\n  ariaLabel: IconButtonProps['aria-label'];\n  icon: keyof ThemeType['icons'];\n  isActive: boolean;\n  name: string;\n  to: string;\n};\n\nexport const TabBarButton: FC<Props> = ({ ariaLabel, icon, isActive, name, to }: Props) => (\n  <Link to={to}>\n    <Box alignItems='center' display='flex' flexDirection='column' paddingY={2}>\n      <IconButton\n        aria-label={ariaLabel}\n        as='span'\n        // @ts-ignore\n        icon={icon}\n        isActive={isActive}\n        size='md'\n        variant='link'\n        variantColor='gray'\n      />\n      <Text as='span' color={isActive ? 'black' : 'gray.600'} fontSize='sm'>\n        {name}\n      </Text>\n    </Box>\n  </Link>\n);\n","import React, { FC, lazy } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Redirect, Switch, useLocation } from 'react-router-dom';\nimport { Box } from '@chakra-ui/core';\n\nimport { AppRoute, UserState } from '../app/AppRoute';\nimport { FeedPage } from '../features/feed/FeedPage';\nimport { TabBarButton } from './TabBarButton';\n\nimport { selectIsLoggedIn } from '../features/user/userSlice';\n\nimport { AppRoutes } from '../app/router';\nimport { ThemeType } from '../app/styles';\n\nconst Submit = lazy(() =>\n  import('../features/submit/Submit').then(({ Submit }) => ({\n    default: Submit,\n  })),\n);\n\nconst Profile = lazy(() =>\n  import('../features/user/Profile').then(({ Profile }) => ({\n    default: Profile,\n  })),\n);\n\nconst Account = lazy(() =>\n  import('../features/user/Account').then(({ Account }) => ({\n    default: Account,\n  })),\n);\n\nconst Login = lazy(() =>\n  import('../features/user/Login').then(({ Login }) => ({\n    default: Login,\n  })),\n);\n\nconst ResetPassword = lazy(() =>\n  import('../features/user/ResetPassword').then(({ ResetPassword }) => ({\n    default: ResetPassword,\n  })),\n);\n\nconst Registration = lazy(() =>\n  import('../features/user/Registration').then(({ Registration }) => ({\n    default: Registration,\n  })),\n);\n\nconst Page404 = lazy(() =>\n  import('./Page404').then(({ Page404 }) => ({\n    default: Page404,\n  })),\n);\n\nconst buttons: {\n  [key: string]: {\n    ariaLabel: string;\n    icon: keyof ThemeType['icons'];\n    name: string;\n    to: AppRoutes;\n  };\n} = {\n  home: { ariaLabel: 'home button', icon: 'mdHome', name: 'Home', to: '/feed' },\n  submit: { ariaLabel: 'submit button', icon: 'mdAdd', name: 'Submit', to: '/submit' },\n  profile: { ariaLabel: 'profile button', icon: 'mdPerson', name: 'Profile', to: '/profile/me' },\n  account: { ariaLabel: 'account button', icon: 'mdPerson', name: 'Account', to: '/account' },\n};\n\nconst loggedInButtons = {\n  home: buttons.home,\n  submit: buttons.submit,\n  profile: buttons.profile,\n};\n\nconst loggedOutButtons = {\n  home: buttons.home,\n  submit: buttons.submit,\n  account: buttons.account,\n};\n\nconst getButtons = (loggedIn: boolean): typeof buttons[number][] =>\n  Object.values(loggedIn ? loggedInButtons : loggedOutButtons);\n\nexport const TabBar: FC<{}> = () => {\n  const location = useLocation();\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n\n  const buttons = getButtons(isLoggedIn);\n\n  return (\n    <>\n      <Switch>\n        <AppRoute lazyload={false} path='/feed'>\n          <FeedPage />\n        </AppRoute>\n        <AppRoute lazyload path='/submit'>\n          <Submit />\n        </AppRoute>\n        <AppRoute\n          lazyload\n          path='/profile/me'\n          redirect={{\n            path: '/account',\n            when: UserState.LoggedOut,\n          }}\n        >\n          <Profile />\n        </AppRoute>\n        <AppRoute\n          lazyload\n          path='/account/reset-password'\n          redirect={{\n            path: '/profile/me',\n            when: UserState.LoggedIn,\n          }}\n        >\n          <ResetPassword />\n        </AppRoute>\n        <AppRoute\n          lazyload\n          path='/account/login'\n          redirect={{\n            path: '/profile/me',\n            when: UserState.LoggedIn,\n          }}\n        >\n          <Login />\n        </AppRoute>\n        <AppRoute\n          lazyload\n          path='/account/register'\n          redirect={{\n            path: '/profile/me',\n            when: UserState.LoggedIn,\n          }}\n        >\n          <Registration />\n        </AppRoute>\n        <AppRoute\n          lazyload\n          path='/account'\n          redirect={{\n            path: '/profile/me',\n            when: UserState.LoggedIn,\n          }}\n        >\n          <Account />\n        </AppRoute>\n        <Redirect exact from='/profile' to={'/profile/me' as AppRoutes} />\n        <AppRoute lazyload path='/profile'>\n          <Profile />\n        </AppRoute>\n        <Redirect exact from='/' to={'/feed' as AppRoutes} />\n        <AppRoute lazyload path={null}>\n          <Page404 />\n        </AppRoute>\n      </Switch>\n\n      <nav>\n        <Box\n          backgroundColor='white'\n          borderTop='1px solid'\n          borderColor='gray.300'\n          bottom='0'\n          display='flex'\n          position='fixed'\n          width='100%'\n          zIndex={1}\n        >\n          {buttons.map((buttonProps) => (\n            <Box flex='1 1 0' key={buttonProps.name}>\n              <TabBarButton {...buttonProps} isActive={location.pathname.startsWith(buttonProps.to)} />\n            </Box>\n          ))}\n        </Box>\n      </nav>\n    </>\n  );\n};\n","import React, { FC } from 'react';\nimport { HashRouter, Router } from 'react-router-dom';\nimport { Box, CSSReset, ThemeProvider } from '@chakra-ui/core';\n\nimport { TabBar } from '../components/TabBar';\n\nimport { history, ROUTER_BASENAME } from './router';\nimport { theme } from './styles';\n\nexport const App: FC = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <CSSReset />\n      <HashRouter basename={ROUTER_BASENAME}>\n        <Router history={history}>\n          <Box marginBottom={24}>\n            <TabBar />\n          </Box>\n        </Router>\n      </HashRouter>\n    </ThemeProvider>\n  );\n};\n","import { combineReducers, configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { persistReducer, persistStore, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport { feedReducer } from '../features/feed/feedSlice';\nimport { submitReducer } from '../features/submit/submitSlice';\nimport { userReducer } from '../features/user/userSlice';\n\nexport type AppDispatch = typeof store.dispatch;\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  // TODO: Preliminary\n  blacklist: ['profile', 'submit', 'user'],\n};\n\nconst rootReducer = combineReducers({\n  feed: feedReducer,\n  submit: submitReducer,\n  user: userReducer,\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n});\n\nexport const persistor = persistStore(store);\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './app/App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport { unregister } from './serviceWorker';\n\nReactDOM.render(\n  <StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </StrictMode>,\n  document.getElementById('root'),\n);\n\n// Preliminary\nunregister();\n","const DEFAULT_OPTIONS: Parameters<typeof window.fetch>[1] = {\n  credentials: 'include',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n};\n\nconst ENDPOINT_URL =\n  process.env.NODE_ENV === 'production' ? 'https://ec2-54-89-76-249.compute-1.amazonaws.com' : 'http://localhost:8080';\n\nexport function fetch<D>(path: string, options?: object): Promise<D> {\n  return window\n    .fetch(ENDPOINT_URL + path, {\n      ...DEFAULT_OPTIONS,\n      ...options,\n    })\n    .then((response: Response) => {\n      return response.json().then((json) => {\n        if (response.ok) {\n          return json;\n        }\n\n        throw json;\n      });\n    })\n    .catch((error) => {\n      throw new Error(error.errorMessage || 'An unknown error has occured.');\n    });\n}\n","import { createAsyncThunk, createSelector, createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { fetch } from '../../utils/fetch';\n\nimport { AppRoutes, history } from '../../app/router';\nimport { AppDispatch, RootState } from '../../app/store';\n\nimport { PROFILE_IMAGE_EMILY_ROSE28, PROFILE_IMAGE_OLIVER_MICKE } from '../feed/mocks';\n\nimport { Post, requestedPostsByIDs } from '../feed/feedSlice';\n\nconst SLICE_NAME = 'user';\n\ntype AsyncState = {\n  error: string | null;\n  loading: 'idle' | 'pending';\n};\n\nexport type Profile = {\n  cityName: string;\n  email: string;\n  firstName?: string;\n  lastName?: string;\n  postsCount: number;\n  postIDs: Post['postID'][];\n  rating: number;\n  username: string;\n  imageURL?: string;\n};\n\nexport type OtherProfile = {\n  cityName: string;\n  firstName?: string;\n  lastName?: string;\n  postsCount: number;\n  postIDs: Post['postID'][];\n  rating: number;\n  username: string;\n  imageURL?: string;\n};\n\ntype State = {\n  async: AsyncState;\n  isLoggedIn: boolean;\n  profile: {\n    async: AsyncState;\n    profile: Profile | null;\n  };\n  otherProfile: {\n    async: AsyncState;\n    profile: OtherProfile | null;\n  };\n};\n\ntype LoginBody = {\n  name: string;\n  password: string;\n};\n\ntype LoginSuccess = {\n  success: boolean;\n  token: string;\n};\n\ntype RegistrationBody = {\n  country: string;\n  email: string;\n  name: string;\n  password: string;\n};\n\ntype RegistrationSuccess = {\n  success: boolean;\n  token: string;\n};\n\ntype OpenedOtherProfileBody = {\n  username: string;\n};\n\ntype OpenedOtherProfileSuccess = OtherProfile;\n\nconst OPENED_OWN_PROFILE_PENDING = `${SLICE_NAME}/ownProfile/pending`;\nconst OPENED_OWN_PROFILE_FULFILLED = `${SLICE_NAME}/ownProfile/fulfilled`;\nconst OPENED_OWN_PROFILE_REJECTED = `${SLICE_NAME}/ownProfile/rejected`;\n\nconst MOCKED_OWN_PROFILE: Profile = {\n  cityName: 'Richmond',\n  email: 'foo@bar.com',\n  firstName: 'Oliver',\n  lastName: 'Micke',\n  postsCount: 4,\n  postIDs: [1, 3, 4, 5],\n  rating: 49,\n  username: 'olivermicke',\n  imageURL: PROFILE_IMAGE_OLIVER_MICKE,\n};\n\nconst MOCKED_OTHER_PROFILES: { [key: string]: OtherProfile } = {\n  emily_rose28: {\n    cityName: 'Richmond',\n    rating: 78,\n    postsCount: 2,\n    postIDs: [2, 6],\n    username: 'emily_rose28',\n    imageURL: PROFILE_IMAGE_EMILY_ROSE28,\n  },\n};\n\nexport const loggedIn = createAsyncThunk(`${SLICE_NAME}/loggedIn`, (body: LoginBody) =>\n  fetch<LoginSuccess>('/user/login', {\n    body: JSON.stringify(body),\n    method: 'POST',\n  }).then((data) => {\n    history.push('/feed' as AppRoutes);\n    return data;\n  }),\n);\n\nexport const registered = createAsyncThunk(`${SLICE_NAME}/registered`, (body: RegistrationBody) =>\n  fetch<RegistrationSuccess>('/user', {\n    body: JSON.stringify(body),\n    method: 'POST',\n  }).then((data) => {\n    history.push('/feed' as AppRoutes);\n    return data;\n  }),\n);\n\nexport const openedOtherProfile = createAsyncThunk(\n  `${SLICE_NAME}/openedOtherProfile`,\n  ({ username }: OpenedOtherProfileBody) => Promise.resolve(MOCKED_OTHER_PROFILES[username]),\n);\n\nexport const slice = createSlice({\n  name: SLICE_NAME,\n  initialState: {\n    async: {\n      error: null,\n      loading: 'idle',\n    },\n    // Preliminary\n    isLoggedIn: true,\n    profile: {\n      async: {\n        error: null,\n        loading: 'idle',\n      },\n      profile: MOCKED_OWN_PROFILE,\n    },\n    otherProfile: {\n      async: {\n        error: null,\n        loading: 'idle',\n      },\n      profile: null,\n    },\n  } as State,\n  reducers: {\n    loggedOut: (state): void => {\n      state.profile.profile = null;\n      state.isLoggedIn = false;\n    },\n  },\n  extraReducers: {\n    [loggedIn.pending.type]: (state): void => {\n      if (state.async.loading === 'idle') {\n        state.async.loading = 'pending';\n      }\n    },\n    [loggedIn.fulfilled.type]: (state, _action: PayloadAction<LoginSuccess>): void => {\n      if (state.async.loading === 'pending') {\n        state.async.loading = 'idle';\n        state.isLoggedIn = true;\n        // TODO: Receive profile data from BE\n        state.profile = {\n          async: {\n            error: null,\n            loading: 'idle',\n          },\n          profile: MOCKED_OWN_PROFILE,\n        };\n      }\n    },\n    [loggedIn.rejected.type]: (state, action: { error: Error }): void => {\n      if (state.async.loading === 'pending') {\n        state.async.loading = 'idle';\n        state.async.error = action.error.message;\n      }\n    },\n    [registered.pending.type]: (state): void => {\n      if (state.async.loading === 'idle') {\n        state.async.loading = 'pending';\n      }\n    },\n    [registered.fulfilled.type]: (state, _action: PayloadAction<RegistrationSuccess>): void => {\n      if (state.async.loading === 'pending') {\n        state.async.loading = 'idle';\n        state.isLoggedIn = true;\n        // TODO: Receive profile data from BE\n        state.profile.profile = MOCKED_OWN_PROFILE;\n      }\n    },\n    [registered.rejected.type]: (state, action: { error: Error }): void => {\n      if (state.async.loading === 'pending') {\n        state.async.loading = 'idle';\n        state.async.error = action.error.message;\n      }\n    },\n    [openedOtherProfile.pending.type]: (state): void => {\n      state.otherProfile.async.error = null;\n      state.otherProfile.async.loading = 'pending';\n    },\n    [openedOtherProfile.fulfilled.type]: (state, action: PayloadAction<OpenedOtherProfileSuccess>): void => {\n      state.otherProfile.async.loading = 'idle';\n      state.otherProfile.profile = action.payload;\n    },\n    [openedOtherProfile.rejected.type]: (state, action: { error: Error }): void => {\n      state.otherProfile.async.loading = 'idle';\n      state.otherProfile.async.error = action.error.message;\n    },\n    [OPENED_OWN_PROFILE_PENDING]: (state): void => {\n      state.profile.async.error = null;\n      state.profile.async.loading = 'pending';\n    },\n    [OPENED_OWN_PROFILE_FULFILLED]: (state, action: PayloadAction<{ profile: Profile }>): void => {\n      state.profile.async.loading = 'idle';\n      state.profile.profile = action.payload.profile;\n    },\n    [OPENED_OWN_PROFILE_REJECTED]: (state, action: { error: Error }): void => {\n      state.profile.async.loading = 'idle';\n      state.profile.async.error = action.error.message;\n    },\n  },\n});\n\nconst thunks = {\n  requestedPostsOfUser: function ({ isOwnProfile, userNameParam }: { isOwnProfile: boolean; userNameParam: string }) {\n    return (dispatch: AppDispatch, _getState: () => RootState): void => {\n      Promise.resolve({ profile: isOwnProfile ? MOCKED_OWN_PROFILE : MOCKED_OTHER_PROFILES[userNameParam] })\n        .then(({ profile }) => {\n          dispatch(requestedPostsByIDs(profile.postIDs));\n\n          dispatch({\n            type: OPENED_OWN_PROFILE_FULFILLED,\n            payload: {\n              profile,\n            },\n          });\n        })\n        .catch((error: Error) => {\n          dispatch({ error, type: OPENED_OWN_PROFILE_REJECTED });\n        });\n    };\n  },\n};\n\nexport const { loggedOut, requestedPostsOfUser } = { ...slice.actions, ...thunks };\n\nexport const selectAsync = (state: RootState): State['async'] =>\n  createSelector(\n    (state: RootState) => state.user.async,\n    (async) => async,\n  )(state);\n\nexport const selectIsLoggedIn = (state: RootState): State['isLoggedIn'] =>\n  createSelector(\n    (state: RootState) => state.user.isLoggedIn,\n    (isLoggedIn) => isLoggedIn,\n  )(state);\n\nexport const selectOtherProfile = (state: RootState): State['otherProfile'] =>\n  createSelector(\n    (state: RootState) => state.user.otherProfile,\n    (otherProfile) => otherProfile,\n  )(state);\n\nexport const selectOwnProfile = (state: RootState): State['profile'] =>\n  createSelector(\n    (state: RootState) => state.user.profile,\n    (profile) => profile,\n  )(state);\n\nexport const selectOwnUsername = (state: RootState): string | null =>\n  createSelector(\n    (state: RootState) => {\n      if (!state.user.profile || !state.user.profile.profile) {\n        return null;\n      }\n\n      return state.user.profile.profile.username;\n    },\n    (username) => username,\n  )(state);\n\nexport const userReducer = slice.reducer;\n","import { createAsyncThunk, createSelector, createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { RootState } from '../../app/store';\n\nimport { MOCKED_CATEGORIES, MOCKED_POSTS } from './mocks';\n\nimport { submitted, SubmitBody } from '../submit/submitSlice';\n\nconst SLICE_NAME = 'feed';\n\ntype AsyncState = {\n  error: string | null;\n  loading: 'idle' | 'pending';\n};\n\nexport type Category = 'news' | 'medical_supply' | 'grocery' | 'advice';\nexport type Comment = {\n  comment: string;\n  commentID: number;\n  date: number;\n  userImageURL: string | null;\n  username: string;\n};\n\nexport type Post = {\n  postID: number;\n  categories: Category[];\n  date: number;\n  imageURL: string | null;\n  rating: number | null;\n  text: string;\n  title: string;\n  userImageURL: string | null;\n  username: string;\n  comments: Comment[];\n};\n\nexport type Posts = { [key in Post['postID']]: Post };\n\nexport type Categories = { [key in Category]: { async: AsyncState; postIDs: number[] | null } };\n\ntype State = {\n  categories: Categories;\n  posts: {\n    [key in Post['postID']]: {\n      async: AsyncState;\n      post: Post | null;\n    };\n  };\n};\n\nexport const loadRequested = createAsyncThunk(`${SLICE_NAME}/loadRequested`, (category: Category) =>\n  Promise.resolve({ posts: MOCKED_CATEGORIES[category] }),\n);\n\nexport const postRequested = createAsyncThunk(`${SLICE_NAME}/postRequested`, (postID: Post['postID']) =>\n  Promise.resolve({ post: MOCKED_POSTS[postID] }),\n);\n\nexport const requestedPostsByIDs = createAsyncThunk(`${SLICE_NAME}/requestedPostsByIDs`, (postIDs: Post['postID'][]) =>\n  Promise.resolve({\n    posts: postIDs.reduce(\n      (acc, postID) => ({\n        ...acc,\n        [postID]: MOCKED_POSTS[postID],\n      }),\n      {},\n    ),\n  }),\n);\n\nconst initialState: State = {\n  categories: {\n    advice: {\n      async: { error: null, loading: 'idle' },\n      postIDs: null,\n    },\n    grocery: {\n      async: { error: null, loading: 'idle' },\n      postIDs: null,\n    },\n    medical_supply: {\n      async: { error: null, loading: 'idle' },\n      postIDs: null,\n    },\n    news: {\n      async: { error: null, loading: 'idle' },\n      postIDs: null,\n    },\n  },\n  posts: {},\n};\n\nexport const slice = createSlice({\n  name: SLICE_NAME,\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [submitted.fulfilled.type]: (state, action: any): void => {\n      const body: SubmitBody = action.meta.arg;\n      const post: Post = {\n        categories: body.categories,\n        comments: body.comments,\n        date: +new Date(),\n        imageURL: body.image,\n        postID: Object.values(state.posts)?.length + 1 ?? 1,\n        rating: null,\n        text: body.text,\n        title: body.title,\n        userImageURL: body.userImageURL,\n        username: body.username || '',\n      };\n\n      state.posts[post.postID] = {\n        async: { error: null, loading: 'idle' },\n        post,\n      };\n      post.categories.forEach((category) => {\n        const c = state.categories[category];\n        if (c.postIDs) {\n          c.postIDs.push(post.postID);\n        } else {\n          c.postIDs = [post.postID];\n        }\n      });\n    },\n    [loadRequested.pending.type]: (state, action): void => {\n      // @ts-ignore\n      const category: Category = action.meta.arg;\n\n      const async = state.categories[category].async;\n      async.loading = 'pending';\n    },\n    [loadRequested.fulfilled.type]: (state, action: PayloadAction<{ posts: Posts }>): void => {\n      // @ts-ignore\n      const categoryArg: Category = action.meta.arg;\n      const category = state.categories[categoryArg];\n\n      category.async.error = null;\n      category.async.loading = 'idle';\n      category.postIDs = Object.values(action.payload.posts).map((post) => post.postID);\n\n      const normalizedPosts = Object.values(action.payload.posts).reduce(\n        (acc, post) => ({\n          ...acc,\n          [post.postID]: {\n            async: {\n              error: null,\n              loading: 'idle',\n            },\n            post,\n          },\n        }),\n        {},\n      );\n\n      Object.assign(state.posts, normalizedPosts);\n    },\n    [loadRequested.rejected.type]: (state, action: { error: Error }): void => {\n      // @ts-ignore\n      const category: Category = action.meta.arg;\n\n      const async = state.categories[category].async;\n      async.loading = 'idle';\n      async.error = action.error.message;\n    },\n    [postRequested.pending.type]: (state, action): void => {\n      // @ts-ignore\n      const postID: Post['postID'] = action.meta.arg;\n\n      const post = state.posts[postID] ?? { async: {} };\n      post.async.loading = 'pending';\n      state.posts[postID] = post;\n    },\n    [postRequested.fulfilled.type]: (state, action: PayloadAction<{ post: Post }>): void => {\n      // @ts-ignore\n      const postID: Post['postID'] = action.meta.arg;\n      const post = state.posts[postID];\n\n      post.async.error = null;\n      post.async.loading = 'idle';\n\n      post.post = action.payload.post;\n    },\n    [postRequested.rejected.type]: (state, action: { error: Error }): void => {\n      // @ts-ignore\n      const postID: Post['postID'] = action.meta.arg;\n\n      const post = state.posts[postID] ?? {};\n      post.async = {\n        error: action.error.message,\n        loading: 'idle',\n      };\n      post.post = null;\n      state.posts[postID] = post;\n    },\n    // eslint-disable-next-line\n    [requestedPostsByIDs.pending.type]: (_state, _action): void => {},\n    [requestedPostsByIDs.fulfilled.type]: (state, action: PayloadAction<{ posts: Posts }>): void => {\n      // NOTE: Copied from above. Refactor.\n\n      const normalizedPosts = Object.values(action.payload.posts).reduce(\n        (acc, post) => ({\n          ...acc,\n          [post.postID]: {\n            async: {\n              error: null,\n              loading: 'idle',\n            },\n            post,\n          },\n        }),\n        {},\n      );\n\n      Object.assign(state.posts, normalizedPosts);\n    },\n    // eslint-disable-next-line\n    [requestedPostsByIDs.rejected.type]: (_state, _action: { error: Error }): void => {},\n  },\n});\n\nexport const selectPostByID = (state: RootState, postID: number): State['posts'][Post['postID']] | null =>\n  createSelector(\n    (state: RootState) => state.feed.posts[postID] ?? null,\n    (post) => post,\n  )(state);\n\nexport const selectPostsByIDs = (state: RootState, postIDs: number[]): State['posts'] =>\n  createSelector(\n    (state: RootState) =>\n      postIDs\n        .map((postID) => state.feed.posts[postID] ?? null)\n        .filter(Boolean)\n        .reduce(\n          (acc, post) => ({\n            ...acc,\n            [post.post?.postID as number]: post,\n          }),\n          {},\n        ),\n    (post) => post,\n  )(state);\n\nexport const selectPostsByCategory = (\n  state: RootState,\n  category: Category,\n): {\n  async: AsyncState;\n  posts: Posts | null;\n} =>\n  createSelector(\n    (state: RootState) => {\n      const postIDs = state.feed.categories[category].postIDs;\n\n      const posts =\n        postIDs === null\n          ? null\n          : Object.values(state.feed.posts).reduce((posts: Posts, { post }) => {\n              if (post === null || !postIDs.includes(post.postID)) {\n                return posts;\n              }\n\n              return {\n                ...posts,\n                [post.postID]: post,\n              };\n            }, {});\n\n      return {\n        async: state.feed.categories[category].async,\n        posts,\n      };\n    },\n    (categoryState) => categoryState,\n  )(state);\n\nexport const feedReducer = slice.reducer;\n","import React from 'react';\nimport { MdAdd, MdHome, MdPerson } from 'react-icons/md';\nimport { IoMdEye, IoMdEyeOff } from 'react-icons/io';\nimport { BoxProps, DefaultTheme, theme as chakraTheme } from '@chakra-ui/core';\n\nexport const responsiveBoxProps: BoxProps = {\n  marginTop: [4, 4, 8],\n  marginX: 'auto',\n  width: [\n    '80%', // base\n    '90%', // 480px upwards\n    '90%', // 768px upwards\n    '80%', // 992px upwards\n    '70%',\n  ],\n};\n\nexport type ThemeType = DefaultTheme & {\n  icons: DefaultTheme['icons'];\n};\n\nconst VIEW_BOX = '0 0 16 16';\n\nexport const theme: ThemeType = {\n  ...chakraTheme,\n  icons: {\n    ...chakraTheme.icons,\n    ioMdEye: {\n      path: <IoMdEye />,\n      viewBox: VIEW_BOX,\n    },\n    ioMdEyeOff: {\n      path: <IoMdEyeOff />,\n      viewBox: VIEW_BOX,\n    },\n    mdAdd: {\n      path: <MdAdd />,\n      viewBox: VIEW_BOX,\n    },\n    mdHome: {\n      path: <MdHome />,\n      viewBox: VIEW_BOX,\n    },\n    mdPerson: {\n      path: <MdPerson />,\n      viewBox: VIEW_BOX,\n    },\n  },\n};\n","import { createHashHistory } from 'history';\n\nexport const ROUTER_BASENAME = '/';\n\nexport const history = createHashHistory({ basename: ROUTER_BASENAME });\n\nexport type AppRoutes =\n  | '/'\n  | '/account'\n  | '/account/login'\n  | '/account/register'\n  | '/account/reset-password'\n  | '/feed'\n  | '/profile'\n  | '/profile/me'\n  | '/submit';\n","import { Category, Post } from './feedSlice';\n\nexport const PROFILE_IMAGE_OLIVER_MICKE = process.env.PUBLIC_URL + '/img/oliver-micke.jpg';\nexport const PROFILE_IMAGE_EMILY_ROSE28 =\n  'https://images.unsplash.com/photo-1508214751196-bcfd4ca60f91?ixlib=rb-1.2.1&auto=format&fit=crop&w=300&q=60';\n\n// https://stackoverflow.com/questions/9035627/elegant-method-to-generate-array-of-random-dates-within-two-dates/9035732#9035732\nconst generateRandomDate = (start = new Date(Date.now() - 100000000), end = new Date()): number =>\n  +new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\n\nconst generateRandomCommentDate = (): number => generateRandomDate(new Date(Date.now() - 1000000));\n\nexport const MOCKED_POSTS: { [postID in Post['postID']]: Post } = {\n  1: {\n    categories: ['news'] as Category[],\n    date: generateRandomDate(),\n    postID: 1,\n    rating: 23,\n    text: 'VCU Developed CODVID-19 test',\n    title: 'VCU Developed CODVID-19 test',\n    username: 'olivermicke',\n    imageURL:\n      'https://images.unsplash.com/photo-1511174511562-5f7f18b874f8?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=300&q=80',\n    userImageURL: PROFILE_IMAGE_OLIVER_MICKE,\n    comments: [],\n  },\n  2: {\n    categories: ['grocery'] as Category[],\n    date: generateRandomDate(),\n    postID: 2,\n    rating: 72,\n    text:\n      'We will have a limited supply of toilet paper at Target on Broad street for the next days – source: I work there.',\n    title: 'Limited supply of toilet paper at Target on Broad street',\n    username: 'emily_rose28',\n    imageURL:\n      'https://images.unsplash.com/photo-1584556812952-905ffd0c611a?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=300&q=80',\n    userImageURL: PROFILE_IMAGE_EMILY_ROSE28,\n    comments: [\n      {\n        comment: 'do you know when can the next delivery be expected?',\n        commentID: 104,\n        date: generateRandomCommentDate(),\n        userImageURL: PROFILE_IMAGE_OLIVER_MICKE,\n        username: 'olivermicke',\n      },\n    ],\n  },\n  3: {\n    categories: ['news', 'medical_supply'] as Category[],\n    comments: [\n      {\n        comment: 'Only one box left when I was there at 11',\n        commentID: 101,\n        date: generateRandomCommentDate(),\n        userImageURL: PROFILE_IMAGE_EMILY_ROSE28,\n        username: 'emily_rose28',\n      },\n    ],\n    date: generateRandomDate(),\n    postID: 3,\n    rating: 74,\n    text:\n      'Found some N95 masks available in the home depot in Henrico. I saw at least 3 boxes when I was there at around 9:30 AM',\n    title: 'N95 masks available again in Home Depot in Henrico',\n    username: 'olivermicke',\n    imageURL:\n      'https://images.unsplash.com/photo-1584462198614-03c2a523945d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=300&q=80',\n    userImageURL: PROFILE_IMAGE_OLIVER_MICKE,\n  },\n  4: {\n    categories: ['advice'] as Category[],\n    date: generateRandomDate(),\n    postID: 4,\n    rating: 44,\n    text: \"Especially in areas with community-spread, it's recommended to wear face masks whenever possible.\",\n    title: 'CDC recommends to wear face masks',\n    username: 'olivermicke',\n    imageURL:\n      'https://images.unsplash.com/photo-1582795003154-35736cf26353?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=300&q=80',\n    userImageURL: PROFILE_IMAGE_OLIVER_MICKE,\n    comments: [\n      {\n        comment: \"In case you don't have masks yet, home depot in henrico has got some available\",\n        commentID: 102,\n        date: generateRandomCommentDate(),\n        userImageURL: PROFILE_IMAGE_EMILY_ROSE28,\n        username: 'emily_rose28',\n      },\n    ],\n  },\n  5: {\n    categories: ['news', 'grocery'] as Category[],\n    date: generateRandomDate(),\n    postID: 5,\n    rating: 54,\n    text:\n      'A friend of mine just told me that toilet paper production was ramped up to keep up with the incresed demand.',\n    title: 'Toilet paper production ramping up',\n    username: 'olivermicke',\n    imageURL:\n      'https://images.unsplash.com/photo-1583541988180-fdf816b632e6?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=300&q=80',\n    userImageURL: PROFILE_IMAGE_OLIVER_MICKE,\n    comments: [\n      {\n        comment: \"That's great to hear because I work at Target at broad street and we are running out of supplies\",\n        commentID: 106,\n        date: generateRandomCommentDate(),\n        userImageURL: PROFILE_IMAGE_EMILY_ROSE28,\n        username: 'emily_rose28',\n      },\n    ],\n  },\n  6: {\n    categories: ['news'] as Category[],\n    comments: [],\n    date: generateRandomDate(),\n    postID: 6,\n    rating: 84,\n    text: 'Service disconnection has just been suspended!',\n    title: 'Service disconnection has been suspended',\n    username: 'emily_rose28',\n    imageURL:\n      'https://images.unsplash.com/uploads/141086319550951a179e1/a07e0918?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=300&q=80',\n    userImageURL: PROFILE_IMAGE_EMILY_ROSE28,\n  },\n};\n\nexport const MOCKED_CATEGORIES: { [category in Category]: { [postID in Post['postID']]: Post } } = {\n  news: {\n    1: MOCKED_POSTS[1],\n    3: MOCKED_POSTS[3],\n    5: MOCKED_POSTS[5],\n    6: MOCKED_POSTS[6],\n  },\n  medical_supply: {\n    3: MOCKED_POSTS[3],\n  },\n  grocery: {\n    2: MOCKED_POSTS[2],\n    5: MOCKED_POSTS[5],\n  },\n  advice: {\n    4: MOCKED_POSTS[4],\n  },\n};\n","import React, { FC } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Avatar, BoxProps, Link as ChakraLink, Text } from '@chakra-ui/core';\n\nimport { AppRoutes } from '../app/router';\nimport { Post } from '../features/feed/feedSlice';\n\ntype Props = {\n  style?: BoxProps;\n  userImageURL: Post['userImageURL'];\n  username: Post['username'];\n};\n\n// TS workaround\nconst Link: any = ChakraLink;\n\nexport const Author: FC<Props> = ({ style, userImageURL, username }: Props) => {\n  const profilePath = ('/profile' as AppRoutes) + `/${username}`;\n\n  return (\n    <Link as={RouterLink} to={profilePath} style={style}>\n      {userImageURL && <Avatar marginRight={2} name={username} size='xs' src={userImageURL ?? ''} />}\n      <Text as='span' color='blue.500' fontSize='sm'>\n        {username}\n      </Text>\n    </Link>\n  );\n};\n","import React, { FC } from 'react';\n\ntype Props = {\n  date: Date;\n};\n\n// https://stackoverflow.com/questions/3177836/how-to-format-time-since-xxx-e-g-4-minutes-ago-similar-to-stack-exchange-site/23259289#23259289\nconst timeSince = (date: Date): string => {\n  if (typeof date !== 'object') {\n    date = new Date(date);\n  }\n\n  // @ts-ignore\n  const seconds = Math.floor((new Date() - date) / 1000);\n  let intervalType;\n\n  let interval = Math.floor(seconds / 31536000);\n  if (interval >= 1) {\n    intervalType = 'year';\n  } else {\n    interval = Math.floor(seconds / 2592000);\n    if (interval >= 1) {\n      intervalType = 'month';\n    } else {\n      interval = Math.floor(seconds / 86400);\n      if (interval >= 1) {\n        intervalType = 'day';\n      } else {\n        interval = Math.floor(seconds / 3600);\n        if (interval >= 1) {\n          intervalType = 'hour';\n        } else {\n          interval = Math.floor(seconds / 60);\n          if (interval >= 1) {\n            intervalType = 'minute';\n          } else {\n            interval = seconds;\n            intervalType = 'second';\n          }\n        }\n      }\n    }\n  }\n\n  if (interval > 1 || interval === 0) {\n    intervalType += 's';\n  }\n\n  return interval + ' ' + intervalType;\n};\n\nexport const TimeAgo: FC<Props> = ({ date }: Props) => <>{timeSince(date)} ago</>;\n","import React, { FC } from 'react';\nimport { Box, BoxProps, Divider, Text } from '@chakra-ui/core';\n\nimport { Author } from '../../components/Author';\nimport { TimeAgo } from '../../components/TimeAgo';\n\nimport { Post as PostType } from './feedSlice';\n\ntype Props = {\n  date: PostType['date'];\n  userImageURL: PostType['userImageURL'];\n  username: PostType['username'];\n  style?: BoxProps;\n};\n\nexport const PostInfo: FC<Props> = ({ date, userImageURL, username, style }: Props) => (\n  <Box alignItems='center' display='flex' marginTop={2} {...style}>\n    <Text alignItems='center' as='span' color='gray.500' display='flex' fontSize='sm' fontWeight='normal' height='100%'>\n      <TimeAgo date={new Date(date)} />\n    </Text>\n    <Divider borderColor='gray.300' height='24px' orientation='vertical' />\n    <Author\n      style={{\n        alignItems: 'center',\n        display: 'flex',\n        height: '100%',\n      }}\n      userImageURL={userImageURL}\n      username={username}\n    />\n  </Box>\n);\n","import { createAsyncThunk, createSelector, createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { AppRoutes, history } from '../../app/router';\nimport { RootState } from '../../app/store';\nimport { Category, Comment } from '../feed/feedSlice';\n\nconst SLICE_NAME = 'submit';\n\ntype AsyncState = {\n  error: string | null;\n  loading: 'idle' | 'pending';\n};\n\ntype State = {\n  async: AsyncState;\n};\n\nexport type SubmitBody = {\n  categories: Category[];\n  comments: Comment[];\n  image: string | null;\n  text: string;\n  title: string;\n  username: string | null;\n  userImageURL: string | null;\n};\n\ntype SubmitSuccess = {\n  success: boolean;\n};\n\nexport const submitted = createAsyncThunk(`${SLICE_NAME}/submitted`, (_body: SubmitBody) => {\n  history.push('/' as AppRoutes);\n});\n\nexport const slice = createSlice({\n  name: SLICE_NAME,\n  initialState: {\n    async: {\n      error: null,\n      loading: 'idle',\n    },\n  } as State,\n  reducers: {},\n  extraReducers: {\n    [submitted.pending.type]: (state): void => {\n      if (state.async.loading === 'idle') {\n        state.async.loading = 'pending';\n      }\n    },\n    [submitted.fulfilled.type]: (state, _action: PayloadAction<SubmitSuccess>): void => {\n      if (state.async.loading === 'pending') {\n        state.async.loading = 'idle';\n      }\n    },\n    [submitted.rejected.type]: (state, action: { error: Error }): void => {\n      if (state.async.loading === 'pending') {\n        state.async.loading = 'idle';\n        state.async.error = action.error.message;\n      }\n    },\n  },\n});\n\nexport const selectAsync = (state: RootState): State['async'] =>\n  createSelector(\n    (state: RootState) => state.submit.async,\n    (async) => async,\n  )(state);\n\nexport const submitReducer = slice.reducer;\n","import React, { FC } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Box, Button, Image, PseudoBox, Link } from '@chakra-ui/core';\n\nimport { PostInfo } from './PostInfo';\n\nimport { Rating } from '../../components/Rating';\n\nimport { Post as PostType } from './feedSlice';\n\ntype Props = {\n  detailViewRedirectToProfile?: boolean;\n} & PostType;\n\nconst paddingProps = { padding: 2 };\n\nconst BORDER_RADIUS = 8;\n\nexport const FALLBACK_IMAGE_URL =\n  'https://images.unsplash.com/photo-1584118624012-df056829fbd0?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=300&q=60';\n\nexport const Post: FC<Props> = ({\n  date,\n  detailViewRedirectToProfile,\n  imageURL,\n  postID,\n  rating,\n  title,\n  userImageURL,\n  username,\n}: Props) => {\n  const linkToDetailView = `/feed/detail/${postID}${detailViewRedirectToProfile ? `?redirect=profile` : ''}`;\n\n  return (\n    <>\n      <Box\n        boxShadow='0px 8px 12px rgba(42, 52, 61, 0.16078431372549)'\n        borderRadius={BORDER_RADIUS}\n        maxWidth={['initial', 'initial', 350]}\n      >\n        {/*\n        // @ts-ignore */}\n        <Link as={RouterLink} to={linkToDetailView}>\n          <Box height={128} position='relative'>\n            <PseudoBox\n              {...paddingProps}\n              background='#ffffffdd'\n              // @ts-ignore\n              borderTopRightRadius={BORDER_RADIUS}\n              bottom={0}\n              _hover={{\n                textDecoration: 'underline',\n              }}\n              position='absolute'\n              width='80%'\n            >\n              {title}\n            </PseudoBox>\n\n            <Image\n              alt='post background image'\n              // @ts-ignore\n              borderTopLeftRadius={BORDER_RADIUS}\n              // @ts-ignore\n              borderTopRightRadius={BORDER_RADIUS}\n              height='100%'\n              objectFit='cover'\n              src={imageURL ?? FALLBACK_IMAGE_URL}\n              width='100%'\n            />\n          </Box>\n        </Link>\n\n        <PostInfo date={date} userImageURL={userImageURL} username={username} style={paddingProps} />\n\n        <Box {...paddingProps} alignItems='center' display='flex'>\n          <Rating rating={rating} shouldShowDescription={false} />\n          <Button\n            as={RouterLink}\n            marginLeft={6}\n            // @ts-ignore\n            to={linkToDetailView}\n            variant='outline'\n            variantColor='blue'\n          >\n            Verify\n          </Button>\n        </Box>\n      </Box>\n    </>\n  );\n};\n","import React, { FC } from 'react';\nimport { Box, BoxProps, CircularProgress, CircularProgressLabel, Text } from '@chakra-ui/core';\n\nimport { Post } from '../features/feed/feedSlice';\n\nconst NOT_CONFIDENT = 'Based on information gathered, we do not have enough information to be confident of this data.';\nconst CONFIDENT = 'Based on information gathered, we are confident of this data.';\n\nconst colorForRating = (rating: Post['rating']): string => {\n  if (rating === null || rating < 40) {\n    return 'gray';\n  }\n\n  if (rating >= 40 && rating <= 70) {\n    return 'yellow';\n  }\n\n  return 'green';\n};\n\nconst descriptionForRating = (rating: Post['rating']): string => {\n  if (rating === null || rating < 40) {\n    return NOT_CONFIDENT;\n  }\n\n  if (rating >= 40 && rating <= 70) {\n    return NOT_CONFIDENT;\n  }\n\n  return CONFIDENT;\n};\n\ntype Props = { boxProps?: BoxProps; labelProps?: BoxProps; rating: Post['rating']; shouldShowDescription: boolean };\n\nexport const Rating: FC<Props> = ({ boxProps, labelProps, rating, shouldShowDescription }: Props) => {\n  const color = colorForRating(rating);\n\n  const circularRating = (\n    <CircularProgress\n      aria-label='reliability score of post'\n      color={color}\n      style={boxProps}\n      trackColor={color}\n      value={rating ?? 100}\n    >\n      <CircularProgressLabel style={labelProps}>{rating ?? '?'}</CircularProgressLabel>\n    </CircularProgress>\n  );\n\n  if (!shouldShowDescription) {\n    return circularRating;\n  }\n\n  return (\n    <Box display='flex' flex={1}>\n      <Box flex={3} marginRight={4}>\n        <Text as='h3' color='gray.700' fontWeight='semibold' marginBottom={1}>\n          Confidence score:\n        </Text>\n        <Text>{descriptionForRating(rating)}</Text>\n      </Box>\n      <Box flex={1}>{circularRating}</Box>\n    </Box>\n  );\n};\n","import React, { FC } from 'react';\nimport { Box, Text } from '@chakra-ui/core';\n\nimport { PostInfo } from './PostInfo';\n\nimport { Comment as CommentType } from './feedSlice';\n\ntype Props = {} & CommentType;\n\nexport const Comment: FC<Props> = ({ comment, date, userImageURL, username }: Props) => (\n  <Box borderWidth='1px' marginBottom={6} padding={4} shadow='md'>\n    <Text fontSize='sm'>{comment}</Text>\n    <PostInfo date={date} userImageURL={userImageURL} username={username} />\n  </Box>\n);\n","import React, { FC, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link as RouterLink, RouteComponentProps, useHistory } from 'react-router-dom';\nimport {\n  Box,\n  Button,\n  Drawer,\n  DrawerBody,\n  DrawerCloseButton,\n  DrawerContent,\n  DrawerFooter,\n  DrawerHeader,\n  DrawerOverlay,\n  Image,\n  Input,\n  Link as ChakraLink,\n  Tag,\n  Text,\n  useToast,\n} from '@chakra-ui/core';\n\nimport { Comment } from './Comment';\nimport { PostInfo } from './PostInfo';\n\nimport { Rating } from '../../components/Rating';\n\nimport { Category, postRequested, selectPostByID } from './feedSlice';\nimport { selectOwnProfile } from '../user/userSlice';\n\nimport { RootState } from '../../app/store';\n\nimport { FALLBACK_IMAGE_URL } from './Post';\n\ntype Props = {\n  previousPathname?: string;\n} & RouteComponentProps<{ postID: string }>;\n\nexport const CATEGORY_NAMES: { [key in Category]: string } = {\n  news: 'News',\n  medical_supply: 'Medical Supply',\n  grocery: 'Grocery',\n  advice: 'Advice',\n};\n\nconst CATEGORY_LINKS: { [key in Category]: string } = {\n  advice: '/feed/advice',\n  grocery: '/feed/grocery',\n  medical_supply: '/feed/medical-supply',\n  news: '/feed/news',\n};\n\nconst Link: any = ChakraLink;\n\n// https://stackoverflow.com/questions/9038625/detect-if-device-is-ios/58065241#58065241\nconst isIOS =\n  (/iPad|iPhone|iPod/.test(navigator.platform) ||\n    (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1)) &&\n  !window.MSStream;\n\nexport const DetailView: FC<Props> = ({ match, previousPathname }: Props) => {\n  const dispatch = useDispatch();\n\n  const history = useHistory();\n\n  const toast = useToast();\n  const ownProfile = useSelector(selectOwnProfile).profile ?? null;\n\n  const postID: string | null = match.params.postID ?? null;\n\n  const post = useSelector((state: RootState) => selectPostByID(state, parseInt(postID)));\n\n  useEffect(() => {\n    if (post === null) {\n      dispatch(postRequested(+postID));\n    }\n  }, [dispatch, post, postID]);\n\n  if (post?.async.error) {\n    return <>TODO: Error state</>;\n  }\n\n  if (post === null || !post.post) {\n    return <>TODO: Null state</>;\n  }\n\n  const { categories, comments, date, imageURL, rating, text, title, userImageURL, username } = post.post;\n\n  const onClose = (): void => {\n    const nextPath = previousPathname ?? '/';\n    history.push(nextPath);\n  };\n\n  const onComment = (): void => {\n    toast({\n      title: 'Comment not submitted',\n      description: 'Submitting commments is not yet supported in this demo.',\n      status: 'info',\n      duration: 7000,\n      isClosable: true,\n    });\n  };\n\n  const footerContent = (\n    <>\n      <Button\n        onClick={(): void => {\n          onVote();\n          onClose();\n        }}\n        variant='ghost'\n        variantColor='blue'\n      >\n        Disconfirm\n      </Button>\n      <Button\n        marginLeft={4}\n        onClick={(): void => {\n          onVote();\n          onClose();\n        }}\n        variantColor='blue'\n      >\n        Confirm\n      </Button>\n    </>\n  );\n\n  const onVote = (): void => {\n    toast({\n      title: 'Vote saved.',\n      description: `Thank you for making ${\n        ownProfile?.cityName ? `content in ${ownProfile.cityName}` : 'local content'\n      } more reliable.`,\n      status: 'success',\n      duration: 7000,\n      isClosable: true,\n    });\n  };\n\n  return (\n    <>\n      <Drawer onClose={onClose} isFullHeight scrollBehavior='inside' placement='top' isOpen>\n        <DrawerOverlay />\n        <DrawerContent>\n          <DrawerCloseButton aria-label='return to feed' />\n          <DrawerHeader margin={['inherit', 'inherit', '0 auto']} width={['initial', 'initial', 1000]}>\n            <Text as='h2'>{title}</Text>\n\n            <Box\n              marginTop={2}\n              onClick={(event): void => {\n                // Prevent Drawer#onClose from being called so history#push isn't called.\n                event.stopPropagation();\n              }}\n            >\n              {categories.map((category: Category) => (\n                <Link as={RouterLink} key={category} to={CATEGORY_LINKS[category]}>\n                  <Tag marginRight={2} size='sm'>\n                    {CATEGORY_NAMES[category]}\n                  </Tag>\n                </Link>\n              ))}\n            </Box>\n\n            <div\n              // eslint-disable-next-line\n              onClick={(event): void => {\n                // Prevent Drawer#onClose from being called so history#push isn't called.\n                event.stopPropagation();\n              }}\n              role='presentation'\n            >\n              <PostInfo date={date} style={{ marginTop: 4 }} userImageURL={userImageURL} username={username} />\n            </div>\n          </DrawerHeader>\n\n          <DrawerBody margin='0 auto' maxWidth='1000px' width={['initial', 'initial', 1000]}>\n            <Image alt='post image' maxHeight={150} src={imageURL ?? FALLBACK_IMAGE_URL} />\n            <Box marginTop={8}>\n              <Text>{text}</Text>\n            </Box>\n            <Box display='flex' marginTop={[8, 8, 10]}>\n              <Rating\n                boxProps={{\n                  height: '100%',\n                  width: '100%',\n                  maxWidth: 70,\n                  maxHeight: 70,\n                }}\n                labelProps={{\n                  fontSize: '16px',\n                }}\n                rating={rating}\n                shouldShowDescription\n              />\n            </Box>\n            <Box marginTop={[8, 8, 10]}>\n              <Text as='h3' color='gray.700' fontWeight='semibold' marginBottom={1}>\n                Comments\n              </Text>\n              <div\n                // eslint-disable-next-line\n                onClick={(event): void => {\n                  // Prevent Drawer#onClose from being called so history#push isn't called.\n                  event.stopPropagation();\n                }}\n                role='presentation'\n              >\n                <Box marginTop={4}>\n                  {comments.length > 0 ? (\n                    comments\n                      .slice()\n                      .sort((commentA, commentB) => (commentA.date > commentB.date ? -1 : 1))\n                      .map((comment) => <Comment key={comment.commentID} {...comment} />)\n                  ) : (\n                    <Text fontSize='sm'>No comments</Text>\n                  )}\n                </Box>\n                <Box display='flex' marginTop={4}>\n                  <Box marginRight={4} width={['80%', '80%', '40%']}>\n                    <Input\n                      aria-label='comment on this post'\n                      variant='flushed'\n                      rounded={4}\n                      placeholder='Share with your neighbors'\n                      size='sm'\n                    />\n                  </Box>\n                  <Button\n                    onClick={() => {\n                      onComment();\n                    }}\n                    size='sm'\n                    variant='ghost'\n                  >\n                    Comment\n                  </Button>\n                </Box>\n              </div>\n            </Box>\n            {isIOS && (\n              <Box display='flex' justifyContent='flex-end' marginTop={8} marginBottom={16}>\n                {footerContent}\n              </Box>\n            )}\n          </DrawerBody>\n\n          <DrawerFooter\n            maxWidth='1000px'\n            width={['initial', 'initial', 1000]}\n            margin={['initial', 'initial', '0 auto']}\n          >\n            {!isIOS && footerContent}\n          </DrawerFooter>\n        </DrawerContent>\n      </Drawer>\n    </>\n  );\n};\n"],"sourceRoot":""}