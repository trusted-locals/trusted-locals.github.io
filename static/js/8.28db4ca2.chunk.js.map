{"version":3,"sources":["features/user/Profile.tsx"],"names":["Profile","dispatch","useDispatch","ownUsername","useSelector","selectOwnUsername","history","useHistory","userNameParam","location","pathname","split","isOwnProfile","profileSelector","selectOwnProfile","selectOtherProfile","profile","useEffect","openedOtherProfile","username","responsiveBoxProps","alignItems","display","flexDirection","marginTop","size","name","src","imageURL","color","fontWeight","firstName","lastName","cityName","justifyContent","marginRight","textAlign","postsCount","rating","borderColor"],"mappings":"0IAAA,6IAgBaA,EAAkB,WAAO,IAAD,EAC7BC,EAAWC,cAEXC,EAA6BC,YAAYC,KAEzCC,EAAUC,cAEVC,EAAoCF,EAAQG,SAASC,SAASC,MAAM,aAAa,GACjFC,EAAeT,IAAgBK,GAAmC,OAAlBA,EAEhDK,EAAkBD,EAAeE,IAAmBC,IACpDC,EAAUZ,YAAYS,GAQ5B,OANAI,qBAAU,WACHD,GACHf,EAASiB,YAAmB,CAAEC,SAAUX,OAEzC,CAACP,EAAUe,EAASR,IAElBQ,EAMH,kBAAC,IAAQI,IACP,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,WAAW,SAASC,QAAQ,OAAOC,cAAc,SAASC,UAAW,GACxE,kBAAC,IAAD,CAAQC,KAAK,KAAKC,KAAMV,EAAQG,SAAUQ,IAAG,UAAEX,EAAQY,gBAAV,QAAsB,KACnE,kBAAC,IAAD,CAAMC,MAAM,WAAWC,WAAW,WAAWN,UAAW,GACrDR,EAAQe,UAAR,UAAuBf,EAAQe,UAA/B,YAA4Cf,EAAQgB,UAAahB,EAAQG,UAE5E,kBAAC,IAAD,CAAMU,MAAM,YAAYb,EAAQiB,WAElC,kBAAC,IAAD,CAAKJ,MAAM,WAAWP,QAAQ,OAAOY,eAAe,SAASV,UAAW,GACtE,kBAAC,IAAD,CAAKW,YAAa,GAChB,kBAAC,IAAD,CAAMC,UAAU,UAAUpB,EAAQqB,YAClC,kBAAC,IAAD,eAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMD,UAAU,UAAUpB,EAAQsB,OAAlC,KACA,kBAAC,IAAD,kBAIN,kBAAC,IAAD,CAASC,YAAY,aAGpB3B,IAAgB,GA3BZ","file":"static/js/8.28db4ca2.chunk.js","sourcesContent":["import React, { FC, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { Avatar, Box, Button, Divider, Text } from '@chakra-ui/core';\n\nimport {\n  LOCAL_STORAGE_AUTH_TOKEN_KEY,\n  loggedOut,\n  openedOtherProfile,\n  selectOtherProfile,\n  selectOwnProfile,\n  selectOwnUsername,\n} from './userSlice';\n\nimport { responsiveBoxProps } from '../../app/styles';\n\nexport const Profile: FC<{}> = () => {\n  const dispatch = useDispatch();\n\n  const ownUsername: string | null = useSelector(selectOwnUsername);\n\n  const history = useHistory();\n  // TODO: Refactor\n  const userNameParam: string | undefined = history.location.pathname.split('/profile/')[1];\n  const isOwnProfile = ownUsername === userNameParam || userNameParam === 'me';\n\n  const profileSelector = isOwnProfile ? selectOwnProfile : selectOtherProfile;\n  const profile = useSelector(profileSelector);\n\n  useEffect(() => {\n    if (!profile) {\n      dispatch(openedOtherProfile({ username: userNameParam }));\n    }\n  }, [dispatch, profile, userNameParam]);\n\n  if (!profile) {\n    // TODO: Fetch profile.\n    return <h3>Should fetch data here. Will do that later.</h3>;\n  }\n\n  return (\n    <Box {...responsiveBoxProps}>\n      <Box>\n        <Box alignItems='center' display='flex' flexDirection='column' marginTop={8}>\n          <Avatar size='lg' name={profile.username} src={profile.imageURL ?? ''} />\n          <Text color='gray.600' fontWeight='semibold' marginTop={2}>\n            {profile.firstName ? `${profile.firstName} ${profile.lastName}` : profile.username}\n          </Text>\n          <Text color='gray.500'>{profile.cityName}</Text>\n        </Box>\n        <Box color='gray.500' display='flex' justifyContent='center' marginTop={4}>\n          <Box marginRight={6}>\n            <Text textAlign='center'>{profile.postsCount}</Text>\n            <Text>Posts</Text>\n          </Box>\n          <Box>\n            <Text textAlign='center'>{profile.rating}%</Text>\n            <Text>Rating</Text>\n          </Box>\n        </Box>\n      </Box>\n      <Divider borderColor='gray.400' />\n      {/* TODO: Posts of user. If no posts, show text. */}\n      {/* // TODO: Preliminary */}\n      {isOwnProfile && false && (\n        <Box marginTop={8}>\n          <Button\n            onClick={(): void => {\n              history.push('/account');\n              localStorage.removeItem(LOCAL_STORAGE_AUTH_TOKEN_KEY);\n              dispatch(loggedOut());\n            }}\n            variant='ghost'\n            variantColor='blue'\n          >\n            Log out\n          </Button>\n        </Box>\n      )}\n    </Box>\n  );\n};\n"],"sourceRoot":""}