{"version":3,"sources":["../node_modules/@chakra-ui/core/dist/es/Heading/index.js","../node_modules/@chakra-ui/core/dist/es/FormLabel/index.js","../node_modules/@chakra-ui/core/dist/es/Textarea/index.js","../node_modules/@chakra-ui/core/dist/es/FormHelperText/index.js","features/submit/Submit.tsx"],"names":["sizes","xl","lg","md","sm","xs","Heading","forwardRef","_ref","ref","_ref$size","size","props","_objectWithoutPropertiesLoose","jsx","Box","_extends","as","fontSize","lineHeight","fontWeight","fontFamily","displayName","RequiredIndicator","colorMode","useColorMode","ml","color","light","dark","children","FormLabel","formControl","useFormControl","pr","pb","opacity","isDisabled","textAlign","verticalAlign","display","isRequired","Textarea","Input","py","minHeight","_ref$minHeight","onInput","_useState","useState","height","setHeight","ownRef","useRef","textareaRef","useLayoutEffect","current","scrollHeight","rows","event","setTimeout","css","resize","overflow","FormHelperText","Text","mt","id","Submit","dispatch","useDispatch","toast","useToast","useSelector","selectAsync","error","loading","ownProfile","selectOwnProfile","profile","title","setTitle","text","setText","imageInput","responsiveBoxProps","marginTop","cityName","onSubmit","e","preventDefault","submitted","image","description","status","duration","isClosable","FormControl","htmlFor","maxLength","minLength","onChange","target","value","type","placeholder","accept","Button","isLoading","variantColor","Alert","variant"],"mappings":"0IAAA,yDAOIA,EAAQ,CACV,MAAO,CAAC,MAAO,KAAM,OACrBC,GAAI,CAAC,MAAO,KAAM,OAClBC,GAAI,CAAC,KAAM,KAAM,OACjBC,GAAI,KACJC,GAAI,KACJC,GAAI,MAEFC,EAAUC,sBAAW,SAAUC,EAAMC,GACvC,IAAIC,EAAYF,EAAKG,KACjBA,OAAqB,IAAdD,EAAuB,KAAOA,EACrCE,EAAQC,IAA8BL,EAAM,CAAC,SAEjD,OAAOM,YAAIC,IAAKC,IAAS,CACvBP,IAAKA,EACLQ,GAAI,KACJC,SAAUlB,EAAMW,GAChBQ,WAAY,UACZC,WAAY,OACZC,WAAY,WACXT,OAELN,EAAQgB,YAAc,UACPhB,O,iCC9Bf,yEASWiB,EAAoB,SAA2BX,GACxD,IACIY,EADgBC,cACUD,UAM9B,OAAOV,YAAIC,IAAKC,IAAS,CACvBC,GAAI,OACJS,GAAI,EACJC,MAPU,CACVC,MAAO,UACPC,KAAM,WAKOL,GACb,cAAe,OACfM,SAAU,KACTlB,KAEMmB,EAAYxB,sBAAW,SAAUC,EAAMC,GAChD,IAAIqB,EAAWtB,EAAKsB,SAChBlB,EAAQC,IAA8BL,EAAM,CAAC,aAE7CwB,EAAcC,YAAerB,GACjC,OAAOE,YAAIC,IAAKC,IAAS,CACvBP,IAAKA,EACLS,SAAU,KACVgB,GAAI,OACJC,GAAI,MACJC,QAASJ,EAAYK,WAAa,MAAQ,IAC1CjB,WAAY,SACZkB,UAAW,OACXC,cAAe,SACfC,QAAS,eACTvB,GAAI,SACHL,GAAQkB,EAAUE,EAAYS,YAAc3B,YAAIS,EAAmB,UAExEQ,EAAUT,YAAc,YACTS,O,qNCrCXW,EAAWnC,sBAAW,SAAUK,EAAOH,GACzC,OAAOK,YAAI6B,IAAO3B,IAAS,CACzB4B,GAAI,MACJC,UAAW,OACX1B,WAAY,QACZV,IAAKA,EACLQ,GAAI,YACHL,OAEL8B,EAASpB,YAAc,WACRoB,QACgBnC,sBAAW,SAAUC,EAAMC,GACxD,IAAIqC,EAAiBtC,EAAKqC,UACtBA,OAA+B,IAAnBC,EAA4B,OAASA,EACjDC,EAAUvC,EAAKuC,QACfnC,EAAQC,IAA8BL,EAAM,CAAC,YAAa,YAE1DwC,EAAYC,mBAAS,GACrBC,EAASF,EAAU,GACnBG,EAAYH,EAAU,GAEtBI,EAASC,mBACTC,EAAc7C,GAAO2C,EACzBG,2BAAgB,WACVD,EAAYE,SACdL,EAAUG,EAAYE,QAAQC,gBAE/B,CAACH,IAaJ,OAAOxC,YAAI4B,EAAU1B,IAAS,CAC5B0C,KAAM,IACNX,QAbgB,SAAqBY,GACjCL,EAAYE,SACdI,YAAW,WACTT,EAAU,QACVA,EAAUG,EAAYE,QAAQC,gBAC7B,GAGLV,GAAWA,EAAQY,IAMnBE,IAAK,CACHX,OAAQA,EACRY,OAAQ,OACRC,SAAU,SACVlB,UAAWA,GAEbpC,IAAK6C,GACJ1C,OAEaU,YAAc,oB,YCnDrB0C,EAAiBzD,sBAAW,SAAUK,EAAOH,GACtD,IACIe,EADgBC,cACUD,UAE1BQ,EAAcC,YAAerB,GAKjC,OAAOE,YAAImD,IAAMjD,IAAS,CACxBkD,GAAI,EACJzD,IAAKA,EACL0D,GAAInC,EAAYmC,GAAKnC,EAAYmC,GAAK,aAAe,KACrDxC,MARU,CACVC,MAAO,WACPC,KAAM,kBAMOL,GACbL,WAAY,SACZD,SAAU,MACTN,OAELoD,EAAe1C,YAAc,iBACd0C,Q,wCCUFI,EAAiB,WAAO,IAAD,EAC5BC,EAAWC,cAEXC,EAAQC,cAHoB,EAKPC,YAAYC,KAA/BC,EAL0B,EAK1BA,MAAOC,EALmB,EAKnBA,QACTC,EAAU,UAAGJ,YAAYK,KAAkBC,eAAjC,QAA4C,KAN1B,EAQR9B,mBAAS,IARD,mBAQ3B+B,EAR2B,KAQpBC,EARoB,OASVhC,mBAAS,IATC,mBAS3BiC,EAT2B,KASrBC,EATqB,KAU5BC,EAAa/B,iBAAO,MAI1B,OACE,kBAACtC,EAAA,EAAQsE,IACP,kBAAC/E,EAAA,EAAD,CAASW,GAAG,KAAKN,KAAK,MAAtB,iBAICkE,GACC,kBAACZ,EAAA,EAAD,CAAMtC,MAAM,WAAW2D,UAAW,GAAlC,6CAC6CT,EAAWU,SADxD,KAKF,0BACEC,SAAU,SAACC,GACTA,EAAEC,iBAEFrB,EACEsB,YAAU,CAERC,MAAO,UACPV,OACAF,WAIJT,EAAM,CACJS,MAAO,yBACPa,YAAa,+CACbC,OAAQ,OACRC,SAAU,IACVC,YAAY,MAIhB,kBAACC,EAAA,EAAD,CAAaX,UAAW,GACtB,kBAACvD,EAAA,EAAD,CAAWmE,QAtDF,cAsDT,SACA,kBAACvD,EAAA,EAAD,CACEwB,GAxDO,aAyDP1B,YAAU,EACV6C,UAAW,EACXa,UAnEa,GAoEbC,UArEa,EAsEbC,SAAU,SAACZ,GACTR,EAAUQ,EAAEa,OAA4BC,QAE1CC,KAAK,OACLD,MAAOvB,KAGX,kBAACiB,EAAA,EAAD,CAAaX,UAAW,GACtB,kBAACvD,EAAA,EAAD,CAAWmE,QApEH,aAoER,QACA,kBAAC,EAAD,CACE/B,GAtEM,YAuEN1B,YAAU,EACV6C,UAAW,EACXa,UA9EY,MA+EZC,UAhFY,EAiFZC,SAAU,SAACZ,GACTN,EAASM,EAAEa,OAA4BC,QAEzCE,YAjFiB,4CAkFjBF,MAAOrB,KAGX,kBAACe,EAAA,EAAD,CAAaX,UAAW,GACtB,kBAACvD,EAAA,EAAD,CAAWmE,QAlFF,cAkFT,SACA,kBAACvD,EAAA,EAAD,CAAO+D,OAAO,wBAAwBvC,GAnF7B,aAmF6CmB,UAAW,EAAG7E,IAAK2E,EAAYoB,KAAK,SAC1F,kBAAC,EAAD,CAAgBrC,GAnFK,0BAmFrB,oCAEF,kBAACwC,EAAA,EAAD,CAAQC,UAAuB,YAAZhC,EAAuBU,UAAW,GAAIkB,KAAK,SAASK,aAAa,QAApF,WAIDlC,GACC,kBAACmC,EAAA,EAAD,CAAOxB,UAAW,EAAGQ,OAAO,QAAQiB,QAAQ,eAC1C,kBAACD,EAAA,EAAD,MACCnC","file":"static/js/5.3a05cb20.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\n\n/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport Box from \"../Box\";\nimport { forwardRef } from \"react\";\nvar sizes = {\n  \"2xl\": [\"4xl\", null, \"5xl\"],\n  xl: [\"3xl\", null, \"4xl\"],\n  lg: [\"xl\", null, \"2xl\"],\n  md: \"xl\",\n  sm: \"md\",\n  xs: \"sm\"\n};\nvar Heading = forwardRef(function (_ref, ref) {\n  var _ref$size = _ref.size,\n      size = _ref$size === void 0 ? \"xl\" : _ref$size,\n      props = _objectWithoutPropertiesLoose(_ref, [\"size\"]);\n\n  return jsx(Box, _extends({\n    ref: ref,\n    as: \"h2\",\n    fontSize: sizes[size],\n    lineHeight: \"shorter\",\n    fontWeight: \"bold\",\n    fontFamily: \"heading\"\n  }, props));\n});\nHeading.displayName = \"Heading\";\nexport default Heading;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/extends\";\n\n/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport { forwardRef } from \"react\";\nimport Box from \"../Box\";\nimport { useFormControl } from \"../FormControl\";\nimport { useColorMode } from \"../ColorModeProvider\";\nexport var RequiredIndicator = function RequiredIndicator(props) {\n  var _useColorMode = useColorMode(),\n      colorMode = _useColorMode.colorMode;\n\n  var color = {\n    light: \"red.500\",\n    dark: \"red.300\"\n  };\n  return jsx(Box, _extends({\n    as: \"span\",\n    ml: 1,\n    color: color[colorMode],\n    \"aria-hidden\": \"true\",\n    children: \"*\"\n  }, props));\n};\nexport var FormLabel = forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\"]);\n\n  var formControl = useFormControl(props);\n  return jsx(Box, _extends({\n    ref: ref,\n    fontSize: \"md\",\n    pr: \"12px\",\n    pb: \"4px\",\n    opacity: formControl.isDisabled ? \"0.4\" : \"1\",\n    fontWeight: \"medium\",\n    textAlign: \"left\",\n    verticalAlign: \"middle\",\n    display: \"inline-block\",\n    as: \"label\"\n  }, props), children, formControl.isRequired && jsx(RequiredIndicator, null));\n});\nFormLabel.displayName = \"FormLabel\";\nexport default FormLabel;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/extends\";\n\n/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport { forwardRef, useLayoutEffect, useRef, useState } from \"react\";\nimport Input from \"../Input\";\nvar Textarea = forwardRef(function (props, ref) {\n  return jsx(Input, _extends({\n    py: \"8px\",\n    minHeight: \"80px\",\n    lineHeight: \"short\",\n    ref: ref,\n    as: \"textarea\"\n  }, props));\n});\nTextarea.displayName = \"Textarea\";\nexport default Textarea;\nexport var ExpandingTextarea = forwardRef(function (_ref, ref) {\n  var _ref$minHeight = _ref.minHeight,\n      minHeight = _ref$minHeight === void 0 ? \"39px\" : _ref$minHeight,\n      onInput = _ref.onInput,\n      props = _objectWithoutPropertiesLoose(_ref, [\"minHeight\", \"onInput\"]);\n\n  var _useState = useState(0),\n      height = _useState[0],\n      setHeight = _useState[1];\n\n  var ownRef = useRef();\n  var textareaRef = ref || ownRef;\n  useLayoutEffect(function () {\n    if (textareaRef.current) {\n      setHeight(textareaRef.current.scrollHeight);\n    }\n  }, [textareaRef]);\n\n  var handleInput = function handleInput(event) {\n    if (textareaRef.current) {\n      setTimeout(function () {\n        setHeight(\"auto\");\n        setHeight(textareaRef.current.scrollHeight);\n      }, 0);\n    }\n\n    onInput && onInput(event);\n  };\n\n  return jsx(Textarea, _extends({\n    rows: \"1\",\n    onInput: handleInput,\n    css: {\n      height: height,\n      resize: \"none\",\n      overflow: \"hidden\",\n      minHeight: minHeight\n    },\n    ref: textareaRef\n  }, props));\n});\nExpandingTextarea.displayName = \"ExpandingTextarea\";","import _extends from \"@babel/runtime/helpers/extends\";\n\n/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport { forwardRef } from \"react\";\nimport { useFormControl } from \"../FormControl\";\nimport { useColorMode } from \"../ColorModeProvider\";\nimport Text from \"../Text\";\nexport var FormHelperText = forwardRef(function (props, ref) {\n  var _useColorMode = useColorMode(),\n      colorMode = _useColorMode.colorMode;\n\n  var formControl = useFormControl(props);\n  var color = {\n    light: \"gray.500\",\n    dark: \"whiteAlpha.600\"\n  };\n  return jsx(Text, _extends({\n    mt: 2,\n    ref: ref,\n    id: formControl.id ? formControl.id + \"-help-text\" : null,\n    color: color[colorMode],\n    lineHeight: \"normal\",\n    fontSize: \"sm\"\n  }, props));\n});\nFormHelperText.displayName = \"FormHelperText\";\nexport default FormHelperText;","import React, { FC, FormEvent, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Alert,\n  AlertIcon,\n  Box,\n  Button,\n  FormControl,\n  FormHelperText,\n  FormLabel,\n  Heading,\n  Input,\n  Text,\n  Textarea,\n  useToast,\n} from '@chakra-ui/core';\n\nimport { selectAsync, submitted } from './submitSlice';\nimport { selectOwnProfile } from '../user/userSlice';\n\nimport { responsiveBoxProps } from '../../app/styles';\n\n// TODO: Talk with BE.\nconst TITLE_MIN_LENGTH = 4;\nconst TITLE_MAX_LENGTH = 32;\n\n// TODO: Talk with BE.\nconst TEXT_MIN_LENGTH = 4;\nconst TEXT_MAX_LENGTH = 65536;\n\nconst TEXTAREA_PLACEHOLDER = 'Share something with your local community';\n\nconst ARIA_TITLE = 'post-title';\nconst ARIA_TEXT = 'post-text';\nconst ARIA_IMAGE = 'post-image';\nconst ARIA_IMAGE_HELPER_TEXT = 'post-image-helper-text';\n\nexport const Submit: FC<{}> = () => {\n  const dispatch = useDispatch();\n\n  const toast = useToast();\n\n  const { error, loading } = useSelector(selectAsync);\n  const ownProfile = useSelector(selectOwnProfile).profile ?? null;\n\n  const [title, setTitle] = useState('');\n  const [text, setText] = useState('');\n  const imageInput = useRef(null);\n\n  // TODO: Display location\n\n  return (\n    <Box {...responsiveBoxProps}>\n      <Heading as='h2' size='lg'>\n        Submit a post\n      </Heading>\n\n      {ownProfile && (\n        <Text color='gray.600' marginTop={8}>\n          This post will only appear in the feed of {ownProfile.cityName}.\n        </Text>\n      )}\n\n      <form\n        onSubmit={(e): void => {\n          e.preventDefault();\n\n          dispatch(\n            submitted({\n              // TODO: Handle image content\n              image: 'todo...',\n              text,\n              title,\n            }),\n          );\n\n          toast({\n            title: \"Post couldn't be saved\",\n            description: 'This demo does not save submitted posts yet.',\n            status: 'info',\n            duration: 9000,\n            isClosable: true,\n          });\n        }}\n      >\n        <FormControl marginTop={8}>\n          <FormLabel htmlFor={ARIA_TITLE}>Title</FormLabel>\n          <Input\n            id={ARIA_TITLE}\n            isRequired\n            marginTop={2}\n            maxLength={TITLE_MAX_LENGTH}\n            minLength={TITLE_MIN_LENGTH}\n            onChange={(e: FormEvent<HTMLInputElement>): void => {\n              setTitle((e.target as HTMLInputElement).value);\n            }}\n            type='text'\n            value={title}\n          />\n        </FormControl>\n        <FormControl marginTop={8}>\n          <FormLabel htmlFor={ARIA_TEXT}>Text</FormLabel>\n          <Textarea\n            id={ARIA_TEXT}\n            isRequired\n            marginTop={2}\n            maxLength={TEXT_MAX_LENGTH}\n            minLength={TEXT_MIN_LENGTH}\n            onChange={(e: FormEvent<HTMLInputElement>): void => {\n              setText((e.target as HTMLInputElement).value);\n            }}\n            placeholder={TEXTAREA_PLACEHOLDER}\n            value={text}\n          />\n        </FormControl>\n        <FormControl marginTop={8}>\n          <FormLabel htmlFor={ARIA_IMAGE}>Image</FormLabel>\n          <Input accept='image/png, image/jpeg' id={ARIA_IMAGE} marginTop={2} ref={imageInput} type='file' />\n          <FormHelperText id={ARIA_IMAGE_HELPER_TEXT}>Providing an image is optional.</FormHelperText>\n        </FormControl>\n        <Button isLoading={loading === 'pending'} marginTop={10} type='submit' variantColor='blue'>\n          Submit\n        </Button>\n      </form>\n      {error && (\n        <Alert marginTop={6} status='error' variant='left-accent'>\n          <AlertIcon />\n          {error}\n        </Alert>\n      )}\n    </Box>\n  );\n};\n"],"sourceRoot":""}