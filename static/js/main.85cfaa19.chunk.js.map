{"version":3,"sources":["app/AppRoute.tsx","components/DelayedFallback.tsx","features/feed/feedSlice.ts","features/feed/Feed.tsx","features/feed/FeedHeader.tsx","utils/dom-utils.ts","features/feed/FeedPage.tsx","components/TabBarButton.tsx","components/TabBar.tsx","app/App.tsx","app/store.ts","serviceWorker.ts","index.tsx","features/user/userSlice.ts","app/router.ts","utils/fetch.ts","app/styles.tsx","features/submit/submitSlice.ts"],"names":["UserState","DelayedFallback","useState","show","setShow","useEffect","timeout","setTimeout","clearTimeout","Spinner","label","AppRoute","children","lazyload","path","redirect","isLoggedIn","useSelector","selectIsLoggedIn","when","LoggedIn","LoggedOut","to","pathname","Component","fallback","loadRequested","createAsyncThunk","_category","Promise","resolve","a","slice","createSlice","name","initialState","categories","reduce","acc","category","async","error","loading","posts","reducers","extraReducers","pending","type","state","action","meta","arg","fulfilled","feed","payload","rejected","message","feedReducer","reducer","Feed","dispatch","useDispatch","createSelector","selectByCategory","Box","paddingX","Location","profile","selectOwnProfile","Text","as","fontWeight","textDecoration","cityName","FeedHeader","_props","color","fontSize","firstName","marginTop","InputGroup","Icon","Input","placeholder","responsiveBoxProps","Button","size","variantColor","getBodyFontSize","getComputedStyle","document","querySelector","tabs","id","FeedPage","useLocation","tabsSize","widthPX","parseFloat","convertWidthToEM","useWindowWidth","leading","wait","Tabs","map","aria-controls","aria-selected","Link","key","tabIndex","exact","from","TabBarButton","ariaLabel","icon","isActive","alignItems","display","flexDirection","paddingY","IconButton","aria-label","variant","Submit","lazy","then","default","Profile","Account","Login","ResetPassword","Registration","Page404","buttons","home","submit","account","loggedInButtons","loggedOutButtons","TabBar","loggedIn","location","Object","values","backgroundColor","borderTop","borderColor","bottom","position","width","zIndex","buttonProps","flex","startsWith","App","authTokenExists","localStorage","getItem","LOCAL_STORAGE_AUTH_TOKEN_KEY","authTokenChecked","ThemeProvider","theme","CSSReset","basename","ROUTER_BASENAME","history","marginBottom","persistConfig","storage","blacklist","userPersistConfig","whitelist","rootReducer","combineReducers","submitReducer","user","persistReducer","userReducer","persistedReducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","isLocalhost","persistStore","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","MOCKED_PROFILE","email","lastName","postsCount","rating","username","body","JSON","stringify","method","data","push","setItem","token","registered","otherProfiles","loggedOut","_action","actions","selectAsync","selectOtherProfile","otherProfile","createHashHistory","DEFAULT_OPTIONS","credentials","options","json","ok","Error","errorMessage","marginX","chakraTheme","icons","ioMdEye","viewBox","ioMdEyeOff","mdAdd","mdHome","mdPerson","submitted"],"mappings":"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","file":"static/js/main.85cfaa19.chunk.js","sourcesContent":["import React, { FC, ReactElement, Suspense } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Redirect, Route } from 'react-router-dom';\n\nimport { DelayedFallback } from '../components/DelayedFallback';\n\nimport { selectIsLoggedIn } from '../features/user/userSlice';\n\nimport { AppRoutes } from './router';\n\nexport enum UserState {\n  LoggedIn,\n  LoggedOut,\n}\n\ntype Props = {\n  children: ReactElement;\n  lazyload: boolean;\n  path: AppRoutes | null;\n  redirect?: {\n    path: AppRoutes;\n    when: UserState;\n  };\n};\n\nexport const AppRoute: FC<Props> = ({ children, lazyload, path, redirect }: Props) => {\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const shouldRedirect =\n    (redirect?.when === UserState.LoggedIn && isLoggedIn) || (redirect?.when === UserState.LoggedOut && !isLoggedIn);\n  if (shouldRedirect) {\n    return <Redirect to={{ pathname: redirect?.path }} />;\n  }\n\n  const Component = <Route path={path || ''}>{children}</Route>;\n  return lazyload ? <Suspense fallback={<DelayedFallback />}>{Component}</Suspense> : Component;\n};\n","import React, { FC, useEffect, useState } from 'react';\nimport { Spinner } from '@chakra-ui/core';\n\nexport const DelayedFallback: FC = () => {\n  const [show, setShow] = useState(false);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => setShow(true), 500);\n    return (): void => {\n      clearTimeout(timeout);\n    };\n  }, []);\n\n  return <>{show && <Spinner label='Loading...' />}</>;\n};\n","import { createAsyncThunk, createSelector, createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { RootState } from '../../app/store';\n\nconst SLICE_NAME = 'feed';\n\ntype AsyncState = {\n  error: string | null;\n  loading: 'idle' | 'pending';\n};\n\nexport type Category = 'news' | 'medical_supply' | 'grocery' | 'advice';\n\nconst CATEGORIES: Category[] = ['advice', 'grocery', 'medical_supply', 'news'];\n\ntype Post = {\n  category: Category;\n  date: string;\n  imageURL?: string;\n  rating: number;\n  text: string;\n  title: string;\n  userImageURL?: string;\n  username: number;\n};\n\ntype Categories = { [key in Category]: { async: AsyncState; posts: Post[] | null } };\n\ntype State = {\n  categories: Categories;\n};\n\nexport const loadRequested = createAsyncThunk(`${SLICE_NAME}/loadRequested`, (_category: Category) =>\n  Promise.resolve([\n    {\n      a: true,\n    },\n  ]),\n);\n\nexport const slice = createSlice({\n  name: SLICE_NAME,\n  initialState: {\n    categories: CATEGORIES.reduce(\n      (acc, category: Category) => ({\n        ...acc,\n        [category]: {\n          async: {\n            error: null,\n            loading: 'idle',\n          },\n          posts: null,\n        },\n      }),\n      {} as Categories,\n    ),\n  } as State,\n  reducers: {},\n  extraReducers: {\n    [loadRequested.pending.type]: (state, action): void => {\n      // @ts-ignore\n      const category: Category = action.meta.arg;\n\n      const async = state.categories[category].async;\n\n      if (async.loading === 'idle') {\n        async.loading = 'pending';\n      }\n    },\n    [loadRequested.fulfilled.type]: (state, action: PayloadAction<Post[]>): void => {\n      // @ts-ignore\n      const category: Category = action.meta.arg;\n\n      const feed = state.categories[category];\n      const async = feed.async;\n\n      if (async.loading === 'pending') {\n        async.loading = 'idle';\n        feed.posts = action.payload;\n      }\n    },\n    [loadRequested.rejected.type]: (state, action: { error: Error }): void => {\n      // @ts-ignore\n      const category: Category = action.meta.arg;\n\n      const async = state.categories[category].async;\n\n      if (async.loading === 'pending') {\n        async.loading = 'idle';\n        async.error = action.error.message;\n      }\n    },\n  },\n});\n\nexport const selectByCategory = (state: RootState, category: Category): State['categories'][Category] =>\n  createSelector(\n    (state: RootState) => state.feed.categories,\n    (categories) => categories[category],\n  )(state);\n\nexport const feedReducer = slice.reducer;\n","import React, { FC, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Box } from '@chakra-ui/core';\n\nimport { Category, loadRequested, selectByCategory } from './feedSlice';\n\nimport { RootState } from '../../app/store';\n\ntype Props = {\n  category: Category;\n};\n\nexport const Feed: FC<Props> = ({ category }: Props) => {\n  const dispatch = useDispatch();\n  const { async, posts } = useSelector((state: RootState) => selectByCategory(state, category));\n\n  useEffect(() => {\n    if (posts === null) {\n      dispatch(loadRequested(category));\n    }\n  }, [category, dispatch, posts]);\n\n  if (async.error) {\n    // TODO:\n    return <h1>An error occured</h1>;\n  }\n\n  if (async.loading === 'pending') {\n    // TODO:\n    return <h1>Loading...</h1>;\n  }\n\n  return <Box paddingX={4}>{category} feed</Box>;\n};\n","import React, { FC } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Box, Button, Icon, Input, InputGroup, InputLeftElement, Text } from '@chakra-ui/core';\n\nimport { selectOwnProfile } from '../user/userSlice';\n\nimport { AppRoutes } from '../../app/router';\nimport { responsiveBoxProps } from '../../app/styles';\n\ntype Props = {};\n\nconst INPUT_PLACEHOLDER = 'Use keywords to search for information';\n\nconst Location: FC<{}> = () => {\n  const profile = useSelector(selectOwnProfile);\n\n  if (profile === null) {\n    return null;\n  }\n\n  return (\n    <Text as='a' fontWeight='semibold' textDecoration='underline'>\n      {profile.cityName}\n    </Text>\n  );\n};\n\nexport const FeedHeader: FC<Props> = (_props: Props) => {\n  const profile = useSelector(selectOwnProfile);\n\n  if (!profile) {\n    return (\n      <Box {...responsiveBoxProps}>\n        <p>Sign in to vote and contribute.</p>\n        <RouterLink to={'/account/login' as AppRoutes}>\n          <Button marginTop={4} size='sm' variantColor='blue'>\n            Sign in\n          </Button>\n        </RouterLink>\n      </Box>\n    );\n  }\n\n  return (\n    <Box paddingX={4}>\n      <Text color='gray.600' fontSize='lg'>\n        Good morning, {profile.firstName || profile.cityName}\n      </Text>\n      <Text color='gray.600' fontSize='lg' marginTop={1}>\n        Here are the latest for <Location />\n      </Text>\n      <InputGroup marginTop={4}>\n        <InputLeftElement>\n          <Icon color='gray.400' name='search' />\n        </InputLeftElement>\n        <Input placeholder={INPUT_PLACEHOLDER} type='text' />\n      </InputGroup>\n    </Box>\n  );\n};\n","export const convertWidthToEM = (widthPX: number): number => widthPX / parseFloat(getBodyFontSize());\n\n// @ts-ignore\nconst getBodyFontSize = (): string => getComputedStyle(document.querySelector('body'))['font-size'];\n","import React, { FC } from 'react';\nimport { Link, Redirect, Route, Switch, useLocation } from 'react-router-dom';\nimport { Box, Tab, TabList, TabPanels, Tabs } from '@chakra-ui/core';\nimport { useWindowWidth } from '@react-hook/window-size';\n\nimport { Feed } from './Feed';\nimport { FeedHeader } from './FeedHeader';\n\nimport { Category } from './feedSlice';\n\nimport { convertWidthToEM } from '../../utils/dom-utils';\n\nconst ARIA_TABS = 'tabs';\nconst ARIA_NEWS_TAB = 'tabs-news-tab';\nconst ARIA_MEDICAL_SUPPLY_TAB = 'tabs-medical-supply-tab';\nconst ARIA_GROCERY_TAB = 'tabs-grocery-tab';\nconst ARIA_ADVICE_TAB = 'tabs-advice-tab';\n\nconst NEWS_PATH = '/feed/news';\nconst MEDICAL_SUPPLY_PATH = '/feed/medical-supply';\nconst GROCERY_PATH = '/feed/grocery';\nconst ADVICE_PATH = '/feed/advice';\n\nconst tabs: {\n  category: Category;\n  id: string;\n  name: string;\n  to: string;\n}[] = [\n  { category: 'news', id: ARIA_NEWS_TAB, name: 'News', to: NEWS_PATH },\n  { category: 'medical_supply', id: ARIA_MEDICAL_SUPPLY_TAB, name: 'Medical Supply', to: MEDICAL_SUPPLY_PATH },\n  { category: 'grocery', id: ARIA_GROCERY_TAB, name: 'Grocery', to: GROCERY_PATH },\n  { category: 'advice', id: ARIA_ADVICE_TAB, name: 'Advice', to: ADVICE_PATH },\n];\n\n// Taken from theme.breakpoints\nconst TABS_SIZE_BREAKPOINT_EM = 30;\n\nexport const FeedPage: FC = () => {\n  const { pathname } = useLocation();\n\n  // Workaround for showing smaller text on mobile.\n  const widthPX = useWindowWidth(0, { leading: true, wait: 250 });\n  const widthEM = convertWidthToEM(widthPX);\n  const tabsSize = widthEM <= TABS_SIZE_BREAKPOINT_EM ? 'sm' : 'md';\n\n  return (\n    <Box marginTop={2}>\n      <FeedHeader />\n      <Tabs marginTop={6} size={tabsSize}>\n        <TabList id={ARIA_TABS}>\n          {tabs.map(({ id, name, to }) => (\n            <Tab\n              aria-controls={ARIA_TABS}\n              aria-selected={pathname === to}\n              as={Link}\n              id={id}\n              key={name}\n              tabIndex={0}\n              to={to}\n            >\n              {name}\n            </Tab>\n          ))}\n        </TabList>\n\n        <TabPanels marginTop={8}>\n          <Switch>\n            {tabs.map(({ category, to }) => (\n              <Route exact key={category} path={to}>\n                <Feed category={category} />\n              </Route>\n            ))}\n            <Redirect from='/' to={NEWS_PATH} />\n          </Switch>\n        </TabPanels>\n      </Tabs>\n    </Box>\n  );\n};\n","import React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Box, IconButton, IconButtonProps, Text } from '@chakra-ui/core';\n\nimport { ThemeType } from '../app/styles';\n\ntype Props = {\n  ariaLabel: IconButtonProps['aria-label'];\n  icon: keyof ThemeType['icons'];\n  isActive: boolean;\n  name: string;\n  to: string;\n};\n\nexport const TabBarButton: FC<Props> = ({ ariaLabel, icon, isActive, name, to }: Props) => (\n  <Link to={to}>\n    <Box alignItems='center' display='flex' flexDirection='column' paddingY={2}>\n      <IconButton\n        aria-label={ariaLabel}\n        as='span'\n        // @ts-ignore\n        icon={icon}\n        isActive={isActive}\n        size='md'\n        variant='link'\n        variantColor='gray'\n      />\n      <Text as='span' color={isActive ? 'black' : 'gray.600'} fontSize='sm'>\n        {name}\n      </Text>\n    </Box>\n  </Link>\n);\n","import React, { FC, lazy } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Redirect, Switch, useLocation } from 'react-router-dom';\nimport { Box } from '@chakra-ui/core';\n\nimport { AppRoute, UserState } from '../app/AppRoute';\nimport { FeedPage } from '../features/feed/FeedPage';\nimport { TabBarButton } from './TabBarButton';\n\nimport { selectIsLoggedIn } from '../features/user/userSlice';\n\nimport { AppRoutes } from '../app/router';\nimport { ThemeType } from '../app/styles';\n\nconst Submit = lazy(() =>\n  import('../features/submit/Submit').then(({ Submit }) => ({\n    default: Submit,\n  })),\n);\n\nconst Profile = lazy(() =>\n  import('../features/user/Profile').then(({ Profile }) => ({\n    default: Profile,\n  })),\n);\n\nconst Account = lazy(() =>\n  import('../features/user/Account').then(({ Account }) => ({\n    default: Account,\n  })),\n);\n\nconst Login = lazy(() =>\n  import('../features/user/Login').then(({ Login }) => ({\n    default: Login,\n  })),\n);\n\nconst ResetPassword = lazy(() =>\n  import('../features/user/ResetPassword').then(({ ResetPassword }) => ({\n    default: ResetPassword,\n  })),\n);\n\nconst Registration = lazy(() =>\n  import('../features/user/Registration').then(({ Registration }) => ({\n    default: Registration,\n  })),\n);\n\nconst Page404 = lazy(() =>\n  import('./Page404').then(({ Page404 }) => ({\n    default: Page404,\n  })),\n);\n\nconst buttons: {\n  [key: string]: {\n    ariaLabel: string;\n    icon: keyof ThemeType['icons'];\n    name: string;\n    to: AppRoutes;\n  };\n} = {\n  home: { ariaLabel: 'home button', icon: 'mdHome', name: 'Home', to: '/feed' },\n  submit: { ariaLabel: 'submit button', icon: 'mdAdd', name: 'Submit', to: '/submit' },\n  profile: { ariaLabel: 'profile button', icon: 'mdPerson', name: 'Profile', to: '/profile/me' },\n  account: { ariaLabel: 'account button', icon: 'mdPerson', name: 'Account', to: '/account' },\n};\n\nconst loggedInButtons = {\n  home: buttons.home,\n  submit: buttons.submit,\n  profile: buttons.profile,\n};\n\nconst loggedOutButtons = {\n  home: buttons.home,\n  submit: buttons.submit,\n  account: buttons.account,\n};\n\nconst getButtons = (loggedIn: boolean): typeof buttons[number][] =>\n  Object.values(loggedIn ? loggedInButtons : loggedOutButtons);\n\nexport const TabBar: FC<{}> = () => {\n  const location = useLocation();\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n\n  const buttons = getButtons(isLoggedIn);\n\n  return (\n    <>\n      <Switch>\n        <AppRoute lazyload={false} path='/feed'>\n          <FeedPage />\n        </AppRoute>\n        <AppRoute lazyload path='/submit'>\n          <Submit />\n        </AppRoute>\n        <AppRoute\n          lazyload\n          path='/profile/me'\n          redirect={{\n            path: '/account',\n            when: UserState.LoggedOut,\n          }}\n        >\n          <Profile />\n        </AppRoute>\n        <AppRoute\n          lazyload\n          path='/account/reset-password'\n          redirect={{\n            path: '/profile/me',\n            when: UserState.LoggedIn,\n          }}\n        >\n          <ResetPassword />\n        </AppRoute>\n        <AppRoute\n          lazyload\n          path='/account/login'\n          redirect={{\n            path: '/profile/me',\n            when: UserState.LoggedIn,\n          }}\n        >\n          <Login />\n        </AppRoute>\n        <AppRoute\n          lazyload\n          path='/account/register'\n          redirect={{\n            path: '/profile/me',\n            when: UserState.LoggedIn,\n          }}\n        >\n          <Registration />\n        </AppRoute>\n        <AppRoute\n          lazyload\n          path='/account'\n          redirect={{\n            path: '/profile/me',\n            when: UserState.LoggedIn,\n          }}\n        >\n          <Account />\n        </AppRoute>\n        <Redirect exact from='/profile' to={'/profile/me' as AppRoutes} />\n        <AppRoute lazyload path='/profile'>\n          <Profile />\n        </AppRoute>\n        <Redirect exact from='/' to={'/feed' as AppRoutes} />\n        <AppRoute lazyload path={null}>\n          <Page404 />\n        </AppRoute>\n      </Switch>\n\n      <nav>\n        <Box\n          backgroundColor='white'\n          borderTop='1px solid'\n          borderColor='gray.300'\n          bottom='0'\n          display='flex'\n          position='fixed'\n          width='100%'\n          zIndex={1}\n        >\n          {buttons.map((buttonProps) => (\n            <Box flex='1 1 0' key={buttonProps.name}>\n              <TabBarButton {...buttonProps} isActive={location.pathname.startsWith(buttonProps.to)} />\n            </Box>\n          ))}\n        </Box>\n      </nav>\n    </>\n  );\n};\n","import React, { FC, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { HashRouter, Router } from 'react-router-dom';\nimport { Box, CSSReset, ThemeProvider } from '@chakra-ui/core';\n\nimport { TabBar } from '../components/TabBar';\n\nimport { history, ROUTER_BASENAME } from './router';\nimport { theme } from './styles';\nimport { authTokenChecked, LOCAL_STORAGE_AUTH_TOKEN_KEY } from '../features/user/userSlice';\n\nexport const App: FC = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const authTokenExists = !!localStorage.getItem(LOCAL_STORAGE_AUTH_TOKEN_KEY);\n    dispatch(authTokenChecked({ authTokenExists }));\n  }, [dispatch]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CSSReset />\n      <HashRouter basename={ROUTER_BASENAME}>\n        <Router history={history}>\n          <Box marginBottom={24}>\n            <TabBar />\n          </Box>\n        </Router>\n      </HashRouter>\n    </ThemeProvider>\n  );\n};\n","import { combineReducers, configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { persistReducer, persistStore, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport { feedReducer } from '../features/feed/feedSlice';\nimport { submitReducer } from '../features/submit/submitSlice';\nimport { userReducer } from '../features/user/userSlice';\n\nexport type AppDispatch = typeof store.dispatch;\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  blacklist: ['feed', 'submit', 'user'],\n};\n\nconst userPersistConfig = {\n  key: 'user',\n  storage: storage,\n  whitelist: ['profile'],\n};\n\nconst rootReducer = combineReducers({\n  feed: feedReducer,\n  submit: submitReducer,\n  user: persistReducer(userPersistConfig, userReducer),\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n});\n\nexport const persistor = persistStore(store);\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './app/App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport { register } from './serviceWorker';\n\nReactDOM.render(\n  <StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </StrictMode>,\n  document.getElementById('root'),\n);\n\nregister();\n","import { createAsyncThunk, createSelector, createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { fetch } from '../../utils/fetch';\n\nimport { AppRoutes, history } from '../../app/router';\nimport { RootState } from '../../app/store';\n\nconst SLICE_NAME = 'user';\nexport const LOCAL_STORAGE_AUTH_TOKEN_KEY = 'token';\n\ntype AsyncState = {\n  error: string | null;\n  loading: 'idle' | 'pending';\n};\n\nexport type Profile = {\n  cityName: string;\n  email: string;\n  firstName?: string;\n  lastName?: string;\n  postsCount: number;\n  rating: number;\n  username: string;\n};\n\nexport type OtherProfile = {\n  cityName: string;\n  firstName?: string;\n  lastName?: string;\n  postsCount: number;\n  rating: number;\n  username: string;\n};\n\ntype State = {\n  async: AsyncState;\n  isLoggedIn: boolean;\n  profile: Profile | null;\n  otherProfiles: { [key: string]: OtherProfile };\n};\n\ntype LoginBody = {\n  name: string;\n  password: string;\n};\n\ntype LoginSuccess = {\n  success: boolean;\n  token: string;\n};\n\ntype RegistrationBody = {\n  country: string;\n  email: string;\n  name: string;\n  password: string;\n};\n\ntype RegistrationSuccess = {\n  success: boolean;\n  token: string;\n};\n\nconst MOCKED_PROFILE = {\n  cityName: 'Richmond',\n  email: 'foo@bar.com',\n  firstName: 'Timothy',\n  lastName: 'Doe',\n  postsCount: 7,\n  rating: 79,\n  username: 'foo_bar_123',\n};\n\nexport const loggedIn = createAsyncThunk(`${SLICE_NAME}/loggedIn`, (body: LoginBody) =>\n  fetch<LoginSuccess>('/user/login', {\n    body: JSON.stringify(body),\n    method: 'POST',\n  }).then((data) => {\n    history.push('/feed' as AppRoutes);\n    localStorage.setItem(LOCAL_STORAGE_AUTH_TOKEN_KEY, data.token);\n    return data;\n  }),\n);\n\nexport const registered = createAsyncThunk(`${SLICE_NAME}/registered`, (body: RegistrationBody) =>\n  fetch<RegistrationSuccess>('/user', {\n    body: JSON.stringify(body),\n    method: 'POST',\n  }).then((data) => {\n    history.push('/feed' as AppRoutes);\n    localStorage.setItem(LOCAL_STORAGE_AUTH_TOKEN_KEY, data.token);\n    return data;\n  }),\n);\n\nexport const slice = createSlice({\n  name: SLICE_NAME,\n  initialState: {\n    async: {\n      error: null,\n      loading: 'idle',\n    },\n    isLoggedIn: false,\n    profile: null,\n    otherProfiles: {},\n  } as State,\n  reducers: {\n    authTokenChecked: (state, action: PayloadAction<{ authTokenExists: boolean }>): void => {\n      state.isLoggedIn = action.payload.authTokenExists;\n    },\n    loggedOut: (state): void => {\n      state.profile = null;\n      state.isLoggedIn = false;\n    },\n  },\n  extraReducers: {\n    [loggedIn.pending.type]: (state): void => {\n      if (state.async.loading === 'idle') {\n        state.async.loading = 'pending';\n      }\n    },\n    [loggedIn.fulfilled.type]: (state, _action: PayloadAction<LoginSuccess>): void => {\n      if (state.async.loading === 'pending') {\n        state.async.loading = 'idle';\n        state.isLoggedIn = true;\n        // TODO: Receive profile data from BE\n        state.profile = MOCKED_PROFILE;\n      }\n    },\n    [loggedIn.rejected.type]: (state, action: { error: Error }): void => {\n      if (state.async.loading === 'pending') {\n        state.async.loading = 'idle';\n        state.async.error = action.error.message;\n      }\n    },\n    [registered.pending.type]: (state): void => {\n      if (state.async.loading === 'idle') {\n        state.async.loading = 'pending';\n      }\n    },\n    [registered.fulfilled.type]: (state, _action: PayloadAction<RegistrationSuccess>): void => {\n      if (state.async.loading === 'pending') {\n        state.async.loading = 'idle';\n        state.isLoggedIn = true;\n        // TODO: Receive profile data from BE\n        state.profile = MOCKED_PROFILE;\n      }\n    },\n    [registered.rejected.type]: (state, action: { error: Error }): void => {\n      if (state.async.loading === 'pending') {\n        state.async.loading = 'idle';\n        state.async.error = action.error.message;\n      }\n    },\n  },\n});\n\nexport const { authTokenChecked, loggedOut } = slice.actions;\n\nexport const selectAsync = (state: RootState): State['async'] =>\n  createSelector(\n    (state: RootState) => state.user.async,\n    (async) => async,\n  )(state);\n\nexport const selectIsLoggedIn = (state: RootState): State['isLoggedIn'] =>\n  createSelector(\n    (state: RootState) => state.user.isLoggedIn,\n    (isLoggedIn) => isLoggedIn,\n  )(state);\n\nexport const selectOtherProfile = (username: string) => (state: RootState): OtherProfile | undefined =>\n  createSelector(\n    (state: RootState) => state.user.otherProfiles[username],\n    (otherProfile) => otherProfile,\n  )(state);\n\nexport const selectOwnProfile = (state: RootState): Profile | null =>\n  createSelector(\n    (state: RootState) => state.user.profile,\n    (profile) => profile,\n  )(state);\n\nexport const userReducer = slice.reducer;\n","import { createHashHistory } from 'history';\n\nexport const ROUTER_BASENAME = '/';\n\nexport const history = createHashHistory({ basename: ROUTER_BASENAME });\n\nexport type AppRoutes =\n  | '/'\n  | '/account'\n  | '/account/login'\n  | '/account/register'\n  | '/account/reset-password'\n  | '/feed'\n  | '/profile'\n  | '/profile/me'\n  | '/submit';\n","const DEFAULT_OPTIONS: Parameters<typeof window.fetch>[1] = {\n  credentials: 'include',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n};\n\nconst ENDPOINT_URL =\n  process.env.NODE_ENV === 'production' ? 'https://ec2-54-89-76-249.compute-1.amazonaws.com' : 'http://localhost:8080';\n\nexport function fetch<D>(path: string, options?: object): Promise<D> {\n  return window\n    .fetch(ENDPOINT_URL + path, {\n      ...DEFAULT_OPTIONS,\n      ...options,\n    })\n    .then((response: Response) => {\n      return response.json().then((json) => {\n        if (response.ok) {\n          return json;\n        }\n\n        throw json;\n      });\n    })\n    .catch((error) => {\n      throw new Error(error.errorMessage || 'An unknown error has occured.');\n    });\n}\n","import React from 'react';\nimport { MdAdd, MdHome, MdPerson } from 'react-icons/md';\nimport { IoMdEye, IoMdEyeOff } from 'react-icons/io';\nimport { BoxProps, DefaultTheme, theme as chakraTheme } from '@chakra-ui/core';\n\nexport const responsiveBoxProps: BoxProps = {\n  marginTop: 4,\n  marginX: 'auto',\n  width: [\n    '80%', // base\n    '90%', // 480px upwards\n    '90%', // 768px upwards\n    '80%', // 992px upwards\n    '70%',\n  ],\n};\n\nexport type ThemeType = DefaultTheme & {\n  icons: DefaultTheme['icons'];\n};\n\nconst VIEW_BOX = '0 0 16 16';\n\nexport const theme: ThemeType = {\n  ...chakraTheme,\n  icons: {\n    ...chakraTheme.icons,\n    ioMdEye: {\n      path: <IoMdEye />,\n      viewBox: VIEW_BOX,\n    },\n    ioMdEyeOff: {\n      path: <IoMdEyeOff />,\n      viewBox: VIEW_BOX,\n    },\n    mdAdd: {\n      path: <MdAdd />,\n      viewBox: VIEW_BOX,\n    },\n    mdHome: {\n      path: <MdHome />,\n      viewBox: VIEW_BOX,\n    },\n    mdPerson: {\n      path: <MdPerson />,\n      viewBox: VIEW_BOX,\n    },\n  },\n};\n","import { createAsyncThunk, createSelector, createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { fetch } from '../../utils/fetch';\n\nimport { AppRoutes, history } from '../../app/router';\nimport { RootState } from '../../app/store';\n\nconst SLICE_NAME = 'submit';\n\ntype AsyncState = {\n  error: string | null;\n  loading: 'idle' | 'pending';\n};\n\ntype State = {\n  async: AsyncState;\n};\n\ntype SubmitBody = {\n  image: string | null;\n  text: string;\n  title: string;\n};\n\ntype SubmitSuccess = {\n  success: boolean;\n};\n\nexport const submitted = createAsyncThunk(`${SLICE_NAME}/submitted`, (body: SubmitBody) =>\n  fetch<SubmitSuccess>('/TODO:Route', {\n    body: JSON.stringify(body),\n    method: 'POST',\n  }).then((data) => {\n    history.push('/feed' as AppRoutes);\n    return data;\n  }),\n);\n\nexport const slice = createSlice({\n  name: SLICE_NAME,\n  initialState: {\n    async: {\n      error: null,\n      loading: 'idle',\n    },\n  } as State,\n  reducers: {},\n  extraReducers: {\n    [submitted.pending.type]: (state): void => {\n      if (state.async.loading === 'idle') {\n        state.async.loading = 'pending';\n      }\n    },\n    [submitted.fulfilled.type]: (state, _action: PayloadAction<SubmitSuccess>): void => {\n      if (state.async.loading === 'pending') {\n        state.async.loading = 'idle';\n      }\n    },\n    [submitted.rejected.type]: (state, action: { error: Error }): void => {\n      if (state.async.loading === 'pending') {\n        state.async.loading = 'idle';\n        state.async.error = action.error.message;\n      }\n    },\n  },\n});\n\nexport const selectAsync = (state: RootState): State['async'] =>\n  createSelector(\n    (state: RootState) => state.submit.async,\n    (async) => async,\n  )(state);\n\nexport const submitReducer = slice.reducer;\n"],"sourceRoot":""}